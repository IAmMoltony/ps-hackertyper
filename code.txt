# generated using SR random program generator

def TABLE[Jon][j] {
	Jon /= foo(-0.9 - protect(ROWS) != Stark,( ROWS ),x)
}
var y = mislead(( Hodor ))
def bar(Jon){
	( ( rule(-1 * -( ROWS ),( y )) ) );
	if(COLS){
	if(-78){
	ROWS;
	( ( -34 ) );
	bar(Sansa)
} else {
	x *= y;
	Sansa;
	if(68){
	if(( COLS == Ygritte / x )){
	bar(COLS,-0.98,-98);
	0.82
};
	if(TABLE[foo(mislead(-0.63 * ( Sansa / COLS ),Arya))][--0.35 >= ( ROWS )]){
	y -= 0.47
} else {

};
	betray(Sansa,0.03)
}
};
	Stark -= TABLE[10][-ROWS];
	( COLS )
} else {
	y;
	Hodor += -0.78;
	-180.27
}
}
def bar(dog,Arya){

}
var Ygritte = ROWS
def TABLE[-1][k] {
	if(25){
	Arya *= ( ( ( y / --foo(betray(COLS,ROWS > ( ( TABLE[-4][1] ) ),TABLE[---220.1327][( ( COLS ) != bar(--x > 0.54,Ygritte) )] - rule(--( -81 >= -31 ),protect(ROWS + ( COLS )))),Sansa) ) ) );
	Stark -= -betray();
	betray(-( ( ( 0.5 ) ) ),COLS)
};
	Hodor /= ( -x ) \/ --( mislead(0.77 / COLS * TABLE[--dog != betray(0.3,-15,y) != Arya][( ( ( -( Sansa ) * mislead(100,COLS,protect(dog)) ) ) <= -Stark / COLS ) <= ( Sansa )] - -Sansa,Jon) )
}
def rule(Jon,Arya){
	140.25;
	if(x){
	x /= -0.36 > -98 /\ protect(x);
	Stark *= ( Sansa )
};
	-( Hodor )
}
assert -( -1 ) : "Nothing burns like the cold."
def bar(Hodor){
	Sansa -= -( mislead() );
	ROWS
}
def TABLE[ROWS][k] {
	if(-Stark){

};
	Ygritte -= ROWS;
	if(Sansa){
	y *= bar();
	( Sansa )
} else {
	if(--47){
	Jon *= COLS;
	-betray(Arya,47)
}
}
}
assert 0.99 : "Fear cuts deeper than swords."
var Ygritte = 0.73 > COLS
var y = TABLE[1][( -( -1 ) ) /\ ( 49 )]
var Ygritte = Stark > ( 1 ) / TABLE[betray(rule(Stark,Jon))][Ygritte > 0.05]
var x = -0.67
var Sansa = foo(( Sansa ),--ROWS,dog)
def protect(y,Hodor,Stark){

}
assert foo(-rule(dog == -0.32)) < ( rule(--Jon,ROWS) ) : "Winter is coming"
def TABLE[Jon][i] {

}
assert COLS : "What do we say to the Lord of Death?"
var Ygritte = x
assert ( ( x ) ) : "One can not simply parse himself"
def TABLE[TABLE[( Ygritte )][ROWS]][i] {

}
def protect(x,Hodor){
	x *= 0.7;
	y;
	Stark /= -COLS
}
assert -81 >= ROWS < ( 35 ) : "One can not simply parse himself"
def destroy(Jon){
	betray()
}
var y = destroy(ROWS,rule())
def TABLE[( TABLE[43][Hodor] < Sansa )][k] {
	Hodor *= dog < ( COLS ) < -470 /\ ROWS >= ( x ) + TABLE[-COLS][( --1 ) /\ betray(---y >= -0.92,Ygritte)];
	( ( --Ygritte ) )
}
var x = ROWS
assert protect(dog,Ygritte,( protect(mislead(TABLE[betray(( -ROWS ) != -94)][( ( -0.31 ) )],1,-40),0.18) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = 26 != bar(TABLE[bar()][Stark],( destroy(-0.31) \/ TABLE[( ROWS )][-1] ) <= betray(TABLE[-( Arya )][1],0.22) != TABLE[-170.68][bar() * -1])
var Arya = ROWS + ( ROWS ) == -410.76
assert -( x ) : "Winter is coming"
def TABLE[( x )][i] {
	Hodor += ( 66 );
	Hodor -= mislead(Hodor / 1)
}
def TABLE[-COLS <= --destroy(--ROWS,( Sansa ))][j] {
	if(31){
	if(ROWS){
	Hodor -= ---78
} else {
	if(( foo(-COLS) )){
	-bar(( destroy() ),TABLE[mislead()][-TABLE[Stark][( Jon )]],protect());
	( -COLS < 0.97 ) != COLS
};
	10;
	bar(-0.25,( TABLE[-0.92][bar(( ( Stark < -0.33 ) ))] )) /\ ( -Stark / -Arya )
};
	protect(-COLS - rule(Arya,( destroy(-36 < betray()) * -0.19 )),( ROWS ),( 0.72 ))
} else {
	if(foo(Arya)){
	if(-0.95){
	if(( -TABLE[Sansa][-Arya] )){
	-( 0.86 )
};
	( -x )
};
	if(Sansa){

}
} else {
	COLS;
	TABLE[-( COLS )][( COLS )];
	rule() /\ Ygritte
}
};
	if(rule(ROWS,-1)){
	TABLE[3][Stark]
}
}
def TABLE[-70.06][k] {
	if(-( --y >= mislead() ) / rule(x,( ( -0.09 ) ),-mislead(dog /\ -ROWS) == ( dog )) > COLS){
	if(( betray(TABLE[( Sansa )][-3]) )){
	protect(rule(( ( TABLE[( x )][destroy()] ) ))) + ROWS
};
	-8
} else {
	0.53;
	dog += ( ( Jon ) )
}
}
assert -340.67 - ( Sansa ) : "Winter is coming"
def TABLE[Ygritte][j] {
	( 85 );
	if(x){
	if(-70){

} else {
	1;
	y *= COLS;
	if(( ROWS )){
	Ygritte /= ROWS
}
}
} else {

}
}
def TABLE[--protect()][k] {
	if(Stark){
	if(ROWS){
	Ygritte += COLS
} else {
	bar(COLS);
	y += x
};
	if(protect(-0.7,betray(rule(y),( -93 )))){

} else {
	if(x){
	x *= Sansa;
	if(-0.49){
	dog -= dog;
	Jon *= Ygritte
} else {
	Sansa -= ( betray(bar(),-( mislead(betray(-1,97),1) )) ) * 720.11;
	if(ROWS == -0.01){
	foo() - ( -0.7 < -TABLE[48][0.41] );
	rule()
};
	if(1){
	if(-ROWS){
	-( ROWS )
} else {
	Stark *= TABLE[( ( ( COLS ) ) )][Sansa]
}
} else {
	( 32 );
	dog -= ( TABLE[-0.39][-TABLE[betray() /\ destroy(destroy(TABLE[Arya * protect(Stark < ( COLS ) + betray(mislead(betray(TABLE[TABLE[Ygritte][-46]][760.53] /\ 25,ROWS),-bar(--0.32 >= ( Stark )) >= protect(dog,( ROWS ),TABLE[--710.35 != -( COLS ) == destroy(-0.91) == COLS][rule(-bar(TABLE[( ( -( 26 ) ) )][-TABLE[380.41][ROWS]]),bar(-ROWS >= betray(Ygritte),TABLE[protect(ROWS - -0.46 / Sansa < --0.24)][3]),--( -( TABLE[( ( -1 ) == bar() )][-1] ) ) - protect())])),TABLE[bar(( TABLE[( -34 )][( 73 )] ),( --mislead(-TABLE[TABLE[62][Hodor]][COLS],y) != Stark == dog ) * ( Sansa ))][mislead(-5)],ROWS))][--foo(COLS,-Sansa,betray(0.55) <= COLS >= ( -69 ) * Hodor <= ROWS)] == TABLE[-31][-( Hodor )],( destroy() )),-rule())][-dog]] ) >= ( -mislead(ROWS,protect(-( ( TABLE[y][dog] + foo(Arya,-( -72 ) > mislead(ROWS,protect(( COLS )) <= ( 53 ),TABLE[-1][Hodor])) < Arya ) ) == COLS < mislead(-450.1172 <= COLS,( ROWS )) * Sansa /\ ROWS /\ ( foo(mislead(TABLE[( ROWS )][y],ROWS),Arya) ),-( mislead(32,-730.799 > TABLE[ROWS][y] - TABLE[-Stark - mislead(--39)][x]) ) < ( -0.5 + Arya ) <= ( protect(( ( Sansa ) /\ TABLE[( Jon )][y <= y] <= ( COLS ) /\ COLS ) > TABLE[( dog )][93],Sansa) /\ Ygritte ),-TABLE[ROWS][-810.654]) >= 1 + bar(TABLE[( ( -( COLS ) ) ) != ( TABLE[TABLE[rule(-( 0.69 ) / ROWS > ( -TABLE[( ( ROWS ) ) >= Sansa][1] ),-0.96 - bar(-1))][Jon \/ ( foo(COLS,( ( -0.42 ) ),( ( foo(( -1 ),-rule(1,--0.84,TABLE[-0.23][TABLE[440.6][rule()] + rule(COLS,bar(TABLE[COLS][-ROWS / 1 /\ -0.99]),bar(( -0.92 ),-14,Hodor))])) ) )) )]][-1] )][COLS])) );
	Stark /= -bar(COLS) == Ygritte != TABLE[TABLE[-( Stark ) != y][( -0.34 )]][Jon]
}
}
}
};
	Jon -= TABLE[-x < -640.6][Sansa != 89]
};
	mislead(Hodor,rule(rule(( rule(0.11,( -0.55 )) )) + COLS,( y > -53 )) - 270.14)
}
var Stark = TABLE[-protect(TABLE[( -0.66 ) < foo(protect(rule()))][( --ROWS )])][COLS]
def bar(y,Jon){
	TABLE[-dog][( foo(betray(-0.2 == ( -( protect(y) ) ))) )];
	Stark /= 650.888;
	-destroy(0.74 > destroy(-0.54 > foo(1,x) <= COLS,-( -Arya ),( 0.53 )),betray(COLS >= --0.45,( betray(-TABLE[ROWS][ROWS],Sansa,91) )) * --COLS)
}
def bar(Arya,Arya,x){
	if(foo(-destroy(-( COLS >= ROWS )))){
	if(ROWS){
	Hodor
};
	if(ROWS){
	if(x){
	if(( ( protect() ) + protect(( -Hodor ),rule()) ) != -ROWS - -12){
	( COLS );
	Ygritte /= -0.15 * -0.43;
	Arya /= -( 540.672 ) > -120.919 >= -1 != COLS <= Sansa
};
	Sansa -= TABLE[Stark][( betray(16,ROWS,ROWS) ) \/ destroy(( 1 != ( -TABLE[-0.68][( foo() )] ) ))];
	if(-rule(Hodor) \/ dog){
	Stark /= ( betray(-bar(ROWS,Sansa) < destroy(-370.804) * foo(( -rule(Sansa /\ Arya >= -Arya,Ygritte) ),24)) < 0.18 + betray(Sansa + Sansa,betray(( ( -0.65 ) ),dog > 79,mislead()) - COLS >= ( -( ROWS ) )) );
	Hodor *= ( Hodor ) > x
} else {
	dog /= -53;
	( TABLE[COLS][Ygritte] > ( -y ) )
}
}
}
}
}
def protect(){
	if(Stark){
	if(y){
	Jon *= COLS
};
	Hodor *= ( -46 - -0.51 );
	if(-COLS){
	Arya;
	( -TABLE[0.59 != ( -1 )][( protect(destroy()) )] );
	Arya /= y
}
};
	if(protect(rule(Stark,COLS),-640.8,--( foo(1,y,17) \/ ( ROWS ) /\ --COLS / x ))){
	( ( betray() ) )
} else {

}
}
var Ygritte = -COLS
def TABLE[rule(8,( COLS ))][j] {
	y += -( Hodor );
	y += 650.73 <= rule(destroy(),Arya) / betray(( ( ( -betray(bar(--74 < Arya,-20),mislead(x,-0.9 * dog),-0.67) ) ) )) != --480.6 < TABLE[y][betray(( ROWS ))]
}
def TABLE[TABLE[mislead()][-Sansa]][k] {
	y *= Stark;
	if(100.12){

}
}
var dog = mislead(790.22,-0.48)
def protect(Hodor){

}
var Stark = -0.27
var Hodor = ( 1 )
assert foo(-Jon <= bar(protect(-ROWS,Sansa) * 76),ROWS) : "Nothing burns like the cold."
def rule(Ygritte,y,Sansa){
	if(protect(-( 670.094 ) > betray(( -x ),-( ( -( ( 96 ) ) /\ -Stark ) )))){
	Ygritte *= ( rule() );
	if(mislead()){
	if(-0.41){

} else {
	y /= destroy(Hodor,Arya)
};
	Sansa < rule(protect(mislead(( ROWS ),destroy(ROWS,Hodor))))
} else {
	betray(-1,----0.1);
	destroy()
};
	x /= Ygritte
};
	--betray(TABLE[protect()][( -0.43 )])
}
var Arya = foo(ROWS != COLS == TABLE[--310.321][( mislead(TABLE[foo()][COLS] \/ ( foo(bar(ROWS,Ygritte)) )) )])
assert -47 != -0.15 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = TABLE[Hodor != ROWS][-690.44]
def TABLE[ROWS][i] {
	Ygritte
}
assert ( 1 / -x ) : "Winter is coming"
var x = -1
def betray(Hodor){
	if(0.35){
	if(-dog){
	if(ROWS / betray(-( -( Arya ) ) <= -( TABLE[( ( -( -0.58 - 65 != dog ) ) )][y] ) > ( destroy(COLS,( destroy(protect(foo(( foo(Ygritte) \/ y ) - ( TABLE[-0.59][Arya] != 1 <= x ) >= x),TABLE[Hodor * -51 == TABLE[-( ( -780.1 ) ) \/ -1 /\ ( -TABLE[bar(-250.1101,-0.91,( y ))][-0.68] ) > TABLE[1][TABLE[( -Stark * ( --0.93 >= ( ( ROWS ) ) ) * ( 1 ) * TABLE[-foo(--foo(protect(COLS,ROWS),( 0.19 )))][betray(( TABLE[COLS][-( rule(destroy(( y ),69),( protect(--protect(ROWS)) ),dog) \/ ROWS ) > -( ( rule() ) + Jon )] ),-y /\ 0.26)] )][destroy(( -TABLE[( -COLS )][ROWS] ))] \/ Hodor]][0.88] / foo(( ( ( -ROWS \/ Sansa ) ) ) != Hodor * -ROWS > COLS == ROWS,--0.15)][Arya]),-140.95 != Ygritte) ),-dog) ))){
	Stark -= -9;
	if(ROWS){
	dog /= ( TABLE[ROWS >= COLS][mislead(COLS,-0.86)] )
}
} else {
	destroy(ROWS,( ( -1 ) )) / betray();
	if(COLS){

};
	Arya *= Stark
};
	if(betray(Hodor,ROWS) < Sansa){

}
} else {
	Arya;
	if(ROWS){
	y *= betray(( -TABLE[Stark + ( -1 )][Sansa] < ( Jon ) ),dog /\ 0.4);
	-dog;
	if(( destroy(COLS - 1,ROWS,( x )) ) \/ -bar(-( -( x ) ),-( --COLS ) + ( betray() ))){

} else {
	0.66 == -57 - --COLS - --52 /\ -98;
	Stark *= protect(COLS,-0.7);
	0.57
}
}
};
	x += ROWS;
	Sansa /= ( dog )
} else {
	dog /= -64
};
	Arya /= --37
}
var dog = COLS
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor : "Nothing burns like the cold."
var y = betray(COLS,-1)
var Hodor = -COLS
def TABLE[( 0.21 )][k] {
	Jon -= --65;
	--( Sansa ) /\ mislead(( -COLS ),( ( --Sansa ) ),( ( -( x ) < 0.75 ) )) + -( TABLE[( -0.21 )][( -bar(--protect(rule(destroy(-( -TABLE[dog][y / ( 1 )] != ( ( y /\ betray(-ROWS) ) ) ) * 0.96)),COLS,rule(( Jon ),COLS)) <= x == -0.7 == -20 >= 1 + ( y ) != 78,1,COLS) ) >= destroy(( ROWS ),betray(710.61,( ROWS )))] )
}
assert foo(destroy(Arya,dog >= ROWS / ( --mislead(betray()) / y ) < ROWS,-ROWS)) : "One can not simply parse himself"
def TABLE[( Jon )][j] {
	if(mislead(( x ),--( -0.63 ),rule(-x))){
	if(-protect(bar(Hodor + -protect(Ygritte == ( -0.87 ) - -TABLE[-COLS][-0.88])),y,( ( Arya \/ protect(-100) ) ))){
	if(( TABLE[-( Ygritte )][-0.44] )){
	if(x){
	if(TABLE[-rule(( rule(( -mislead(rule(COLS,COLS)) ),mislead(( -( -rule(Stark,TABLE[COLS][6]) ) ),Arya,-rule(( -8 ))) - Stark * foo(COLS,-protect(COLS,-1 > -( -( destroy(--0.94) ) ))),y) ),bar(-660.18 > TABLE[bar(( 730.3907 ))][( ROWS )] < ROWS))][dog]){
	x *= ( ( -( -x - 97 / 92 ) ) <= ROWS + Stark );
	y *= 0.51;
	0.19
};
	if(-70){
	Hodor += --1
}
}
}
};
	-COLS - ( Stark ) > -0.09
}
}
def betray(Jon,Hodor,Stark){
	y *= COLS
}
var Ygritte = Jon
def TABLE[x <= COLS \/ bar(TABLE[( COLS )][( bar(-1) )],foo(--660.972,Ygritte,-0.87 * TABLE[Arya][( -0.17 ) * Ygritte]),betray()) > ( ( ( ( -COLS - protect(9) * TABLE[Stark][Hodor <= ( betray(-( betray(TABLE[Stark][( mislead() )],Hodor) ) - destroy(protect(-1,ROWS),dog,37)) )] ) ) ) )][i] {
	Hodor /= 17;
	( y )
}
def TABLE[Stark < Sansa][j] {

}
assert -( Sansa ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Jon,Arya){

}
var Jon = Stark
var x = Sansa
var Arya = bar()
def TABLE[Sansa][i] {
	dog += ( 8 >= TABLE[Ygritte][-0.76] > Jon );
	y /= -46;
	if(-470.2254){
	y *= -Hodor
}
}
def TABLE[-( 890.7 ) <= --0.44][j] {

}
assert destroy(Jon) < -11 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Hodor){
	mislead();
	( -Hodor * foo(Jon,protect(TABLE[y][ROWS]),TABLE[-690.61][ROWS]) )
}
def destroy(Stark){
	ROWS - 88;
	Ygritte /= 23
}
var Hodor = 88
def TABLE[COLS][i] {
	Stark;
	dog += betray(y)
}
def bar(){
	Ygritte -= COLS;
	y += COLS;
	Sansa += Jon
}
def TABLE[Arya][j] {
	if(( foo(( y ) <= protect(0.18),COLS) )){
	if(rule(--87 > ( TABLE[mislead(TABLE[TABLE[Hodor][Sansa] / -( -44 ) /\ -0.32 == ( protect() )][--40.6559],COLS)][-49] + --57 > ROWS == COLS * 1 ),betray(0.84,betray(-0.34 == -0.88,Ygritte),Hodor),protect(--( -0.49 ),--44,TABLE[( TABLE[ROWS][-0.83] ) <= rule(-Jon,ROWS /\ protect(mislead(),Stark))][dog - 1])) - -0.96){

} else {

};
	Ygritte /= ( ROWS );
	if(COLS){
	( bar() )
}
} else {
	Arya /= -70;
	dog /= 0.6
};
	foo(---bar(Jon,foo(Hodor)) <= ( -36 ))
}
assert y : "Winter is coming"
def rule(Stark,Sansa){
	if(-COLS){

} else {
	x += y + ROWS;
	protect(foo(betray() == Ygritte,dog,-71))
};
	if(ROWS < -( -0.83 )){
	bar(( COLS ),Ygritte);
	if(Ygritte < ( ROWS )){
	Arya /= mislead(Sansa);
	Hodor /= ( ( --96 ) )
};
	( foo(bar(( ( ( --mislead(Stark,TABLE[-betray(TABLE[mislead()][-ROWS],ROWS) \/ ( -0.27 ) \/ COLS == ( TABLE[( mislead(destroy(-99),-( ( ROWS ) )) )][-protect(Stark)] ) * 74][-( -COLS )] /\ TABLE[-betray()][protect()] <= -( COLS ) >= COLS) ) ) ) != ( ( -bar(( -protect(ROWS) <= destroy() ),( destroy() ),x) ) ),-Hodor),( mislead(--COLS /\ ( 88 ) == 1,mislead(( Jon ),protect(--( betray(Sansa,0.43) )),Jon),TABLE[rule(TABLE[-Jon /\ rule(COLS)][-0.44],Hodor,dog)][( dog <= ROWS )]) )) - -Stark )
};
	if(-( ROWS ) - -mislead(-ROWS,TABLE[COLS][ROWS]) < -( Jon ) == -( betray(--COLS,ROWS,( Sansa )) ) <= -87){
	( betray(y,TABLE[TABLE[( x )][bar()]][COLS > TABLE[( ( betray(betray(72,( COLS <= destroy(TABLE[( ROWS )][destroy(TABLE[( COLS )][foo(( -dog ),-220,-Ygritte != -43 + COLS == COLS <= ( -TABLE[COLS][( 15 )] ))],Stark + TABLE[0][( dog )])]) ),Ygritte),-1) ) )][Arya \/ -bar(54)] /\ COLS - -0.08]) )
}
}
var Jon = -mislead() >= --protect(10.2562)
def TABLE[foo(25)][j] {

}
var Hodor = Jon
assert foo(( COLS ),( Sansa ),destroy(330.93,ROWS)) : "One can not simply parse himself"
def TABLE[1][j] {
	TABLE[COLS <= ROWS /\ ( protect(rule(dog),y,-76) ) / bar(0.04 \/ ROWS,foo(TABLE[-mislead(( 69 ),-0.69)][-rule()],mislead(( ( Hodor ) ) > ( ( Jon ) ) / -dog > -91)),-0.51) \/ -COLS][--COLS];
	Arya += -destroy(-0.21)
}
def betray(Ygritte,Arya){
	COLS < betray(-( COLS ) \/ dog,-0.5);
	( Jon )
}
def TABLE[ROWS][k] {

}
var Stark = COLS == bar(COLS,Arya) == 62
assert ( rule() ) : "What do we say to the Lord of Death?"
def destroy(){
	if(( --foo(Ygritte,TABLE[-26 == ( -COLS <= bar(-790.4) )][ROWS - -TABLE[-1][betray(protect(Ygritte,COLS),--( rule(0.12 \/ bar(( -34 ),( -mislead(-COLS,Hodor,ROWS) )) > destroy(COLS,ROWS,-170.4 < COLS) * -y,-83) ) >= betray(Ygritte,( -bar(TABLE[Ygritte][mislead(Sansa,foo(Jon,Jon),destroy())]) )) / -------0.5)] - Hodor >= COLS],--y) )){
	490.678;
	if(TABLE[rule(TABLE[destroy(mislead(COLS),( 740.2 ),Ygritte)][-ROWS])][-620.4]){
	mislead(( ( foo(Hodor) ) ),TABLE[bar()][rule(-1,protect(ROWS,72) > -0.53)],--protect(bar(-430.22,betray(-94 >= -95,Hodor),-0.52),( -x / ( bar(Arya,-0.15) ) )))
}
} else {

};
	( -COLS / ROWS )
}
var Hodor = -700.163
def rule(Jon,Stark){
	( Ygritte );
	betray(Ygritte)
}
var Sansa = ( TABLE[ROWS][( destroy(bar(( ( ROWS ) )) + 1,( Sansa )) )] )
def mislead(y,Arya,x){
	if(Hodor /\ -Hodor){
	( -370.29 ) > -TABLE[COLS /\ TABLE[-Hodor][-( bar(( bar(foo(dog),( -destroy(TABLE[-rule(COLS)][-0.06] <= 260.719 <= protect()) ) >= 3) ) * ROWS,TABLE[Jon][Arya] != rule(ROWS,-bar())) )]][1] / 29 + TABLE[( -43 )][Arya / ( COLS ) * 510.93 >= betray(mislead(Sansa,Jon == destroy(( bar(( bar(Arya) - Arya ),TABLE[-( -0.67 )][ROWS]) ),Jon),----foo(TABLE[TABLE[foo()][-0.69]][--86])))];
	dog += COLS;
	COLS
} else {
	if(dog * rule(-78 \/ ( y )) * ( ( betray() ) )){
	-45
} else {
	x /= mislead(-86,( ( -0.4 ) ),bar(-Jon));
	Arya;
	if(64){
	Jon -= dog
} else {
	Hodor -= -protect(COLS,bar(COLS,rule(( -0.81 )),( 0.44 ) \/ ROWS /\ ( ROWS ) / COLS) * betray(betray(foo(),Hodor)) == foo(-( -COLS - bar(( foo(ROWS,Stark != ROWS,( TABLE[Hodor][COLS] )) ),Ygritte) )) <= COLS == --98) == x
}
}
};
	if(betray(COLS,-COLS < -0.01 == ( destroy() > ROWS - COLS + protect() ),TABLE[TABLE[ROWS][rule(protect(( 0.76 + --( ( ( dog ) ) ) ),0.29,( ( dog ) )),--1)]][( ( -48 ) ) /\ -26]) * -dog){

}
}
var dog = 40
var dog = foo(rule(Hodor),-( COLS ) != destroy(destroy(),Ygritte,19 <= protect(bar(),( --Hodor ) <= ( rule() / ROWS ),--destroy(betray(y,ROWS >= 0.47)) <= 0.7 - -0.37 < Arya)))
var y = Ygritte
var Sansa = ( 89 )
assert -dog : "Winter is coming"
def TABLE[ROWS][j] {
	x -= destroy();
	dog -= ( ROWS )
}
def destroy(Stark,dog){
	if(TABLE[( ( -dog / ( Jon ) ) )][-Hodor]){

};
	if(rule(Stark)){
	foo(COLS < -COLS,ROWS,COLS);
	dog -= -ROWS
}
}
assert dog : "Winter is coming"
assert Jon : "Winter is coming"
def destroy(Hodor,y,dog){

}
def protect(Ygritte,y){

}
def rule(y){
	Hodor;
	-Ygritte
}
var Arya = Hodor
def TABLE[betray(---TABLE[y][rule() * -0.02] == foo(),110.36 >= Stark,780.307)][i] {
	Hodor *= bar()
}
assert -mislead(-( --ROWS <= Jon ) - 1,TABLE[( COLS + 1 )][14]) : "Fear cuts deeper than swords."
def foo(Jon,Hodor){

}
def betray(Jon,Hodor,Sansa){
	Jon < -86;
	if(rule(ROWS,0.97)){

} else {
	if(y != TABLE[Sansa][-1]){
	if(--protect(1,-( -COLS )) * COLS){

};
	( -Jon ) \/ 0.38
} else {

};
	Stark /= ( mislead(betray(0.15),TABLE[Arya][-0.76]) )
}
}
var Sansa = TABLE[( -ROWS )][0.87]
def TABLE[( destroy(TABLE[-( dog )][Stark < --Jon] < x,TABLE[x][( -( ( TABLE[-Ygritte][-Hodor] ) ) - Ygritte )],---( -91 ) /\ -TABLE[-0.72 < dog][Ygritte]) \/ -0.11 )][j] {
	if(TABLE[380.4][bar(( bar(ROWS,COLS) ),TABLE[dog][93],rule(COLS != --ROWS \/ -mislead(COLS),( mislead(-destroy(COLS),COLS) )))]){
	Arya /= -( --destroy(-( -59 ),mislead()) / ( betray() ) * Ygritte * ( mislead(x) ) );
	Hodor -= ROWS;
	if(COLS){
	Hodor *= ( bar(20,0.12) )
} else {
	if(ROWS){
	y *= Sansa;
	Stark *= bar(Ygritte,betray(Hodor,1 == ( destroy(rule(42 <= -62),Jon) ),rule(TABLE[COLS][( -Stark \/ Ygritte )])))
};
	if(TABLE[---17][--( foo(destroy(protect(1 \/ Ygritte /\ -rule(x,Sansa,Jon) != ( TABLE[-Arya][-Hodor - COLS] ) / -( ( ROWS ) ) != -850.07) >= ROWS == ROWS),( mislead(-COLS,dog) * -bar(( rule() ),COLS + -ROWS) + -0.47 )) ) >= -98 /\ ROWS + ROWS]){
	Sansa *= -protect(-Jon,( x ) - mislead(mislead(( protect() ) > x,-1,( ROWS )) != rule(Hodor) <= Arya /\ TABLE[ROWS][Sansa] == 24 + ( dog ) == Ygritte - ( ( bar() ) ),x));
	if(COLS){
	Sansa /= COLS;
	Ygritte += Ygritte
}
} else {
	if(TABLE[-Jon][-1]){

};
	( 0.49 )
};
	( ( -protect(( -( -0.39 ) ),440.38) ) )
}
} else {
	if(( bar(TABLE[( --0.98 ) + COLS - ( ( COLS ) )][Sansa \/ mislead(( -30 + --foo(rule() == --x != -( Stark ) >= bar(rule(dog >= protect(TABLE[--400.2955 \/ ( -860.27 )][rule(59 <= ( --19 ),mislead(( -0.8 ),-5))]),( 45 ),TABLE[protect(--1 != ( ROWS ),73,TABLE[-1][( COLS )])][--( -45 ) - bar(Arya,COLS,1)]),rule()) + -TABLE[-Ygritte >= -( ROWS ) != rule(( ( dog ) ))][-390.29]) ))],-0.52,y) )){
	if(---foo()){
	y += 1
}
} else {
	if(-ROWS){
	if(-COLS){
	if(ROWS != -( -0.19 == -0.23 )){
	-( foo(TABLE[( Hodor )][Stark]) );
	if(0.31){
	Arya += TABLE[TABLE[( Ygritte ) / ( x )][Stark]][--( COLS ) / ROWS]
} else {
	Arya /= Sansa;
	if(1){
	Stark -= ( ROWS );
	x -= destroy(93) - --0.03
} else {
	if(COLS / -300.0826 * -20){
	COLS;
	-Stark
} else {
	if(bar(-COLS,( -980.12 == TABLE[( ( -bar() * -( 21 ) ) )][protect(-mislead() /\ -51,-89) /\ ( ( betray() ) ) < foo()] >= mislead(betray(Hodor)) ) >= ( Hodor ) <= --0.73 \/ 450.2895 < ROWS) / destroy(ROWS)){
	if(Arya){
	Arya /= -( protect(Stark,( ROWS /\ Jon /\ -5 )) - protect(x,-76,Sansa) );
	Jon
} else {
	x -= -0.18;
	if(TABLE[x][Hodor] \/ ( ( foo(8) ) ) == COLS){
	Ygritte += destroy(-0.01,-( --0.56 ));
	y -= rule(-Ygritte \/ Sansa >= COLS,( bar() - bar(( -foo(x) < -0.34 /\ ROWS \/ bar(TABLE[1][( ( TABLE[dog][bar()] != -destroy(1,-0.38,betray(betray(bar(ROWS * ( 47 / TABLE[x >= --30][foo(( Hodor ) < bar(( rule(-760.54,Jon) ),( 44 )) > bar(-1 - 57,Sansa,betray(ROWS,foo())) /\ foo(-protect(destroy(COLS,ROWS) <= bar(( -( TABLE[150.647][x] ) )),Sansa,TABLE[y][( ROWS )])),-0.41,Stark >= ( ( --mislead(Ygritte * 1000 < Ygritte,-1,-Arya) ) ))] ) \/ -( COLS ),-protect() / destroy(72,-( ROWS ) * ROWS))),-TABLE[mislead(-1,-TABLE[-97][( ( -foo(( -COLS ),-bar(( y ) \/ bar() > COLS,COLS),dog) == 1 == betray(-Sansa) ) )],-260.65)][( -foo(-ROWS,COLS) )],( destroy(( -150.4918 >= ( -protect(Arya,55) ) )) ))) ) )],mislead(( dog ))) - -0.32 >= TABLE[( COLS )][rule(95 - --1 - --110.47 /\ 290.027 <= 1 != destroy(ROWS,( COLS ),-1 * -0.75),protect(),destroy(0.94))] ),( -betray() )) )) <= protect(COLS,mislead(( Stark ),-730.46 >= Hodor))
} else {

}
}
};
	if(( TABLE[ROWS][( 0.87 )] != -protect(--76,-860.19) )){
	if(--57){
	if(-COLS){
	Hodor /= COLS;
	Hodor += ( ( -Sansa ) )
}
} else {
	( ( TABLE[rule()][protect(COLS)] ) );
	betray(( ROWS ))
};
	if(-0.91){

};
	if(x){
	Stark *= TABLE[TABLE[mislead(protect(),ROWS) > -58][( ( rule() ) )] != 25][Sansa] < foo(rule(--foo(1,COLS \/ -1)));
	if(( -62 == COLS > 1 )){
	dog *= foo(TABLE[rule(rule(-COLS,Arya) + -ROWS \/ ( ROWS ) / -( bar(COLS / -( TABLE[( dog )][( -65 )] ),betray()) ),mislead(-( -ROWS < ROWS ),COLS))][-1],betray(COLS),bar(-protect(COLS),-280.238)) + mislead(x) - y
};
	dog /= Stark
}
}
};
	if(TABLE[0.91][foo()]){
	if(( ROWS )){
	( 1 );
	if(( TABLE[910.881][TABLE[-foo()][ROWS]] )){
	y += Ygritte <= -1 > -Hodor
} else {
	y /= bar(( ( mislead(COLS) ) ),TABLE[y][-COLS /\ protect()]) - 58
};
	x
} else {
	Arya -= 20;
	Sansa;
	if(x){
	y -= foo(Arya,( betray(ROWS) ) >= 32);
	protect(foo(Arya));
	TABLE[-( dog ) < protect(-1 \/ -COLS)][COLS]
} else {
	y += -0.49 + foo(ROWS,ROWS,destroy(rule(( destroy(-0.96,-( -( Jon ) * betray(protect(-0.16,-1,( Sansa )) /\ foo(mislead(mislead(( Arya ))),ROWS == 25,Ygritte),--TABLE[Ygritte][( TABLE[( -( ( -1 ) ) == dog ) >= ( rule(( ( rule(-Stark) ) ) - protect(( COLS )),mislead(),( 0.39 )) ) /\ --0.93 > TABLE[x][( Arya ) * ( ( COLS > betray(protect(ROWS,mislead() / Sansa),protect(COLS,( TABLE[--TABLE[TABLE[-1][( Stark )]][-66] - foo(1)][Hodor] ))) ) )] \/ TABLE[ROWS][( ROWS )] >= protect(y,Ygritte)][-0.68] )] > -( bar(y,COLS) )) )) ),rule(),ROWS)));
	if(1){
	if(mislead(--24,27,( ( Hodor ) ))){
	Hodor *= -0.04;
	if(rule(-60.884,destroy(y)) / -mislead()){
	Jon += ( -mislead(910.3039) )
}
} else {
	Hodor -= protect() - -protect(650.35,rule(( ( ( ( ( ( Stark ) ) ) ) ) ) == ( protect(TABLE[( ( ROWS - 1 * 0.01 ) ) < ROWS][betray()],( destroy(-COLS,COLS,0.29) ),76 * destroy(-y,-81,bar(Ygritte))) )) /\ destroy(x) /\ ROWS);
	destroy(-0.69)
}
}
}
};
	Hodor += ROWS
} else {
	Stark != -( -850.03 );
	Stark += Sansa
}
}
};
	Arya /= ( -1 )
} else {
	Hodor *= Stark;
	if(( destroy(( TABLE[-( Arya != 0.62 )][-Arya] )) == x )){
	ROWS
}
};
	Jon -= destroy(bar(COLS,( TABLE[ROWS][-( ( ROWS + -1 < -0.89 ) )] ),COLS))
} else {
	x *= ( foo(TABLE[bar(mislead(foo(destroy(( TABLE[rule(protect(COLS)) * --( ( --destroy(1 / rule(),( -COLS ) * Sansa \/ Jon < ( -TABLE[-360.499][ROWS] ),-1) ) ) /\ Arya /\ Stark >= -y][ROWS] )),COLS,( -0.23 )) - ROWS,y))][destroy(protect(-bar(( rule() ),-y)),x,-destroy(ROWS)) < -Ygritte] \/ COLS == ( -0.49 ),-TABLE[Arya][Jon] < ( 0.99 )) );
	if(1){
	Arya /= -0.91;
	TABLE[45 <= Arya][-destroy(( Arya ),TABLE[-1][--( ( -1 ) ) /\ mislead()])] + -320.51 == ( Hodor )
};
	if(protect(destroy(Arya,destroy(( --440.445 / ( ( foo(( TABLE[( -370.18 )][Stark] ) != -18 + -1 == -mislead(Arya,mislead(-( Arya > TABLE[Stark][bar(COLS)] > --COLS \/ -( --0.91 ) < --protect() /\ x ) < ROWS != dog,destroy(-COLS) < --( -1 ),TABLE[( protect(TABLE[-74][COLS],Arya,foo(Arya)) >= ( ( -ROWS ) ) )][x])),rule(-10.9,-( rule(protect(protect(),( -mislead(Hodor,COLS) ),TABLE[x * -foo(COLS,-( destroy(Arya,y) ) <= TABLE[--0.28][bar(foo(--Hodor,1,( 1 ))) + ( 17 * foo(( ( ( COLS ) ) ),( Jon )) )],bar(ROWS,( ( y ) )))][-dog]),( COLS )) ) == Stark)) ) ) )),1) <= COLS <= Stark,Stark)){

} else {
	destroy(( foo(Ygritte,mislead(destroy(betray(--620.28,0.81,Stark - foo()),bar(( ( ( 54 / COLS ) ) ))) < destroy(-0.41,340.31)),mislead(-68)) ),-0.81 / -49);
	dog -= -0.08
}
}
} else {
	if(Sansa){

} else {

}
};
	Arya
}
};
	Stark -= -750.4882;
	if(Stark){

} else {
	Sansa += ( -TABLE[( ROWS )][( TABLE[( bar(TABLE[ROWS][( ( ROWS < ( betray(0.43,( foo(x,-destroy(betray(rule(( --bar(( 0.39 != -( 1 ) ) - TABLE[-( 0.76 )][ROWS]) )),protect(Stark,0.55 \/ 94,-52) /\ protect(0.23)),Arya)) )) >= -1 ) ) + Jon )],Jon < dog) )][COLS == y] )] );
	if(--rule() - Jon \/ ( 1 ) >= -ROWS <= ( rule(-y) )){

} else {
	if(destroy(y + 0.1 / ( ( COLS ) ),ROWS,rule(1,TABLE[dog][-Hodor * foo() + -ROWS]))){
	Stark /= -0.72;
	if(betray(COLS) + ( ( COLS ) <= ( ( 68 ) ) ) + TABLE[( ROWS )][COLS]){
	if(Arya){
	if(0.12 > Stark != ( foo(foo(47,Arya),protect(Stark),Hodor) )){
	Ygritte /= TABLE[( bar(destroy()) )][-ROWS];
	( ( -0.04 ) )
} else {
	Arya -= ROWS;
	Arya -= -Hodor + -68 == rule(99)
};
	62
}
} else {
	foo(-6,Stark);
	if(protect(520.61 + ( mislead(bar(--Ygritte),Jon) ),27)){
	if(betray(Stark,Hodor,x)){
	-49;
	destroy(foo(-37,Hodor),1)
} else {
	if(( -betray(-47) )){
	if(--( -0.86 ) == Sansa){
	if(17){
	-0.28;
	COLS
} else {
	if(Sansa * betray(TABLE[ROWS][ROWS /\ TABLE[bar(Sansa,Jon,-0.24 + betray(( ( -Hodor ) ),TABLE[( COLS ) < COLS + foo()][Ygritte] > x))][( -11 )]],( protect(-Ygritte > -Stark,Hodor) ))){
	if(rule(mislead(ROWS),( ( -0.99 ) /\ rule(TABLE[rule(--COLS) <= Stark][0.39]) )) > 440.43 \/ 520.3){

} else {
	x *= -0.33;
	mislead(-55,( betray() < -( ( TABLE[-bar(betray(betray(( ROWS ),betray(( ROWS ),( -( bar(COLS,-46) ) > Stark ) \/ ( -0.07 )),TABLE[-Sansa][--0.87]),Ygritte),( ( ROWS ) ))][TABLE[( -0.75 )][-ROWS - x + destroy(-110.4833 + ROWS)]] ) ) ),Stark) < Jon
}
};
	y;
	if(TABLE[--mislead(Ygritte)][( dog )]){
	if(protect(ROWS,Hodor,( y != ( protect() ) / TABLE[0.14][x] ))){
	if(( ( 84 ) )){
	-0.01
}
} else {
	x *= x / y == dog >= ( -TABLE[--91][( COLS )] < 19 );
	--( rule() ) == -1 <= ( ( 0.1 ) );
	ROWS
};
	TABLE[COLS][-foo(mislead(Hodor),-0.12,( -440.5 )) <= -0.23];
	Stark -= Ygritte
} else {
	if(( COLS )){

};
	Ygritte += COLS
}
}
};
	Stark /= -380.86
};
	Stark += -1
};
	Sansa += Arya
} else {
	x += TABLE[-Sansa][Sansa];
	( ROWS );
	( -protect(bar(betray(( mislead(Hodor,foo(COLS,foo(( --90.9032 ),TABLE[Hodor][destroy(-320.3,rule(( COLS )),( betray(1) ))]),-bar())) ))),COLS > COLS,dog) /\ 29 )
}
};
	if(( ( betray() ) )){
	if(TABLE[( y ) >= --0.53 == Stark /\ -( ( bar(-( protect(rule(-96,COLS == betray(( -betray(ROWS,Jon) ),( TABLE[dog][-bar(COLS,COLS) > mislead(rule(COLS,( ( protect(-1,ROWS,0.35) ) / ( -( -TABLE[mislead(-mislead(foo(1,( TABLE[--0.47][ROWS] < Sansa )),( 0.64 ),--x) /\ protect(Arya,-( y ),bar(32 /\ Hodor,-Stark)),ROWS - Arya) + -0.61 / -ROWS < y == -0.83][rule(-protect(( ( Ygritte ) ) \/ -1 <= --23 - ( ( ( COLS ) ) )),COLS)] ) ) ) + 1 != 0.25 + Jon != 590.053,-0.98))] > ( rule(-1 - Ygritte) <= -protect() /\ ( -protect(ROWS,-( TABLE[-mislead(1)][TABLE[-TABLE[-0.96][17] / destroy()][Stark * ( Hodor )] <= COLS / foo() > Arya] ),-rule(-protect(rule(bar(Sansa),-Stark) /\ betray(-0.69 \/ Jon,1 == dog))) - ( protect(--0.71) )) ) > ( -890.72 < ROWS ) ) ),-1),x)) )) ) ) / rule(0.45,dog) <= dog][( --1 )]){
	x -= ( foo(TABLE[TABLE[-bar(-27,-98)][0.22]][--protect()],80.29,Hodor > -protect(-Sansa,Stark)) ) < COLS > Sansa >= Sansa;
	COLS < Ygritte;
	Jon /= --protect(COLS,betray(Arya)) /\ ( ROWS )
};
	y /= --( 0.06 ) * rule(Ygritte)
}
} else {
	if(COLS - mislead(bar(betray(-( 0.06 ))),rule(mislead(( protect(ROWS) ),TABLE[foo(Sansa,Jon /\ bar(TABLE[COLS][( -ROWS ) / TABLE[TABLE[( -8 )][0.21 - 0.31 >= x]][290.477]]) <= TABLE[-( -1 ) > -620.161][( COLS )])][( -TABLE[( TABLE[( foo(bar(),COLS) )][( bar(770.769,-( -10 )) )] >= rule() )][Arya] )]),destroy(x - Arya,Stark)))){
	protect(COLS,1);
	-40 - dog;
	Sansa /= ( -90 )
} else {
	y *= destroy(ROWS);
	-610.68;
	if(77){
	COLS;
	if(-37){
	Arya += --betray() != foo(TABLE[-Ygritte][COLS],Jon,( --x ))
} else {
	dog *= -y;
	Stark += bar(Arya == Ygritte,-foo(( 1 ),destroy(-1)),Jon)
}
} else {
	if(destroy(0.48)){
	if(( ROWS )){
	Jon *= -92;
	x /= TABLE[ROWS * Arya][ROWS];
	COLS
};
	if(ROWS){
	Hodor /= TABLE[dog][protect(( 1 ),( Ygritte ),Hodor)];
	y
}
} else {
	if(( foo(Ygritte,( mislead(-betray(TABLE[bar(1,ROWS)][TABLE[Sansa][( foo(( y ),---ROWS) )] / -0.55],foo(-3))) ) * bar(bar(ROWS,destroy(betray(foo(-Hodor),( ( Sansa ) )),( ( 10 ) ),COLS)))) )){
	protect(ROWS - destroy(-67,0.81,foo(foo())),-30.15);
	y /= -TABLE[TABLE[Stark][Ygritte]][-rule(( ROWS ),-20.8)];
	Sansa
}
}
}
}
};
	dog += Sansa;
	if(protect(Sansa,foo(TABLE[( -( TABLE[ROWS][ROWS] ) )][COLS]))){
	Hodor += COLS
} else {
	if(( rule() )){
	x;
	rule(( -destroy(( rule(8) ),-39,COLS) ),ROWS)
};
	dog
}
}
}
}
var y = y
def TABLE[foo() \/ -y < Stark][j] {
	( -940.123 ) - 0.14;
	betray(betray(COLS),-8)
}
def TABLE[COLS][i] {
	betray(--0.15,( ( Jon ) / -x ),( ( Ygritte != ( ( ( rule(1 != TABLE[-1][betray(Stark > COLS,480.23,Hodor)]) < ( Jon - -0.47 ) ) ) ) ) ));
	COLS
}
var Arya = TABLE[COLS][-1] / ( 0.64 )
var Sansa = -390.9
def betray(Arya,Jon){
	dog
}
def protect(Jon){
	Ygritte /= --COLS
}
def foo(dog){
	dog += 1
}
def TABLE[rule(COLS,--dog + ( -190.09 == betray() ))][j] {
	-COLS;
	if(( ( rule(810.563,ROWS) ) )){
	Ygritte /= ROWS
}
}
assert -42 : "Winter is coming"
var Ygritte = ( Sansa )
var x = bar()
assert foo() : "What do we say to the Lord of Death?"
var Jon = --mislead()
def TABLE[Arya + ( --TABLE[-84 > -ROWS][-TABLE[Ygritte][-340.6296]] )][k] {

}
assert 0.74 : "Winter is coming"
def rule(Sansa){
	ROWS
}
var Ygritte = --1
def TABLE[-2][j] {
	x /= ( protect(-COLS) )
}
def mislead(dog,Hodor){
	x += TABLE[-( ROWS ) <= betray(TABLE[Arya][( mislead(TABLE[-mislead(x,ROWS) == COLS /\ mislead(0.4)][-0.35],-0.97,( TABLE[-COLS][mislead(x >= Stark)] )) )] \/ ROWS >= ( COLS ))][rule(Ygritte)]
}
assert Sansa : "Winter is coming"
def TABLE[0.05][k] {
	if(-0.02){
	if(( Stark ) * -TABLE[rule(bar(10.292),1,( y )) == x][-36] / ( 27 ) == Hodor >= 1 * x){

} else {
	TABLE[420.98][-Jon]
}
} else {
	0.12;
	ROWS
};
	dog += -ROWS
}
def mislead(Sansa,Sansa){
	( TABLE[destroy()][destroy(( -bar(betray(Arya)) + -0.91 ),-1)] );
	if(Stark){

}
}
def bar(Jon,Jon,Arya){
	Arya += ( -1 );
	ROWS;
	( Jon \/ -1 )
}
assert --1 == 1 / 1 * ( COLS ) == Ygritte : "Winter is coming"
def TABLE[( -TABLE[( ( y ) )][-mislead(-38,( ---3 ))] * ROWS * protect(0.5,Sansa) )][j] {
	if(( ROWS )){
	y *= -ROWS
} else {
	-ROWS;
	rule() < -34 / protect(betray(-TABLE[-ROWS][0.02],--0.01 \/ 1),Hodor) != -79
};
	Ygritte += protect()
}
def TABLE[betray(x,-0.31)][k] {
	x += ROWS;
	0.94;
	( ( -TABLE[( ( 0.96 ) )][Ygritte] ) )
}
def TABLE[--20][j] {
	y -= destroy(-ROWS \/ COLS) - ROWS;
	Ygritte *= Ygritte
}
def TABLE[-0.48][i] {
	if(betray(COLS) <= -betray(Jon,-1) - --( protect(COLS,( COLS ),( Arya * --36 )) ) == -( -260.8211 >= dog ) >= ( ( -bar(Arya) ) > COLS )){
	if(83 - -destroy(protect(-1,-destroy(ROWS)),--( -( rule(COLS,-bar(),destroy(( ( ( x ) ) ),-foo(y,Jon,-( rule(foo()) ) == -ROWS) + --0.08 >= -ROWS)) ) <= Jon ))){
	Hodor -= TABLE[0.91][-TABLE[-25][-rule(Hodor,Jon,990.13) /\ ( -850.2682 )] + ( rule(-ROWS) )];
	dog *= bar(1,COLS);
	dog *= -COLS
}
} else {

};
	Stark += -( -530.64 )
}
assert -Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(( -1 )) : "Fear cuts deeper than swords."
def TABLE[-( ( ( x ) ) )][k] {

}
def TABLE[ROWS][i] {
	Hodor += ( Hodor );
	COLS
}
def TABLE[--1 / -TABLE[ROWS][protect()]][i] {
	if(Jon){
	rule(COLS)
} else {
	if(70.04){
	ROWS
} else {
	protect(betray(Jon >= -0.12 < ( -COLS ),-( COLS ),-Jon),( rule() ),-ROWS);
	if(52){
	-28;
	-730.2
} else {
	if(ROWS){

};
	if(Stark){
	if(Sansa){
	if(mislead(-protect(ROWS,TABLE[Stark < ( TABLE[Hodor][Sansa] )][20.64],rule(COLS)))){
	( -0.71 - ( 40.1 ) );
	if(-93){
	18
}
} else {
	if(Stark / protect(COLS)){

}
};
	y += -( TABLE[( -66 )][COLS > -76] ) - ( -y ) - ROWS
}
} else {
	Hodor /= ( -80 ) <= dog
}
};
	Sansa -= Sansa
};
	if(ROWS){
	y -= -Sansa
} else {
	if(COLS - Jon){
	Sansa -= Jon
} else {

};
	if(foo(( Hodor ))){
	COLS;
	if(mislead(( ( mislead() ) ),-0.93,mislead(( -destroy(-0.7,-ROWS) )))){
	if(y){
	Stark;
	( COLS ) / -26;
	Stark *= 49
} else {
	Jon *= --mislead(-0.25);
	if(COLS){
	mislead(-destroy(),Sansa)
} else {
	-( ( -130.0529 ) );
	TABLE[( COLS )][destroy(0.35,-COLS \/ bar(-Arya <= ( -mislead(x) ) + ---( ( 160.213 ) )))]
}
}
} else {
	Sansa += -720.5464
}
} else {
	if(-1){
	y += foo(-0.28,-Jon,COLS);
	Sansa /= COLS
} else {
	Jon /= COLS;
	--1;
	dog *= foo(y,-77,( COLS * COLS \/ ( --1 \/ y ) != -TABLE[Stark][TABLE[Sansa][( COLS )]] )) - mislead(TABLE[--0.53 \/ ROWS][-Arya],( Stark ),( ( foo(x,foo(Sansa,( Arya ) <= 0.61),ROWS) ) \/ TABLE[COLS][mislead(50,-58)] ))
};
	Sansa /= dog
}
};
	Sansa
}
}
def TABLE[( --mislead(--( -destroy(ROWS) != foo(ROWS,Hodor,--0.16) ),( ROWS )) )][k] {
	y
}
def mislead(){
	Sansa += rule(ROWS)
}
assert Stark : "Nothing burns like the cold."
var Hodor = 950.0482
var Stark = ( x )
var y = COLS
var Ygritte = 56
assert COLS : "What do we say to the Lord of Death?"
var Stark = y
def TABLE[( -0.68 )][k] {

}
def rule(Hodor){
	Jon /= x;
	TABLE[-0.63][-0.7 >= -53];
	if(COLS){
	if(TABLE[ROWS != 0.96][-rule(-dog /\ 1 > foo(1,destroy(( -1 ),( 0.28 > Arya ),ROWS)) == -30.642)]){
	Ygritte -= destroy(destroy(foo(),bar(-16)),-1);
	if(0.89){
	-40;
	Stark /= -0.11
} else {
	y /= -mislead(COLS,-970.015 == protect() >= ROWS);
	Hodor += ( COLS > ROWS )
}
} else {
	y *= ---0.16 > y;
	if(y){
	--destroy() <= COLS;
	ROWS;
	if(ROWS){

} else {
	if(-( TABLE[rule()][Jon] )){
	foo(mislead(-1,( protect(-( COLS ),( bar(rule()) <= Sansa )) ),-29),Sansa) /\ protect(( Jon ),-1);
	TABLE[betray(COLS,( destroy(( bar(y) ),580.522) ) / rule(Ygritte,-ROWS / 0.81 /\ -12,protect()))][ROWS]
}
}
} else {
	1;
	Ygritte *= destroy(mislead(( -Arya ),foo(dog / dog),mislead(1,Stark)) / Arya) > 530.9508
}
}
} else {
	Jon += --rule(ROWS,-TABLE[( Hodor )][( 1 )]) / -Stark * Arya == ( -( -16 ) );
	Ygritte /= ( ( TABLE[Arya][y] ) )
}
}
assert protect(protect(-bar(57,destroy(Sansa,COLS),Jon),-( ( ( Arya ) ) )),betray(( ( --41 /\ y ) ),-bar(Stark,-( bar(-rule(COLS,x),( --Hodor )) ),-15 /\ protect(COLS != TABLE[ROWS > 0.08][COLS],-foo(COLS),Ygritte) \/ Ygritte)),-3) : "One can not simply parse himself"
assert Sansa : "Nothing burns like the cold."
def foo(){
	TABLE[COLS][betray(bar(),-protect(-TABLE[COLS == bar(-0.01 / Arya,destroy(( 740.405 ) /\ ( TABLE[-23][betray(-COLS,( ( -Jon ) ) <= ( TABLE[-COLS <= ( TABLE[-400.55][0.34] )][TABLE[-730.074][-mislead()]] ))] ) < 1,-70,( -ROWS /\ rule(-710.9,destroy(destroy(),-COLS,destroy(-( -COLS )))) )))][( --0.07 )],bar(ROWS,Arya)) != ( ( ( COLS ) ) ))]
}
var Ygritte = -protect(0.04,Stark - 83)
def TABLE[( ( Jon ) )][j] {
	destroy(bar(COLS >= -y,530.04));
	Sansa -= x
}
def rule(Jon){
	y += protect(-TABLE[Jon][-y],-TABLE[-0.58][destroy(COLS < TABLE[-830.7236][0.3])]) != ROWS;
	0.52;
	-destroy(protect())
}
assert TABLE[betray(-620.9)][Stark] : "One can not simply parse himself"
var y = -bar() == dog * --1
var Hodor = ROWS
var Ygritte = y
var y = ( --( destroy(rule(ROWS,1,TABLE[foo(bar(),( ROWS ))][TABLE[( -foo(-76) )][Stark]])) ) )
var x = ( 0.74 )
def TABLE[destroy(Arya,-bar(--( -540.637 * --0.93 >= ROWS / ( destroy() ) /\ -Jon * TABLE[0.4][79] ) == Hodor),-42)][j] {
	Hodor *= ( ( -Jon ) )
}
var Hodor = 52
def TABLE[-0.06 == ( 57 ) / ( ( ( ROWS ) * -9 ) )][i] {
	Sansa += foo(1,protect(Sansa,--76 - Arya - ( ( ( 0.17 ) ) ) * Arya * -rule(ROWS,ROWS,rule(-rule(bar(dog,COLS) > 40 <= -( 1 ),COLS),-1) < -betray(-betray(( ( dog ) > Stark ),330.324 / TABLE[-bar()][TABLE[COLS][0.08]]))) - ( ( Arya ) ) <= Stark),78)
}
var Sansa = COLS
assert ( ROWS ) : "What do we say to the Lord of Death?"
assert Sansa < destroy(-400.4 + COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[protect(TABLE[TABLE[( -1 )][---Arya]][Jon / ( Sansa / Jon ) * ( ( Sansa ) \/ 0.72 ) \/ ( -y == COLS )],betray(ROWS),TABLE[ROWS][mislead()])][i] {
	if(0.87){
	Jon;
	if(Ygritte){
	if(( COLS )){
	Ygritte;
	if(( Arya ) <= rule(-y / -( 0.44 ) == bar(),Ygritte,dog)){
	dog += Jon
}
} else {
	Hodor /= COLS;
	if(76){
	if(( protect(Arya) == TABLE[TABLE[Ygritte][( rule(mislead(Hodor,-0.51)) )]][-Stark > --12] ) + y){

}
}
};
	if(--1 < ( ( --1 >= ROWS ) )){
	-( x ) / -56 < 100
};
	if(Ygritte){
	if(-( Ygritte / -Arya )){
	if(33){
	if(Sansa){

} else {
	if(( -34 )){
	if(-1){
	destroy(--bar(--0.56,( 1 ),COLS) >= 10.742 - ( TABLE[x][protect(( -0.1 )) - COLS] ),-0.99,rule())
} else {
	( foo() );
	COLS
}
} else {

}
};
	TABLE[ROWS][protect(COLS,0.83,Stark)]
};
	Ygritte *= -dog
} else {

};
	Ygritte /= dog
} else {
	if(Ygritte){
	Arya
}
}
}
}
}
var Sansa = rule() * -destroy()
def TABLE[COLS][i] {
	Hodor *= TABLE[COLS][TABLE[dog][betray(1)]] > bar(--0.68 == Arya,Ygritte,0.61 < Jon);
	Arya
}
assert rule(-79) : "One can not simply parse himself"
var Jon = -41
def mislead(Stark,y){
	-1
}
var Sansa = ( ( Jon ) )
def TABLE[COLS][j] {
	Hodor += -dog
}
def TABLE[( -TABLE[1][( destroy(bar(-TABLE[Hodor][-1],COLS,Arya + TABLE[TABLE[( -2 )][0.34]][TABLE[Arya][Sansa]]),foo(TABLE[Arya][( protect(destroy()) / 600.5 )] / -TABLE[COLS][-COLS] - bar(y,Jon),Jon,-831 - -bar(COLS,1,Jon))) )] )][k] {

}
assert rule(( x != -ROWS )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = Sansa
def TABLE[1 != -0.51][i] {
	-94;
	10.47
}
assert ROWS \/ y > ( mislead(y <= ROWS == destroy(--betray(x),( --( Arya ) )) * ROWS) >= ( bar(-betray(-45)) ) * ( ( dog ) ) < -( 670.855 == ( dog ) ) >= -( -Ygritte * ( -24 ) /\ destroy(( Stark ),Sansa) ) > Jon ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = COLS
def bar(Sansa,y){
	if(COLS){
	if(Sansa){
	Sansa;
	if(( destroy(890.6) )){
	Sansa -= -( -87 + y != y /\ 0.15 )
} else {
	if(( ( 25 ) )){

};
	dog += ROWS
}
};
	if(bar(rule(( TABLE[( TABLE[0.95 == bar(destroy(protect(ROWS /\ Hodor >= COLS <= Ygritte,-0.24,-13),ROWS,-Ygritte == -290.56))][( -TABLE[-rule(y)][destroy(TABLE[( ( 0.3 ) )][-protect(COLS,TABLE[destroy(0.94,Ygritte)][-ROWS] /\ x)],-1)] ) * -dog] )][Jon == -0.02] ),-7),betray(ROWS,71 /\ -TABLE[foo(ROWS)][-0.28 / bar(y,betray(dog,-370.84,-COLS) == -( destroy() ) \/ ( 280.549 ))] / protect(x,mislead(COLS - ( Sansa )))))){
	Arya *= COLS;
	if(( ROWS ) > bar() \/ ( y <= Ygritte != y )){
	Jon *= COLS * ( -0.4 ) <= ( -( Sansa ) );
	if(( TABLE[mislead(TABLE[COLS][-( x )] - ( destroy(35,COLS) ),--Jon / ( 9 ),Hodor)][Jon] )){
	COLS;
	Arya -= -55
}
}
} else {
	destroy();
	if(35){

} else {
	bar(( -x ))
}
}
};
	ROWS > y
}
def TABLE[x == ( -TABLE[-1][-44 > mislead(Sansa - Hodor,( Hodor ))] < -destroy(Hodor,y) )][k] {
	if(1 - bar(ROWS) /\ 1){
	x -= ( ( ROWS ) );
	if(( protect(--1) )){
	Hodor /= -Arya;
	x *= foo()
}
} else {
	if(betray(Stark,0.62 >= 80.2421)){
	foo(Ygritte,( -20.4 )) * 1;
	bar(-( -betray(( Jon ),bar(-COLS)) ));
	Hodor *= ( mislead(-0.08,x) )
} else {

};
	if(Hodor){
	( ( betray(-destroy(-( foo(Hodor >= COLS,-10,( 59 )) )) < mislead(-50 / ( ( -foo(( x ) == -0.6 == -0.04,Hodor) ) ))) ) );
	if(ROWS){
	Sansa += ( ( -rule(-0.37 \/ COLS,( TABLE[-ROWS][590.38] )) ) )
};
	Jon -= -0.22
} else {
	if(Stark){

}
};
	if(( 0.8 )){

} else {
	x += ( rule(ROWS,( COLS )) * COLS )
}
}
}
def TABLE[( -190.01 )][j] {
	if(ROWS){
	x += x
} else {
	--COLS \/ ROWS + -0.8
};
	if(dog){
	( x ) == -rule(rule(-foo(x),( -( bar(Arya,ROWS,mislead() / protect(Arya)) ) ),-0.98) * x);
	if(( Sansa )){

}
} else {
	if(-rule(( COLS ),betray(rule(Sansa,( ( ROWS ) ),bar(TABLE[( COLS ) - ( ( TABLE[Ygritte][( -64 >= rule(Ygritte,TABLE[COLS][-( TABLE[ROWS][Hodor] )]) )] ) )][Ygritte],Ygritte))))){
	( ( Ygritte ) );
	COLS
} else {
	foo(-( x ));
	-( betray(25,-protect(x /\ ( -foo(foo(y,-foo(-1) + 430.312 == dog / x),-ROWS,rule(rule(COLS \/ COLS),( mislead(Hodor,-( Stark )) ))) ))) ) < Sansa;
	if(0.17){
	Ygritte += ROWS / protect(-82 \/ destroy(---96,( destroy(( -( protect(COLS * --8,ROWS,mislead(ROWS)) ) )) ),-0.83),Hodor);
	dog;
	Jon
}
}
}
}
def TABLE[-Sansa][k] {

}
assert 0.78 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = -ROWS + --foo(Jon,-70) \/ ROWS
assert bar(rule(TABLE[bar(ROWS)][Jon \/ ( -( Ygritte ) )])) : "What do we say to the Lord of Death?"
var Jon = ROWS
def TABLE[( ( --36 ) - TABLE[( -TABLE[Stark][-ROWS + betray(Arya)] )][( ROWS ) != -Ygritte == bar(COLS) \/ ROWS] )][k] {
	if(betray()){
	if(bar(-60.7641 >= ROWS)){

} else {
	Stark += --66;
	Ygritte += Ygritte > Sansa
};
	( protect(COLS) ) < betray(COLS,ROWS)
} else {
	Stark -= ( ( ( 32 ) ) ) <= ROWS;
	betray(-betray(-18,ROWS) / ( TABLE[( Jon )][bar(Ygritte)] ))
}
}
def TABLE[foo(( ( Stark ) ),-0.43)][k] {
	0.39
}
def destroy(dog,Sansa){
	if(protect()){

} else {
	Hodor *= y;
	if(( -Hodor / y ) \/ ROWS){

}
};
	if(COLS){

} else {
	dog -= y;
	0.67;
	Arya += ( destroy(betray(-38),bar(x,-56)) == -0.11 * Sansa )
}
}
def TABLE[85][i] {
	y += ROWS
}
def foo(){
	Hodor >= protect(protect(TABLE[x \/ mislead()][-dog > ( COLS )],rule(-ROWS),TABLE[TABLE[betray(y)][mislead(ROWS)] == -( Arya ) <= ROWS][ROWS]),1)
}
assert -1 : "What do we say to the Lord of Death?"
var y = Sansa
var x = COLS
def TABLE[( Jon ) != mislead(( -85 ),( ROWS ))][j] {

}
var Arya = betray()
def TABLE[-1][k] {
	--Hodor;
	if(( bar(Hodor) )){
	if(ROWS != x){
	if(protect(TABLE[-Ygritte][Jon] + -450.41)){
	dog *= destroy(180.6771,dog) /\ 0.75 / mislead(-83);
	if(COLS){
	( 0.34 );
	bar(TABLE[0.48][TABLE[( Hodor )][-79]]);
	if(( COLS )){
	if(betray(COLS < ( mislead(-( --foo() == ( -0.66 ) )) ))){
	-560.953;
	1;
	Arya /= ---mislead(-76) \/ ROWS + ( 1 )
};
	( ( -23 ) ) / -Sansa > Hodor;
	920.85
}
}
} else {
	Stark /= Sansa != -foo(rule(Ygritte,foo(-67)),( destroy(x) ))
}
}
} else {

}
}
assert ROWS : "One can not simply parse himself"
def TABLE[Sansa][k] {
	if(mislead(destroy(( ( ( Sansa == ( -Arya ) ) ) ),Jon,ROWS))){
	TABLE[Arya][rule(--14)]
} else {
	ROWS != TABLE[( dog )][-0.77];
	if(37){
	1 - 1;
	-810.0768
} else {
	if(( COLS )){
	x -= -16 < COLS;
	if(( COLS + ROWS ) \/ COLS){
	-1
}
} else {
	if(COLS){
	if(( rule(COLS,( -y * TABLE[( 0.97 + ( -ROWS ) > -dog )][foo() == COLS] == destroy(rule(x)) )) ) - foo()){
	Hodor *= --10 <= dog;
	if(dog){
	Arya -= -0.9;
	0.38 <= ( y )
} else {

}
};
	Jon /= ( ( Stark >= -rule(TABLE[( mislead(foo(COLS,( ROWS > -TABLE[( COLS )][bar(--760.924 < --100 - -ROWS - -0.97 > 0.95 != protect(( ( TABLE[dog][foo(TABLE[( -Hodor )][97],Stark)] ) )) + Arya \/ Sansa,( TABLE[( ( 640.864 ) ) < Sansa >= ( destroy(Stark,Jon) * mislead(betray(mislead(destroy(-y \/ ( 440.9 ) < -90.23)))) )][x / Stark] ),Hodor)] /\ ROWS ) / Jon,1)) )][690.1 < dog],--0.81,protect(49,ROWS,dog)) == -35 ) );
	( 0.78 ) * TABLE[-betray(Ygritte,-1,destroy(TABLE[( -( TABLE[destroy(-89,Jon,-( COLS ) <= --Hodor)][bar(COLS,foo(destroy()),-1)] ) /\ 71 )][-foo()] > TABLE[( Jon )][COLS / rule()] + bar(betray(( -( ROWS ) )),mislead(Jon,y)),( -66 ),( -mislead(rule(-96,COLS),--430.3) / -94 ))) + Sansa][COLS]
} else {
	Jon += ROWS
};
	Hodor -= ( -mislead(y * ( Arya ) >= TABLE[-Stark > ROWS][destroy(0.67) != ( protect(( Stark /\ COLS )) )],-( ( ( 46 ) ) )) );
	if(-bar()){

}
};
	if(COLS){
	Stark /= bar(-ROWS);
	Stark
} else {

}
};
	if(destroy(betray() > 0.28) == 690.25){
	---protect(COLS);
	Sansa *= Ygritte
} else {
	if(-1){
	-0.39;
	ROWS
} else {
	if(ROWS){
	foo(( x ),( ( foo(Hodor,-17) ) ),ROWS)
};
	if(( ( 1 ) )){
	betray(ROWS * Sansa);
	( betray(3,-( -36 )) > ( ( -Jon ) ) )
} else {
	x -= ( ( Jon ) \/ -0.48 );
	Sansa -= COLS;
	( x )
}
};
	Arya -= bar(--91 != mislead(-TABLE[( 1 ) != ( ( 1 ) + ( 44 <= -x ) != COLS )][( ( --TABLE[TABLE[( Sansa >= Hodor )][-( foo(x) ) * -1 * -COLS] != --Hodor][bar(-dog == TABLE[Jon][-Arya]) < --( --9 ) <= destroy(-ROWS,( 0.62 ),protect(( rule(Stark) ) \/ -Sansa,( COLS ),betray(y,destroy(( 1 ),( betray(ROWS,COLS) )),( ( ROWS * Hodor ) )))) > -Arya] ) \/ ROWS )],-0.21) + COLS)
}
};
	-y * TABLE[-( ( Sansa ) /\ destroy() ) /\ protect(( betray(0.87) ),rule(-520.51))][Ygritte] < -foo(-1,bar(Jon,( ( ( ----( -bar(ROWS == Hodor) + Stark ) == ROWS - ROWS == Jon /\ ROWS ) ) ),foo(betray(),foo(bar(COLS),dog,Ygritte))))
}
var y = protect() + 88 \/ -1 != -( -96 ) > ( -COLS ) > Stark >= protect(Jon) + Stark / TABLE[( -0.71 )][1]
var dog = 1
assert destroy(-36,-TABLE[betray(-62)][0.74 \/ -62]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Sansa,y){
	x;
	Ygritte * ( -Ygritte ) / --TABLE[( -Ygritte )][( -TABLE[ROWS][-( -ROWS )] )];
	-Stark < ( bar(y,bar() /\ destroy(-0.4 == 620.74 < ( TABLE[COLS / COLS][COLS] ),ROWS)) )
}
var Jon = bar()
def protect(){

}
assert destroy(( -95 )) : "Winter is coming"
var Sansa = 5
assert -( y ) : "Fear cuts deeper than swords."
assert y : "Nothing burns like the cold."
def TABLE[Arya - Arya][j] {
	-foo(bar(mislead(),-COLS));
	Hodor += Jon
}
assert bar(betray(-1,bar(protect(TABLE[COLS][( -Stark )])))) : "Winter is coming"
def TABLE[-670.36][i] {
	-0.41
}
def TABLE[-160.305][i] {
	x += destroy(--1,betray(protect(foo(1),-9)))
}
def protect(){
	if(dog){
	-dog
} else {
	if(--Arya + TABLE[91 * -ROWS][Sansa] - -betray(( ( Jon ) ),x / rule(betray(( -ROWS )) /\ -67 * TABLE[bar(( foo(( TABLE[-0.55][betray(bar(-Hodor != mislead() == COLS \/ Arya,ROWS,protect(Hodor,-3) \/ ROWS))] )) ),-ROWS,0.35)][( ( Arya ) )],Jon) * ROWS < -( -TABLE[destroy(Jon,0.77,Arya)][--950.12 * ( -0.97 ) / x * 0.98] ),Arya) - Hodor < ( -1 <= --( -Hodor ) )){
	y += betray(Stark,destroy(( Jon )));
	x += y <= -20;
	Sansa += -Jon
}
};
	dog -= -61
}
def protect(Hodor,Sansa){
	Jon *= ( ( ( 0.56 ) ) );
	( ( -COLS ) )
}
def betray(Sansa,Sansa){

}
var Jon = ( -1 )
assert ( -( -TABLE[( --( ROWS ) ) * -97][TABLE[( ROWS ) == -( --0.16 * foo(( TABLE[COLS /\ --1 * TABLE[Sansa][-0.32] != 0.84 / mislead(rule(y,x),ROWS) < ( ROWS >= ( -( -Hodor ) ) ) > foo(Ygritte)][-Ygritte * -Jon] )) - ( rule(Sansa,-0.17) ) )][( Ygritte ) != COLS]] + ( foo(TABLE[mislead(bar(-99 < rule() \/ dog),mislead(protect(ROWS,rule(-990.36),Sansa),COLS),( rule(x) ))][COLS],dog) < ( mislead(rule(),( COLS )) ) ) ) ) : "Winter is coming"
var Jon = -TABLE[-22][Arya]
def foo(dog){
	if(-foo(( COLS ),-310.08 \/ ( foo() ),-1)){
	Arya -= -ROWS;
	COLS * -1
};
	if(-49 <= Ygritte){
	if(82){
	-destroy()
}
} else {
	foo(( dog \/ COLS ) - ( -0.48 ) \/ ( mislead(( ( -150.094 ) )) ),400.6653,0.67 * -1) < bar(TABLE[( --( betray(-TABLE[( ( --1 ) )][52]) ) )][Stark] < -1,( ( Arya ) ))
}
}
def destroy(Jon,Jon,Sansa){

}
var dog = -68
var x = ( TABLE[-970.9698][betray(( ROWS ))] )
assert ( 1 ) : "Winter is coming"
def destroy(Ygritte){

}
def rule(Arya){
	if(COLS){
	protect(Hodor,dog) - --( Stark )
}
}
def protect(Jon,x,Stark){
	1;
	dog += x / ( ROWS ) / y
}
var Stark = ( x \/ -Hodor != ( bar(-dog,Ygritte,mislead(betray(-COLS < protect(-( 1 ),bar(-18,( -0.98 )) < -betray(1),-COLS),-TABLE[betray(COLS,( -( -Ygritte ) ))][COLS],( COLS )),rule(--y))) ) >= 0.16 )
def TABLE[71][k] {
	( ROWS ) == Jon
}
assert x - -870.36 : "Nothing burns like the cold."
def bar(y){
	Jon += 99;
	( ROWS ) + x
}
def TABLE[-34 /\ dog <= mislead(mislead(-COLS),ROWS,y)][k] {
	destroy(( foo(-( -0.5 )) ),TABLE[foo(mislead(Ygritte) < x)][( Sansa )]);
	y *= betray(-62,TABLE[( 0.94 )][-COLS] - COLS)
}
var Sansa = ( COLS )
var y = 0.97
def TABLE[-( ROWS != ROWS )][i] {
	if(-Jon){

} else {
	1
};
	if(( bar(-( -( ( destroy() ) ) )) )){
	Hodor -= 0.7
} else {
	y -= ( bar(TABLE[y][ROWS]) );
	( TABLE[rule(Jon,foo(COLS,-0.13),TABLE[betray(( COLS ) / Arya < ---( foo(( y ),foo(Stark,COLS) > COLS - betray(ROWS,--4),bar(Sansa >= ( 0.97 ))) ))][-TABLE[-18][0.34]])][-Arya] )
};
	Hodor -= x <= COLS
}
def TABLE[rule() == ( ( ( COLS ) ) )][i] {
	7 != TABLE[foo(Hodor,protect(COLS,Sansa))][TABLE[foo(-Stark,COLS != 67)][1]];
	-( TABLE[bar()][0.75 != ( 0.41 < -0.57 )] )
}
def bar(Stark){
	if(-190.7188){
	( destroy(-x != ( 0.98 )) )
}
}
var Sansa = dog == -1
assert -y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( --ROWS >= Stark /\ TABLE[Sansa][destroy(--foo(COLS >= bar(-COLS,ROWS,destroy(Jon / bar()) - protect() != -ROWS),Stark,-foo()),-57)] * ROWS ) : "One can not simply parse himself"
assert -1 : "Nothing burns like the cold."
def foo(){
	-protect(Hodor,COLS);
	Stark += -betray(Stark,betray(protect(Arya,-26 /\ Jon)))
}
def protect(Ygritte,Arya,dog){
	if(( ROWS - -( ( bar(Sansa <= COLS + protect(1,-29,TABLE[rule(ROWS,81 + -38 >= -1,( ( Ygritte ) ))][( -mislead() )]),TABLE[protect(( bar() <= -0.49 ),( betray(--x,COLS) ))][0.91]) ) ) )){

} else {
	dog /= bar();
	TABLE[-290.3574][y];
	Hodor
};
	( bar(( protect(Ygritte,COLS != COLS) ),dog) )
}
var dog = COLS <= COLS
var Jon = destroy()
def betray(Jon,Ygritte,dog){
	if(ROWS){
	if(COLS){
	if(( bar() ) != rule(-0.77)){
	if(-protect(rule(0.37 + betray(Stark)),( ROWS )) == -54){
	y -= -( ROWS ) >= ROWS;
	if(53){
	TABLE[( bar(0.72) )][( bar(-1) != bar() )]
} else {
	if(( -y * -69 <= ROWS <= 0.64 )){

} else {

};
	Sansa -= --1;
	if(Jon){
	if(TABLE[( Stark )][Arya < COLS + Ygritte]){
	if(----0.86){
	Jon;
	dog -= 14
};
	if(0.87){
	x += Ygritte;
	-( ( ( TABLE[Ygritte][TABLE[( ROWS ) /\ ROWS][foo(0.23)]] ) ) < betray(ROWS,( COLS )) )
} else {
	if(-bar()){
	if(y){

};
	if(mislead(mislead() /\ protect(Arya,rule(TABLE[1][( TABLE[ROWS][Arya] )],ROWS,17)) / x)){
	Sansa -= -( 1 + -foo(betray(Jon) != ( destroy(-rule(0.13)) )) / ( --TABLE[-( ( -0.69 ) ) / mislead(Stark)][bar(protect() \/ COLS,( Ygritte ))] ) != betray(foo(COLS)) <= dog );
	x
};
	if(-bar(Stark,-mislead(mislead(foo(( betray() )),( 32 ),destroy(-0.43,ROWS))))){
	if(Jon != ( -78 )){

}
}
} else {
	Sansa
}
}
} else {
	foo();
	ROWS
};
	-67
}
};
	if(( bar(Hodor,-610.1968,x) )){
	0.75;
	Arya += ( Hodor ) <= bar() > -1 == 54
} else {
	if(83){
	if(250.3739 != 75){
	Arya += Jon
} else {
	if(-290.858){
	if(-0.59){
	if(TABLE[ROWS][TABLE[ROWS][-destroy(protect(-0.55)) * ( COLS ) != -0.97 /\ rule(-dog)] != foo()]){
	if(--destroy(0.22)){

}
} else {

}
} else {
	Jon += mislead(mislead(foo(-Stark != Hodor) <= foo(-ROWS),foo(-1,x <= 900.2 + -COLS \/ TABLE[COLS][( --mislead(-dog) /\ -0.79 \/ ROWS >= ( --0.24 ) /\ COLS != ( Ygritte ) >= COLS )],y),Ygritte),( y ));
	if(Ygritte){
	y *= betray(( 640.63 ) == -( Stark ) + 0.42,-ROWS);
	Sansa -= Sansa * 54 == ROWS
} else {
	( TABLE[mislead()][Ygritte] );
	Hodor -= 1
}
};
	if(ROWS){
	Ygritte /= TABLE[80.66 * Hodor][foo(( ---Sansa >= -650.87 ))];
	--Jon
}
} else {
	ROWS;
	COLS > destroy(-TABLE[protect(-93,destroy(rule()))][0.72]);
	--0.71
};
	-TABLE[Jon][betray(-mislead(76) == -530.067 + --580.0221 >= ( x > COLS ) / Stark + dog * dog,Arya)] \/ -y;
	Sansa -= betray(-x * 26 != Arya)
}
} else {
	Stark += ( betray() ) <= -0.22
};
	Stark -= ( COLS );
	if(-( Arya )){
	--protect(protect(),COLS,0.25);
	if(COLS){

}
} else {
	if(-mislead(-TABLE[rule(mislead(-1,-( TABLE[Stark][( -protect(-1) == -0.3 )] ),y),bar())][Ygritte])){

} else {
	x *= -0.87;
	if(-protect() >= COLS){
	COLS
}
};
	if(-64 \/ TABLE[protect(Jon) != Sansa][COLS == -( 92 )]){
	if(Hodor){
	( rule(Jon) )
} else {
	Arya += foo(0.88,-TABLE[Ygritte == ( 1 )][-betray(-Jon > COLS,-TABLE[destroy(ROWS)][destroy()])]);
	if(dog * ROWS){
	if(destroy(TABLE[rule(TABLE[Sansa][ROWS],-0.08)][Jon] * -1 >= ( -( -270.324 ) ),protect(COLS))){
	if(0.34){

};
	destroy();
	Arya -= COLS
};
	-ROWS;
	Arya *= -( -0.32 )
} else {
	if(TABLE[65 + rule(Arya)][-( rule(Hodor,ROWS,Ygritte) != Ygritte ) != y]){
	if(-0.31){

};
	if(rule() - TABLE[x][( COLS ) \/ -destroy(( Hodor < ( -foo(Ygritte,( dog )) ) ),( COLS ),destroy(-TABLE[( 22 == -( --0.85 >= -94 ) / ( y ) )][ROWS],--1))]){
	Jon /= 900.449;
	rule(rule(),1,( -( x ) * COLS ))
}
}
}
}
}
}
}
} else {
	Stark *= -( ( -1 != -ROWS ) ) <= TABLE[-mislead(TABLE[protect(TABLE[y][-Jon - -1],( betray(( Ygritte ),-protect(-( ( TABLE[COLS][( --( -( ROWS - TABLE[Ygritte][( -10 )] ) ) \/ TABLE[Arya][TABLE[--40.42][0.6]] ) != -81] ) /\ 8 / -0.62 ),x)) )) * TABLE[-0.89][( mislead(ROWS / destroy(--1) < -0.32 > ( -destroy(ROWS,ROWS) /\ -620.2 + -( COLS ) /\ 0.55 \/ ( -57 ) ),Jon) )]][( ( Jon ) ) + -( 1 )] >= -60)][-0.79 == -( -----( ROWS ) )];
	dog -= -mislead(bar(TABLE[-Hodor][-ROWS],-destroy())) + Sansa
}
};
	if(0.71){

} else {

};
	protect(24 <= 0.16,99) + --1 \/ -( COLS )
} else {
	if(( ( ---ROWS ) )){
	-Sansa;
	if(dog){
	-0.43 \/ COLS
} else {
	Sansa += -410
};
	betray(--0.9)
};
	destroy(( foo() ));
	-Hodor
};
	TABLE[-Stark][-1]
} else {
	if(TABLE[-ROWS][TABLE[COLS][0.15]]){
	x -= ROWS
}
};
	-0.61
}
def TABLE[( -86 /\ --( ( protect(( Sansa ),-COLS) ) ) )][j] {
	if(Arya){

}
}
def TABLE[Ygritte][i] {
	dog -= dog
}
def rule(y,Jon){
	if(--TABLE[ROWS][protect(Ygritte,rule() > -20,y - ( -54 ) * foo(( Hodor ) - bar(830.305),COLS))]){
	Ygritte += bar(Arya,--COLS);
	Arya += protect(-0.16,mislead(protect(Stark))) + -670.2 <= 270.41 + --betray(TABLE[COLS /\ -0.39][-protect()]);
	dog *= -foo() /\ Arya
} else {
	ROWS * x;
	Hodor *= x
}
}
def TABLE[-1][i] {

}
var x = ( dog )
var Sansa = TABLE[Hodor][-dog]
def TABLE[-Ygritte][i] {
	dog += ( ( -COLS ) >= ---( -Hodor != -Ygritte ) + -570.97 );
	COLS;
	Hodor += 39
}
var y = --1 > --0.32
def destroy(){
	if(COLS){
	if(90.73){
	-TABLE[-0.12][destroy()];
	-960.43;
	Jon /= betray(Hodor,foo(-protect()),-0.38)
} else {
	if(Stark){

}
}
}
}
def TABLE[( bar(( -Sansa ),( -TABLE[--ROWS][betray(( 0.2 ))] > protect(---( Jon ),-0.34 - --1 * dog > 0.54) / mislead(-x,COLS) >= ( ( ROWS ) ) < mislead(x \/ bar(-43,COLS * -0.3 * ( Jon )),ROWS) )) )][k] {
	( ( ROWS ) >= ( Sansa ) + ROWS );
	Arya /= betray(-0.76,COLS)
}
var Sansa = -TABLE[( rule(mislead(-0.43,x,-96)) )][( ROWS )] >= TABLE[-( ( ( ( protect(TABLE[81][TABLE[( ROWS )][ROWS]]) ) ) ) )][-Arya]
def TABLE[COLS][j] {

}
assert ( ( TABLE[-betray(--( --x ),destroy(mislead(),0.93 > protect(-810.1124),TABLE[1 != -mislead(( ROWS ),foo(Arya,37 / ( Hodor - ( TABLE[Hodor][dog] ) / ( -ROWS ) + bar(ROWS) )) + y) /\ TABLE[-1][48] * ( foo(-0.14) )][( 71 ) <= --1]) / ROWS)][Jon] ) ) : "Fear cuts deeper than swords."
assert mislead(TABLE[( ROWS )][Ygritte * ( -COLS ) >= foo()] != Hodor,protect(Arya),( COLS )) : "Winter is coming"
def TABLE[( -TABLE[Arya][( TABLE[Stark][-0.03] )] /\ Arya ) * Stark][j] {
	if(COLS){
	y
}
}
assert ROWS != --bar(COLS) / Ygritte : "One can not simply parse himself"
var x = -Hodor
assert ( ( 31 == bar(( 26 ) < -97) ) ) : "Nothing burns like the cold."
var Stark = -1
var Jon = foo() == betray(TABLE[y][( y )],bar())
def protect(y,Arya){
	if(560.5227 <= betray(( ( ( TABLE[rule(60,-0.19) <= ( -ROWS * -0.79 )][-ROWS <= 0.82] ) ) ),-( ( -80 ) ),-mislead(110.1,( -340.7 ),-Arya)) != -770.322){
	x -= ( -ROWS );
	Hodor -= protect(-0.93)
};
	( Stark ) >= COLS
}
def TABLE[ROWS][i] {
	( ( Ygritte < 59 ) )
}
var y = --TABLE[ROWS][( 49 ) * -32 \/ -( protect() )]
def rule(x){

}
def rule(){
	92
}
var Hodor = -14
def TABLE[--94][i] {
	y *= -0.09;
	x /= 0.98;
	if(COLS){
	if(-68){

} else {
	Sansa -= 1;
	if(-450.659){
	COLS
}
};
	y /\ y
} else {
	ROWS;
	if(-TABLE[-ROWS][Jon > 0.2 < foo(COLS,Arya,Stark)] == Jon /\ -44 \/ ( -0.88 ) > --45){
	( ( -1 ) );
	1;
	if(ROWS){
	5
}
} else {
	if(1){
	if(-ROWS){
	if(foo(-42,-20)){
	if(COLS){
	-640.233;
	COLS
} else {
	if(( Stark )){
	( ( ROWS ) )
} else {
	if(-mislead(-( y ) < -40.745,( -betray(( x ),rule(-Stark),y) ),-100)){
	if(( ROWS ) == COLS <= ( dog )){
	Stark += -COLS /\ TABLE[-COLS < dog][TABLE[Jon][bar(foo(TABLE[--0.66 / Stark][Hodor /\ 40.6],( protect(Stark) )),-( ( ( TABLE[y][27] ) ) ))]];
	Hodor += ROWS
} else {
	if(( ROWS )){
	if(-50){
	if(Sansa){

} else {

}
} else {
	Jon /= TABLE[Jon][--96]
}
};
	Sansa += -Stark >= --( -( Ygritte ) > -y )
};
	Arya /= dog
}
};
	TABLE[-74][bar(-0.72,dog)]
}
};
	if(COLS){
	( betray(protect(TABLE[destroy(ROWS)][ROWS /\ Hodor]),Stark) \/ ROWS );
	foo(( TABLE[390.12][Arya] ));
	betray(-dog,49)
} else {
	( ( ROWS ) )
}
};
	-ROWS
} else {
	y;
	if(TABLE[-COLS - -( ( --1 < -0.37 > ( ROWS ) - rule(-28) ) )][Jon]){
	Sansa /= -ROWS;
	Sansa /= protect(rule(( ( -0.97 ) ),mislead()),foo(betray(-rule(--18 <= -1 /\ ( protect(( -170.22 ),-32) )),( y )),foo(( betray(Stark) ),Stark)),0.66)
};
	if(COLS == 52){
	Ygritte += 0.47;
	if(--Hodor){
	x -= ( -destroy(( -53 ),( Stark )) != COLS ) <= destroy(betray()) - 9;
	-COLS
}
} else {
	if(-1){
	if(destroy(Hodor)){
	if(1){

};
	if(rule(COLS,2)){
	betray(-TABLE[--1][( Stark )],-( ( COLS ) ),COLS);
	if(( Ygritte * dog )){
	-x;
	Stark += 0.17
} else {
	y;
	-( y / mislead() ) /\ Hodor;
	if(ROWS){
	dog /= Ygritte;
	if(( -Stark ) > rule(0.42,( 99 ) < 82,ROWS)){
	if(COLS){
	--COLS;
	Jon /= 0.6;
	Hodor /= protect(1,460.503) > --110.367 != TABLE[-COLS][( ROWS )]
} else {
	( dog <= ( TABLE[( TABLE[( bar(Stark,( mislead() \/ -dog <= ROWS != -39 )) )][1] )][-240.1] ) );
	if(( --Ygritte < ROWS >= -rule() <= TABLE[-610.29][-( 460.912 )] )){
	Ygritte /= rule(( ----foo(-38) >= ( Arya ) ))
} else {
	if(ROWS){
	Jon *= --1
} else {
	110.984;
	Jon += Jon
}
};
	( ROWS ) == ( bar() )
};
	if(-( betray(( 0.39 ),-dog + --56 /\ ( TABLE[( 12 )][0.32] ) + -39,betray(-0.14)) )){
	x += COLS;
	if(Ygritte){

} else {

};
	if(rule(-ROWS)){
	if(Arya / -15){
	if(--890.2){
	x -= Arya
} else {
	if(-0.42){
	ROWS;
	Ygritte += ( -Arya )
} else {
	( ( ( rule(( ROWS )) ) ) ) - -TABLE[Arya][0.36] == -67
};
	if(-x){
	Arya += destroy();
	Stark += ROWS >= -x > ( 1 ) < ( -410.0982 ) /\ betray();
	x -= -0.18
} else {
	x -= ( destroy() )
}
}
}
} else {
	if(ROWS){
	-rule(( -bar(Jon) )) /\ COLS + y > protect(Stark,TABLE[( COLS )][( 0.04 )]);
	if(x){
	COLS;
	bar(bar(--dog,-ROWS),destroy())
}
} else {
	Stark
};
	0.85
}
} else {
	if(mislead() == Ygritte){
	Hodor -= y
} else {
	Jon /= Ygritte;
	destroy(---250.149 < betray(-0.02,-0.09,destroy(betray(-( --destroy(1) ),dog))) /\ ( COLS ) != betray(--1 - ROWS),( ( foo() ) * rule(rule(Arya),protect(Hodor)) > x / TABLE[7][bar(-( Sansa ))] \/ foo(Stark) >= foo(x) ));
	if(42){
	y += x
}
};
	y
}
}
}
};
	Ygritte += 1
}
};
	ROWS
};
	if(-betray(( ( destroy(foo(( ROWS ),ROWS,Arya)) ) * destroy(Ygritte,ROWS,44) / -26 >= 64 != 0.82 ),COLS) - -TABLE[( ROWS )][-COLS] == y){
	-( destroy(ROWS,destroy() /\ destroy(rule(( foo() )),protect()) > Ygritte) ) < x
} else {
	dog /= ( ( ( COLS ) ) )
}
}
};
	if(-0.17){
	if(bar() >= ROWS <= -( bar(TABLE[ROWS][( ( 0.7 <= rule() - ( ( ( betray(-COLS,( 1 == 0.16 <= -COLS ),-( dog )) ) ) ) ) )] \/ COLS) * ( -protect(1) ) )){
	Hodor /= -Sansa;
	if(-ROWS){
	Jon /= ( Sansa )
} else {
	y += ( -1 )
}
} else {
	if(Stark /\ ( 0.32 ) >= --32 > foo() + ( --Jon * ( destroy(-TABLE[Arya][COLS],bar(Arya,0.51)) != -TABLE[rule(dog,rule(0.98,ROWS)) * bar(Arya)][( 0.23 )] != -6 /\ -( foo(TABLE[0.02][-0.66]) ) ) /\ -0.75 ) > 510.17){
	COLS
};
	Arya *= -1 < -0.7 - COLS
}
} else {
	Ygritte /= --( -0.22 )
}
}
}
}
def TABLE[Hodor < COLS][j] {
	if(TABLE[-1][55]){
	if(betray(ROWS)){
	foo(TABLE[bar(mislead(( ( protect(y,COLS,-destroy(destroy(-1),67)) ) ) >= rule(-rule(rule(betray(( Hodor ),ROWS) < ( foo(x,-( destroy(-760.87,betray(( ( Stark ) ),( Jon ),x \/ -TABLE[( COLS )][Sansa] < -COLS /\ -foo(-Jon,( -( 300.7 ) ),( ---bar(rule(-ROWS,COLS,-( --54 )),ROWS) )) * mislead(x)),( ROWS )) ),--( ROWS ) + betray(destroy(-1))) /\ TABLE[0.98][0.51] \/ -22 /\ dog != foo(-96,-mislead(74,-61) /\ -92 /\ destroy(Ygritte)) ),destroy(( ROWS ),-Jon,-mislead(Ygritte,( 0.82 )))),Hodor,-( -x )) < ( TABLE[( 0.71 <= -0.77 )][destroy(y,foo(-( ROWS ),Arya))] ) /\ protect(( ( -TABLE[x \/ -betray(( rule() ),-1)][destroy()] ) ),--TABLE[0.6][Arya]) / x) < -COLS),-38) <= -680.56][-( betray(-ROWS) )] <= ( ROWS ));
	if(TABLE[Ygritte][foo(Ygritte,( Sansa ))]){

} else {
	if(-rule(-54)){
	Sansa -= mislead(betray(Hodor))
};
	dog;
	Arya *= TABLE[0.82 >= x][-52]
}
}
} else {
	Sansa -= -38 - -53;
	Jon += --( ROWS )
}
}
var Stark = destroy(betray(foo(COLS)),-560.76)
assert Arya : "Winter is coming"
def foo(Jon,Sansa){
	if(-TABLE[Arya][Stark] != 1 == y){
	-220.42
} else {
	if(( TABLE[( ( ( ( ( destroy() ) ) ) ) )][( -( -51 ) )] )){
	Ygritte += ( betray(-220.147) != -340.15 )
} else {
	0.53
};
	Sansa -= Sansa;
	-( Stark ) <= Jon
};
	foo(Stark,-x)
}
var x = -TABLE[bar(ROWS,-( TABLE[-0.38][COLS] )) / ( ( -dog /\ --350.6011 ) )][bar(y)]
def rule(x){
	( dog ) != 0
}
def mislead(){

}
assert 94 : "What do we say to the Lord of Death?"
def TABLE[Sansa][i] {
	Arya /= Hodor;
	( betray(bar(-Arya),( --dog ),protect(-TABLE[1][-Ygritte])) );
	if(1){
	if(( -( ( betray() == protect(x,--780.95 <= ( ROWS ) != protect(TABLE[( ( betray(0.06,-0.57) ) )][93])) / destroy(Hodor * rule(78 == foo(Jon) * Stark,destroy(1 + ( ( -( ( mislead() ) ) > -80 < rule() ) > foo(--( dog ) > ( y )) ),-18,y),-y >= ( -1 ) /\ ROWS)) ) ) )){
	Jon -= dog;
	if(-25){
	Stark -= -24
} else {
	Jon -= protect(Stark)
};
	if(( x == x )){

} else {
	Stark;
	if(( ( Hodor \/ COLS ) \/ -( rule(-500.7) ) / ( -ROWS ) )){
	dog *= -( ROWS );
	Ygritte /= ( 0.26 == 90 );
	if(bar(destroy(---( x ) \/ rule(0.8 >= Arya),betray(-1 > Hodor)),Ygritte,( bar(-Hodor) ) + Stark)){

}
}
}
};
	y -= -55
} else {
	0.01
}
}
def TABLE[Arya >= 13][j] {
	Jon /= -Sansa;
	-1
}
var Sansa = ( destroy(--rule(TABLE[550.8][--( -63 ) >= ( ( Arya - -rule(x,--Stark >= dog > ( --70 < 1 )) != TABLE[ROWS][700.4524] - 390.807 ) ) /\ ROWS],destroy(Jon,dog,-ROWS != -TABLE[1][--TABLE[( ( ( COLS /\ ( ROWS ) ) ) )][-betray()]] == Stark)) != mislead(Hodor >= mislead() <= ROWS),99) <= ( -ROWS ) )
assert ( 1 <= ( destroy(( TABLE[-37][-0.03] ),-mislead(( rule(--0.42) ),-0.71,rule(--58,( -Arya \/ -( 960.25 ) ),dog))) ) ) : "One can not simply parse himself"
assert ( 560.125 ) : "One can not simply parse himself"
def TABLE[TABLE[ROWS][-Ygritte <= ( foo(mislead(( -78 ),--Sansa,--Arya),ROWS) )]][j] {
	if(TABLE[-0.26][ROWS /\ --300.3 <= Arya]){
	if(foo(y,( -( ( COLS * Stark ) ) ),( dog ))){
	dog;
	if(COLS){
	( -Ygritte );
	if(protect(( Stark )) + -destroy(-64,x,-ROWS /\ Hodor)){

}
};
	if(Ygritte){
	if(---dog){
	if(1 > ( TABLE[-( protect(Jon,Ygritte + -ROWS / COLS /\ Stark < y == -ROWS) ) /\ ( -( -54 ) )][-0.94 <= mislead(ROWS,42) /\ -510.43 - TABLE[( -( Stark ) ) / -61][COLS]] )){

};
	( destroy() ) == y
}
}
} else {
	( 93 );
	ROWS
}
}
}
var Arya = -47 / -TABLE[--y][-14]
var Stark = -780.754
assert 0.95 : "What do we say to the Lord of Death?"
def TABLE[y][j] {
	56
}
def TABLE[-91 > ( rule() )][j] {
	if(( TABLE[Ygritte][1] )){

};
	COLS
}
assert Jon : "Winter is coming"
assert -0.46 : "What do we say to the Lord of Death?"
def destroy(Jon,y,Ygritte){
	Sansa *= -Arya;
	if(rule(foo(--( Stark )),( -0.43 ))){
	if(betray(bar(TABLE[--0.83 == ( Stark >= COLS ) /\ --( 1 ) > Sansa <= -810.101][-Sansa] > ROWS,970.79),y == ( -0.22 ),-Sansa)){
	1;
	( --95 );
	Hodor += -( Ygritte )
} else {
	if(protect(-0.77)){
	if(betray()){
	if(TABLE[TABLE[x <= destroy(-78)][-protect(x / Ygritte) / betray(--rule(--( -Arya ) == dog - ( Ygritte ) /\ -TABLE[--bar(--mislead(destroy(Ygritte,--protect(COLS,-1)) - 0.04 \/ ( --Ygritte )),-Jon) >= bar() / ( TABLE[-betray(x,Stark >= Ygritte,-17) > betray(mislead(y),TABLE[mislead(( 350.707 )) * TABLE[protect()][-( betray() )]][-( ROWS )]) / -y][( Hodor )] )][TABLE[( -3 )][1 > -COLS / 12]] /\ 1 == mislead(Stark,ROWS,-foo(-( foo(0.89,-( protect(bar(1,destroy(Arya,Sansa),protect(-bar() * Sansa,-COLS))) ) > --( ( TABLE[TABLE[-0.17][-( Ygritte ) * mislead() <= TABLE[-1 + ( ROWS )][840.22]]][-ROWS] ) ) < betray(( Stark ) == -1),COLS) ) < ( Sansa ),ROWS)) >= ( -( COLS ) ),38,COLS),--0.13)]][betray(TABLE[0.74][-TABLE[( 150.9745 ) == --0.65][-0.95] - -92],-betray(mislead()),protect())]){

};
	TABLE[700.51][( -Ygritte <= -1 )] <= 60
}
};
	Hodor /= protect(TABLE[bar(-0.86)][-bar(( ROWS ),-x)],destroy(Jon))
}
} else {
	dog *= TABLE[( x )][-ROWS];
	ROWS
};
	Arya -= rule(-62,-foo(-bar(rule(),-24 - bar(foo(-470.584,--Sansa),-( x ) >= foo(-bar(),mislead(-protect(bar(( 29 ),COLS,COLS)),( -ROWS ),1) - COLS == Stark - ROWS) != 0.56 >= ( ROWS )) <= ( destroy() - -ROWS <= 690.78 ))))
}
def TABLE[( -71 )][k] {
	if(rule(foo(y))){
	Jon += ( COLS );
	if(-x){
	( COLS )
} else {
	if(( foo(Arya,COLS) >= Ygritte )){
	betray(Hodor == 0.32,foo(rule(0.76),( ( TABLE[betray(mislead(-0.56 - ( 73 - -0.28 <= ( ROWS ) < -0.16 < bar(-ROWS,Stark,0.96) > ROWS / ROWS ),0.04))][-ROWS] ) )),dog)
} else {
	foo();
	Sansa /= betray(TABLE[protect()][Stark],-rule(-0.87 < ( 1 /\ -COLS )))
};
	if(-0.93){
	( -( ( y ) ) );
	dog
} else {
	if(-36){
	if(Sansa){
	Stark *= COLS
} else {
	if(COLS){
	Jon /= ROWS;
	Ygritte /= x;
	Jon *= ( betray(Stark,--x < 470.36) )
} else {
	TABLE[( --( -74 >= -25 ) /\ bar(ROWS) )][mislead(Stark)];
	dog -= -COLS;
	if(-79){
	Stark += Arya - COLS
}
};
	Sansa /= ---1 > -ROWS
};
	if(x){
	y += Stark
} else {
	Sansa
};
	Jon -= Arya != betray(protect(rule(-6,Arya)),dog)
} else {
	dog -= ( Stark )
}
};
	COLS
};
	if(93){
	ROWS;
	0.46
} else {
	-Sansa
}
}
}
def TABLE[-37][j] {
	( rule(Ygritte) )
}
assert foo(Ygritte) : "What do we say to the Lord of Death?"
assert ROWS : "Fear cuts deeper than swords."
def TABLE[x][i] {
	-Ygritte >= Ygritte
}
def mislead(Jon,y){
	ROWS >= ( Stark )
}
var Stark = 56
def betray(Ygritte){
	x += ROWS;
	-( -TABLE[COLS][-81] == Stark /\ destroy(-0.86) )
}
def mislead(x,Stark){
	x *= bar();
	-Stark
}
assert Arya : "What do we say to the Lord of Death?"
var Arya = ( --Stark != x )
var dog = TABLE[Jon][-40]
assert rule(Arya,Jon,COLS) : "What do we say to the Lord of Death?"
var Stark = Arya
def TABLE[( -95 ) == rule(--1)][k] {
	-protect() > -1 / TABLE[betray(COLS)][( -dog )] - Jon - ROWS \/ protect(protect(( ( ( ( ROWS ) ) + ROWS ) ),Stark,( y ) > ( betray() ) != -250.8353),0.93) <= Jon - -( --0.26 ) / ( rule(--y) );
	if(Hodor){
	x;
	-0.14
}
}
assert betray() : "One can not simply parse himself"
def foo(){

}
def TABLE[( ( ( 1 ) ) )][i] {

}
def protect(Ygritte,Hodor){
	x -= 0.64;
	if(-0.5){
	if(0.34){

} else {
	if(46){
	--destroy(Arya \/ betray()) * --1 >= ROWS;
	if(-52){
	if(( Arya )){
	COLS
} else {

};
	if(--ROWS / Arya){

} else {
	Stark
}
}
} else {
	Ygritte \/ -0.73;
	dog *= 660.7498
};
	if(( -97 /\ ( TABLE[dog][-70.331 /\ -Hodor] ) ) + ---Ygritte > -17 != ROWS){
	-1;
	Stark /= betray(( mislead(Stark) ),( COLS == ( rule(rule(mislead(mislead(COLS * y,protect()),( 0.2 != foo(TABLE[foo(Stark,Stark / destroy(-250.72),( ( ( ROWS ) ) ))][protect(-betray(( ( --Jon ) )))],62) ))) / ( Jon ),( ( ( -100.6 ) ) )) ) ) < ROWS);
	790.5073
}
}
};
	Jon -= ( ( destroy(( -1 ) == ( 1 ),Ygritte) ) )
}
assert ( -1 ) : "Winter is coming"
def TABLE[betray(( ( 82 != Jon * COLS ) ),1)][k] {
	Sansa /= ---COLS;
	Arya -= ROWS
}
def rule(Arya){
	Stark += y;
	if(-( -Arya )){
	if(--0.71 /\ ROWS){
	if(0.76){
	-ROWS
};
	betray()
}
} else {
	TABLE[rule()][TABLE[0.09][protect()] / dog]
}
}
var Sansa = Arya
assert mislead(x,mislead()) - Jon : "What do we say to the Lord of Death?"
def TABLE[-bar(-( TABLE[-0.85][ROWS] ))][i] {
	Jon += -Ygritte
}
var Jon = -ROWS
var y = -dog
assert -24 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = 1
def protect(Arya,Hodor){

}
var Jon = betray(( TABLE[bar()][dog] - rule(-0.65,betray(-310.5) \/ -0.89) ))
def protect(dog,Hodor){
	( -0.95 );
	x *= TABLE[-14][COLS]
}
assert 71 : "One can not simply parse himself"
def destroy(Sansa,Ygritte){
	if(-0.72){
	if(protect(destroy(-95,Sansa),COLS,( ( bar(foo(1 / ( COLS ),--x <= mislead(Jon,ROWS,-betray(--0.02,-ROWS == Jon)) * ROWS == ( ( -0.7 ) ) >= COLS,( mislead(( ROWS )) )),Stark) ) ))){
	Ygritte *= 0.48 * TABLE[( -( ( TABLE[( Ygritte )][destroy()] ) ) )][destroy(-0.01)];
	x -= --38 >= -0.3;
	bar(destroy(( Sansa )),COLS)
};
	if(-73){
	ROWS;
	mislead(foo(( -6 ),( ( -650.95 \/ ( ( Arya ) ) ) )),( 78 ),44)
} else {
	Ygritte *= TABLE[y][-TABLE[destroy(Hodor - ( dog ))][Hodor]];
	if(38){

};
	Ygritte
};
	Ygritte -= -betray(-mislead(destroy(x),( -86 )),140.211) >= --170.649
} else {
	if(-ROWS < -0.86 >= Ygritte /\ -Sansa){
	-TABLE[mislead()][-640.9]
};
	if(betray(protect(),0.91)){

} else {
	COLS;
	if(( -1 ) * COLS){
	( destroy() ) / foo(98,( --TABLE[bar(protect(-180.6415 \/ ( 53 ),TABLE[-COLS][Ygritte]))][( ( -Stark <= TABLE[--( COLS )][Sansa] != 58 ) ) / dog] /\ -Jon ) <= ( protect() ),--TABLE[Hodor][mislead(---protect(TABLE[x][-1 < y >= -( 1 ) /\ TABLE[TABLE[TABLE[-1][ROWS]][( ( 1 ) )]][Arya]] <= bar(--62,y),ROWS),Arya,foo(-Ygritte)) > Jon] <= -( dog ));
	Stark -= COLS
}
};
	Sansa -= ( ( -650.28 == dog != Sansa /\ foo() / rule(TABLE[COLS][-ROWS],bar(TABLE[-( ( foo(mislead(-1,Stark / ROWS)) ) * -dog )][COLS])) ) )
};
	y /= 1 /\ Jon
}
var Jon = ( -0.12 < COLS )
assert -betray(TABLE[COLS][destroy(-( -TABLE[-( -1 ) >= bar()][32] != -0.78 ))]) \/ COLS : "Nothing burns like the cold."
def mislead(Ygritte,Sansa){

}
var dog = 67
assert -Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][j] {
	if(destroy(-mislead(0.74,-( Arya )),Stark)){

} else {
	if(( -98 >= -foo(TABLE[-Sansa][mislead(0.49) > COLS <= --0.62 - Sansa <= ROWS],( TABLE[-25][-( Sansa )] )) <= destroy() < COLS )){
	if(0.58){
	( -COLS );
	Ygritte
} else {
	ROWS
};
	--( TABLE[-440][( foo(-( -66 ) < ROWS) )] == TABLE[-Hodor][3 <= 46 == COLS] != -y )
};
	if(Jon){
	( mislead(ROWS) ) / betray(79);
	Arya += y
}
};
	Sansa -= ROWS
}
def TABLE[-66][k] {
	if(ROWS){

} else {

};
	if(-0.38){
	ROWS;
	-foo(-660.733 > ( ( COLS ) ))
}
}
assert 34 : "Winter is coming"
def betray(){
	--32;
	0.57
}
def TABLE[0.01][i] {
	Ygritte += COLS <= Stark * ( TABLE[ROWS][y] )
}
var y = --290.53
assert ( Arya ) : "Fear cuts deeper than swords."
def TABLE[Arya][k] {
	Jon += ( COLS );
	if(TABLE[( destroy(( ( -1 ) ),bar()) * ( rule(--( -75 ),TABLE[ROWS][---Stark + ROWS / Stark]) ) )][--TABLE[( ( ROWS ) ) <= -82][-Ygritte] / TABLE[COLS][ROWS] * Ygritte]){
	Jon += Ygritte;
	Jon /= betray(( protect(( --betray(-bar()) )) ),-rule(81,betray(rule(),x),Hodor))
}
}
var Ygritte = betray(-destroy() \/ rule(( Ygritte ),-690.71,bar(ROWS)))
assert rule(-930.807,betray(-850.15,( betray() ))) : "Nothing burns like the cold."
assert ( -( -54 ) ) : "Winter is coming"
var Hodor = bar(-89,( rule(dog) ))
assert ( y ) : "Fear cuts deeper than swords."
assert ( Sansa ) : "Winter is coming"
assert COLS : "Winter is coming"
def bar(y){

}
var x = destroy(-4 * TABLE[1][-Hodor],rule(Hodor,( ( -rule(0.05,--0.49) \/ TABLE[( y )][Arya] ) )) > bar(310.2 / Hodor))
def mislead(Ygritte){
	Sansa *= ( -0.59 ) / betray(TABLE[1 + ( --ROWS )][( Stark )])
}
assert ( 0 ) : "Fear cuts deeper than swords."
var dog = ( foo(betray(-0.14 >= ( ( bar(-940.548) ) \/ rule(destroy(-x - -( ROWS > betray(( --ROWS \/ TABLE[ROWS][COLS] \/ -( 0.48 ) )) / -0.47 ) / TABLE[bar(dog,bar(( -betray(-( ( COLS ) ),ROWS) )) * ( 84 ))][Arya],-( -0.17 ),Ygritte * COLS),TABLE[0.9][-dog]) ))) )
def mislead(){
	if(( rule(y != COLS,ROWS) )){

};
	if(Ygritte){
	if(Stark){
	x -= mislead(Stark)
} else {
	Hodor /= ( ( -25 ) );
	x *= COLS
};
	if(Stark){
	-( TABLE[90.7 < protect(protect(( rule(( 0.02 )) )) <= 1 / -foo(( COLS ),-Stark) <= ( ( ( COLS ) >= dog ) ) /\ -betray(foo(Sansa,-rule(Stark)),Ygritte))][TABLE[-( -( TABLE[Ygritte][( --COLS )] ) \/ rule(TABLE[-y][TABLE[Arya][( ROWS /\ -Jon )]] /\ -1) )][Jon]] );
	if(dog){
	Sansa -= TABLE[x + ( ROWS * ROWS )][-41];
	Sansa -= 25
} else {
	y -= -1
}
} else {
	-0.23;
	betray(-Stark \/ -23,( rule(destroy(-0.04 + COLS,ROWS),( mislead() )) ),( ( --( --ROWS < ( Sansa ) ) ) )) < 1
};
	Hodor /= ( ( ---75 ) )
}
}
def bar(Arya,dog,Arya){

}
assert ROWS : "One can not simply parse himself"
def betray(dog){
	if(x){
	y
};
	y *= 56;
	( Arya )
}
def TABLE[-0.44][k] {
	x /= protect(-TABLE[0.52 != --95][-protect(destroy())] <= mislead());
	mislead(TABLE[-19][( -200.5774 )] /\ -( Jon ) != Ygritte,TABLE[COLS][( 450.2539 )]);
	rule(ROWS)
}
var Sansa = 0.01
assert ( mislead(0.88,( bar(( ( 0.01 ) ) <= COLS,Stark) ),-COLS) ) : "One can not simply parse himself"
var x = ROWS
assert 0.05 : "Fear cuts deeper than swords."
def destroy(Ygritte){

}
def mislead(dog,x){

}
var Jon = Hodor
def foo(Stark,Stark){
	if(TABLE[bar(-destroy(( x ),-14 /\ 21) / mislead(-950.34,( TABLE[--1][-( TABLE[x][betray(-ROWS)] != mislead(-TABLE[-Sansa][ROWS],-COLS) )] ),( dog )),( Ygritte ))][-0.06]){

} else {
	Hodor -= ( -protect(y,-0.42) )
}
}
def protect(Sansa){

}
assert ( 210.7 ) : "One can not simply parse himself"
def TABLE[foo(0.18)][j] {
	Jon
}
var x = Jon
var Stark = ROWS >= -5 > ( Sansa )
var Arya = ( -foo(-TABLE[COLS][dog + rule() / TABLE[TABLE[-x < ( -( ( 89 ) ) != Stark /\ -destroy(--mislead(Sansa,rule(foo(( 0.85 )),TABLE[dog][-Sansa]),0.26),( rule() /\ ( Jon ) )) /\ ( ( ( ( ( ROWS < -COLS ) ) ) ) ) - ROWS )][1]][( -1 )] < -betray() <= -1 - bar(Arya,mislead(( ( bar() ) )) <= betray(COLS),COLS) /\ ( protect(( Sansa )) ) == rule(--240.255,( ROWS ))],( Jon )) )
def TABLE[betray(COLS,mislead(),mislead(59,protect(x)))][k] {
	Sansa /= rule(Arya) / TABLE[y][TABLE[ROWS][620.4]]
}
def TABLE[COLS][i] {
	1
}
def betray(Jon,Stark){
	x += Sansa
}
assert COLS : "One can not simply parse himself"
def betray(Hodor){
	if(0.29){
	if(-dog){
	if(Sansa){
	ROWS
} else {
	dog;
	dog += -( ( destroy(-Arya) ) ) + x <= -40.64 <= COLS < -560.86;
	Sansa += ( protect(ROWS,Stark) )
}
} else {
	Arya += Stark;
	foo(-1);
	-32
};
	if(ROWS > -0.98){
	if(-120.025){
	30;
	( ROWS );
	if(TABLE[Arya >= -bar(-0.99,0.53) == TABLE[betray(-1,-betray(( ( -270.2 ) ),( TABLE[1][ROWS >= -0.28 >= --860.701 <= -( --86 )] == -36 ),protect(ROWS + ( ROWS ))),TABLE[Stark][-( foo() )] * betray(( TABLE[( Arya )][-Ygritte / ( TABLE[rule(x,-63)][-protect()] )] ),-COLS < ROWS * destroy(--rule(bar(-940.204 * Hodor,-( -ROWS ) <= COLS == mislead(5,betray(Jon >= ( --( rule(Hodor,dog) * COLS ) < COLS ),( COLS )),0.09 * -80.88 == 12 <= ( --3 /\ protect(-0.64 == ROWS >= COLS) ) /\ Sansa) <= ( x ) < 87),protect(ROWS,-( betray(Hodor) )) == mislead(TABLE[-0.3][Stark]),( mislead(bar(ROWS,Sansa \/ ( y )),( COLS != --52 >= ( ( bar(betray(Arya,Stark),-0.1 != 0.34) ) \/ 0.78 <= destroy(Hodor,betray(-0.55,-470.915)) - ( ----260.62 ) ) ) < ( Ygritte )) )) >= betray() + COLS) < mislead(Stark,Arya)))][Ygritte <= 10]][-COLS]){

} else {
	if(( -TABLE[bar(COLS,ROWS,-ROWS)][( COLS ) > 0.63] )){
	if(bar(( 380.409 ))){
	if(0.37){
	if(TABLE[--( Jon )][protect(( Jon ),y,dog)]){
	mislead();
	760.7
} else {

}
} else {

};
	if(TABLE[COLS][25]){
	if(( 1 )){
	( 0.75 );
	Jon;
	Stark /= ( COLS )
};
	--Stark /\ rule(( -( Stark ) ),( -62 / -20.18 ),( Ygritte )) > -TABLE[-rule()][rule(TABLE[48][Ygritte])]
} else {
	TABLE[( --protect(-dog) )][TABLE[dog][-520.05 /\ TABLE[( ( y ) )][-56]] * -ROWS - foo(betray(( -( y ) ) == dog,-1,rule(-( -14 <= -1 \/ -x == protect(mislead(),foo(protect(-ROWS,COLS),TABLE[rule(-36,-1)][-1])) ),protect(x))),--Sansa,-Stark)]
}
}
} else {
	-mislead(TABLE[COLS][y])
}
}
}
} else {

}
} else {
	if(ROWS + ROWS){
	Arya;
	Ygritte /= TABLE[ROWS][-1]
}
};
	y += -TABLE[( ( -Ygritte <= COLS ) )][COLS < TABLE[COLS][Jon]]
}
assert betray(y,x) : "What do we say to the Lord of Death?"
def destroy(Arya,Arya,Hodor){
	-( ROWS );
	if(-0.81){

}
}
assert ( -0.82 * -400.929 ) : "One can not simply parse himself"
def rule(Sansa,Arya){
	betray(destroy(foo()));
	x *= ( COLS <= ( ( rule(--ROWS,( Hodor ),( -ROWS )) ) ) )
}
assert Arya : "Winter is coming"
def TABLE[( ROWS )][j] {
	dog *= -Stark;
	if(COLS){
	Ygritte -= Jon;
	Arya *= Stark;
	if(-17 - foo(COLS)){
	if(Stark){
	destroy() < ( ( COLS ) > 0.02 ) /\ bar();
	if(Jon){
	Ygritte -= ( -0.3 )
} else {
	if(-0.97){
	if(( ROWS ) / ( -0.38 \/ ( -Stark < ( dog ) ) )){
	if(0.9 * 85){
	if(rule(--41,-betray())){
	( x ) >= ROWS
}
}
};
	dog += COLS;
	Hodor /= Jon / -( 150.541 )
} else {

};
	( -62 )
}
} else {
	ROWS;
	-0.16 != bar(-x,protect(Ygritte,COLS - TABLE[( ( COLS ) )][( COLS )]))
}
} else {
	Hodor *= 1
}
} else {
	x *= ( foo(x,TABLE[8][( bar() ) <= -900.4097] \/ --( ( -Sansa \/ -1 < rule() ) ) / -12,y) );
	if(-mislead(-mislead(TABLE[dog][-COLS],TABLE[Sansa][-1]) != TABLE[COLS != x][( 0.6 / mislead(TABLE[TABLE[( x )][0.19]][ROWS],Stark < 8) )] < -( Stark ))){
	Sansa *= Jon
}
}
}
assert -x : "Fear cuts deeper than swords."
var x = 82
def TABLE[Ygritte][k] {
	( 1 );
	Stark -= 0.01
}
def mislead(y,Ygritte){

}
assert ( ROWS ) : "One can not simply parse himself"
assert COLS : "What do we say to the Lord of Death?"
assert ROWS : "Fear cuts deeper than swords."
def betray(){
	Ygritte -= -( -8 );
	if(Stark \/ 1){
	Ygritte -= ROWS
} else {
	230.79;
	y += x
};
	if(59){
	ROWS;
	mislead()
} else {

}
}
def bar(Sansa){

}
def TABLE[bar(protect())][k] {
	-77;
	if(( -TABLE[-( -Stark == mislead(-1) )][ROWS] ) < ( betray(bar(( COLS )),TABLE[TABLE[TABLE[COLS][foo(-0.92 \/ x)]][16]][protect(COLS > COLS,foo(bar()),Sansa)]) )){
	-ROWS > ( foo(-840.46 / 0.11,COLS) )
}
}
def TABLE[( rule(-80 < -( ( TABLE[( ( ( bar(mislead(),( Arya )) ) ) )][( protect(( TABLE[Arya][Arya] )) ) >= -protect(--980.5892,( destroy(protect(-Ygritte) > -Sansa > ( COLS ) - -92 != TABLE[foo(TABLE[TABLE[Ygritte][Sansa]][dog] >= -0.81,Ygritte)][Sansa],COLS) ),protect(-0.42,-37 == COLS) >= ( destroy(( TABLE[-TABLE[---0.76][TABLE[-( mislead(18,1,COLS) ) \/ Sansa][foo()]]][-rule(-COLS,COLS) / 85] ) + ---ROWS \/ ( ( ( ROWS ) == 0.53 ) \/ TABLE[protect(ROWS * --0.51 < Sansa)][-( -0.29 )] ),-1,-60) ))] ) ) > ( TABLE[( -( -1 ) )][TABLE[bar()][destroy()]] ) /\ Arya,Ygritte,betray(TABLE[rule()][COLS])) < bar(( ROWS ),ROWS < ( -0.77 ) /\ -1) )][j] {
	if(Ygritte){
	Hodor / ( COLS );
	Sansa -= TABLE[ROWS - ( --59 )][--0.9]
};
	-Hodor
}
var Sansa = bar(Stark)
def destroy(Ygritte){
	y *= TABLE[Arya][ROWS /\ ( TABLE[COLS][( -0.55 )] )] < foo(( dog ))
}
def TABLE[( -52 )][k] {
	if(TABLE[ROWS][93 < ( ( ROWS ) ) < bar(Stark)]){

};
	COLS
}
def destroy(dog,Sansa){

}
def TABLE[TABLE[-mislead(protect(--Stark,COLS,-( 58 )),TABLE[Ygritte][-protect(ROWS) > COLS > betray(-0.5,ROWS)],rule(-Arya,Sansa,destroy(( -64 ),TABLE[TABLE[mislead(y,bar(-( betray(37,--0.78 == -TABLE[protect()][Hodor]) ) /\ -( ( x ) * rule() )))][COLS]][-( y )],-( --0.55 ) - -( ROWS ) + ROWS == -( TABLE[TABLE[( Arya / Stark )][y]][( ( COLS ) \/ ROWS )] > TABLE[COLS][-98] ) / TABLE[Ygritte][( mislead(-860.704,( x )) )] /\ betray(Jon))))][COLS]][j] {
	if(( COLS )){
	if(TABLE[rule(( ( ( dog ) /\ ROWS ) / ROWS ),-( -TABLE[-TABLE[rule(COLS)][rule(-0.01)]][Ygritte] ))][ROWS]){
	destroy(36 + COLS == ( -0.47 ))
} else {
	Stark += ( ( -1 ) );
	Sansa *= -0.94
};
	Arya += betray(Jon,Jon);
	if(COLS){

}
} else {

};
	-( -16 )
}
assert COLS : "Nothing burns like the cold."
var y = dog
def TABLE[COLS][j] {
	Stark -= 790.9
}
assert -1 : "Winter is coming"
def TABLE[( Jon )][j] {
	Hodor;
	x;
	betray(-COLS,( 36 ))
}
def foo(Jon){
	COLS;
	TABLE[mislead(( Sansa ) != Jon,( dog ))][ROWS];
	if(Stark){
	TABLE[-y > -690.7][-Hodor] /\ Hodor;
	bar(-1,foo(TABLE[mislead(( mislead(dog,630.17) )) != ( ( 1 ) )][Jon <= --58],y),Arya);
	Arya
}
}
var Sansa = TABLE[--0.44][ROWS]
def destroy(Sansa){
	Jon += -destroy(-0.15);
	Ygritte -= COLS;
	if(Sansa){

}
}
var y = destroy(( ( -1 ) ))
assert -0.15 : "One can not simply parse himself"
var Sansa = ROWS
def bar(dog){
	( 7 )
}
def betray(){
	Arya *= --0.79 <= destroy()
}
var dog = ROWS
def destroy(Sansa,x,Hodor){

}
def TABLE[foo(COLS,( ( ( ( dog ) != ( Arya ) \/ -1 ) ) ))][k] {
	x -= -TABLE[foo(( TABLE[betray(COLS /\ TABLE[---COLS >= COLS][protect()],COLS /\ 0.52)][( -Stark )] ),( rule(-( mislead(-protect(( Hodor ),Jon,-100.336) < ( protect() ) + protect(( -Ygritte ),mislead()),ROWS) ),TABLE[-860.166][mislead(Stark,TABLE[bar(y)][COLS])] > 0.48,---destroy(( -0.59 ))) - --170.969 == ( 1 ) != rule(TABLE[TABLE[TABLE[Sansa][( betray(21,ROWS,ROWS) ) + -33] < 1][ROWS]][-TABLE[-0.73][( foo() )]]) ),TABLE[--rule(Hodor)][0.71])][betray(-0.47 < bar(ROWS,Hodor) < destroy(y) != TABLE[bar(( -0.88 ),Hodor,bar(( --x * ( bar(Arya) ) ))) + dog][-1] >= -Sansa,0.41)] + COLS
}
assert ( -0.7 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = dog
assert Ygritte : "Nothing burns like the cold."
def TABLE[Hodor][i] {
	if(( TABLE[-( destroy(ROWS * -71,mislead(( ( Sansa ) ),-mislead())) )][x] )){
	Jon += TABLE[-Sansa][COLS]
} else {
	x -= dog < Sansa /\ Stark
};
	TABLE[( Sansa < -bar(dog) )][foo(COLS,bar(( -destroy(ROWS < destroy()) ) == x))]
}
assert destroy(rule(( 0.28 ))) : "One can not simply parse himself"
def rule(Ygritte){
	ROWS;
	( COLS );
	0.85
}
def mislead(Arya){
	Ygritte += mislead(x);
	y -= -58;
	Arya /= Arya
}
var Arya = Stark
def bar(x,y,Arya){
	if(COLS){
	mislead(Stark,y);
	( COLS )
} else {
	if(bar(( Ygritte ),-0.36)){

} else {
	if(( --0.61 ) != ( y )){
	Arya /= COLS
} else {
	if(ROWS){
	if(foo(( --79 < dog ))){

} else {
	Hodor;
	if(ROWS){
	--0.95
}
};
	dog;
	--TABLE[ROWS][x]
} else {
	Hodor -= protect(-38)
}
}
}
};
	if(mislead(mislead(),-Hodor,ROWS)){
	if(ROWS){
	if(150.17){

};
	( -mislead(0.84,y) )
};
	dog /= COLS
} else {
	protect(( Jon ),ROWS - foo(Stark,Stark,foo(-( 0.37 ) \/ ROWS /\ -ROWS * COLS,Hodor)) <= ROWS)
};
	if(ROWS){
	x += ROWS;
	if(destroy(-( x ) != COLS,--betray(( -68 <= TABLE[Sansa][COLS] ),Ygritte))){
	( -3 )
}
} else {
	if(( -20.2979 )){

} else {
	if(-0.46){
	Ygritte += protect(-destroy() < Sansa,-0.25 != mislead(TABLE[-destroy(bar(-Ygritte,foo(----0.15 * 21 > -1,--betray(TABLE[-19][-0.48]) < foo(-0.4,TABLE[-83][y] == ( TABLE[( ROWS )][foo(-300.9768) \/ 930.7] ) != bar(dog,-Hodor > -COLS <= 0.4,-protect(mislead(y,Sansa)) > ( 0.4 )) > Ygritte * -10),( -Arya / bar(Stark <= betray(bar(Arya),Ygritte),destroy(-( COLS )),protect(-protect(ROWS,( ---TABLE[-55][-Arya * ( y )] > Sansa + ( COLS <= y ) )),-( destroy() ),COLS) == -0.72) != TABLE[--0.37][-bar(Ygritte)] \/ y ) * ( -foo(rule(-COLS)) \/ ( bar() ) )) == y,TABLE[Hodor * Hodor /\ -TABLE[TABLE[--TABLE[-830.15][-180.5] >= ( TABLE[bar(0.3,( -96 ),( y ))][Arya] ) / TABLE[-bar(-88,ROWS,Stark / -( ( --0.98 ) ) == ( ( ROWS ) ))][Sansa]][Ygritte]][bar(betray(),-0.53,( Hodor ))] \/ --bar(( ( 0.24 ) ),-79)][mislead(--( -0.9 + -TABLE[y == ( COLS )][( destroy(-( destroy(protect(1)) )) )] ))]),-( ( mislead() ) + Arya ))][( -Jon )],protect(destroy(ROWS,rule(ROWS,ROWS)) + Ygritte + Sansa,protect(-37,( ( ( -ROWS \/ Sansa ) ) ),ROWS),rule(ROWS))) > mislead(-Arya * Stark,-y / Ygritte == COLS,bar(( -ROWS ))) > Hodor)
} else {
	COLS;
	protect(dog)
};
	if(destroy(-( betray(ROWS) ),COLS,dog)){
	if(protect()){
	Hodor *= ( COLS );
	protect(COLS,1,-730.419);
	( COLS )
} else {
	if(1){
	Jon /= 29;
	if(betray(( Sansa ),betray(( -TABLE[( 91 ) <= ROWS >= Jon < dog][destroy(---52,rule(Stark,betray(),x))] \/ Stark ),TABLE[COLS][x]))){
	COLS;
	if(( ( ( y ) ) )){
	Stark *= COLS;
	TABLE[-foo(-0.42,ROWS,ROWS)][---62 * -( bar(1,foo(x,mislead(( destroy(rule(),36 > -56) ),Jon))) )]
} else {
	Jon *= ROWS;
	( dog )
}
};
	-mislead(( ( ROWS ) ),-10 / Jon < -foo(COLS))
} else {
	Jon
}
}
} else {
	if(Jon){

};
	if(TABLE[Ygritte != TABLE[-COLS][-110.244] / -TABLE[-Arya][-Sansa + ( protect(--( TABLE[mislead()][( -COLS )] == ( -( Hodor ) ) )) )] == ROWS][( y ) > 0.8]){

} else {
	Ygritte *= -0.26;
	dog /= betray(( ( 91 != ( --48 ) ) ))
};
	dog -= TABLE[Stark][-y]
};
	( Ygritte )
};
	mislead(Jon /\ betray(-ROWS),x)
}
}
var x = -99
def rule(Jon){
	-x;
	if(-0.75){
	Stark *= Ygritte;
	if(x){
	Arya *= Hodor - ( -COLS );
	foo(Stark,-82,betray(foo()));
	if(( Stark )){
	Jon += COLS;
	destroy();
	dog >= ROWS / ROWS > ( betray(betray()) ) < Arya != --ROWS
} else {

}
}
}
}
def TABLE[( Arya )][j] {
	if(betray(( x ),( ( ( -0.68 ) ) ),mislead(-x))){
	if(-destroy(bar(COLS <= 30 * 64),--bar(TABLE[-COLS][Arya],( bar(( ROWS )) )),dog)){
	if(y /\ --800.2){
	if(( foo(destroy(-0.13),mislead(-rule(COLS,-TABLE[( ( mislead(rule(COLS,ROWS,-mislead(ROWS,( -66 ),( mislead() )) - ( COLS ))) ) )][dog >= rule(( -1 ))]),COLS)) / ( Ygritte ) )){
	( rule() );
	TABLE[--1 > -ROWS][( rule(( -0.99 )) )] / Ygritte;
	Arya
} else {
	x -= ( Arya )
};
	Hodor /= 430.71;
	-50
} else {
	Sansa *= Stark;
	if(COLS){
	if(ROWS == ( -120.59 + Hodor != rule(--0.66,Sansa,dog) != -0.24 ) * -ROWS){

};
	if(TABLE[Stark][Hodor]){
	Ygritte += -Arya
} else {
	y += ( Stark )
}
} else {
	COLS >= TABLE[1][( ( -Stark ) != Arya )];
	if(Jon){
	y += --foo(bar(TABLE[TABLE[Sansa][protect(-1)]][-0.94],-710.022,x));
	dog -= bar(COLS,--COLS,Jon);
	( Jon )
}
};
	-5
};
	Sansa *= -COLS - destroy(14,Hodor) != Stark;
	Ygritte *= ( 49 )
};
	x *= betray(( ( mislead() ) ) / COLS,-920.948)
}
}
var y = bar(-dog,42)
assert ( betray() ) : "Nothing burns like the cold."
var y = ( Ygritte == -Sansa ) > Sansa
def bar(Stark){
	ROWS;
	Hodor /= -dog <= Jon
}
def mislead(){
	if(betray(-30 * foo(-18,bar(bar() * 52 < ( foo(TABLE[-( COLS )][520.3]) ),( COLS ) == ( Hodor ))),destroy(COLS),-700.4026)){
	mislead(350.91) >= -Hodor \/ Sansa <= ( Stark ) * foo()
}
}
assert 600.398 : "What do we say to the Lord of Death?"
assert x : "One can not simply parse himself"
var Ygritte = -Hodor != Jon
def TABLE[foo(-ROWS)][k] {
	Stark *= ( COLS ) < ROWS;
	93
}
var x = mislead()
var Jon = TABLE[1][1]
assert ( Jon ) : "Nothing burns like the cold."
var dog = x
def protect(Jon){
	if(x){
	dog /= dog;
	if(51){
	Jon;
	if(dog){
	if(( ( -690.47 ) )){
	( protect(0.23) )
} else {
	41;
	COLS;
	y *= mislead(( -TABLE[mislead(COLS,bar(Hodor,--COLS >= --TABLE[-0.37][TABLE[-1][( -0.09 )]],TABLE[-770.544][0.6]) + ( -( --ROWS != bar() ) ) \/ x)][1] ),0.89)
};
	if(protect()){
	if(( COLS )){
	Sansa -= 0.91
}
} else {
	if(-( -0.54 )){
	( --TABLE[mislead(-1,-( rule(rule(Jon,-betray(( -TABLE[bar(-900.9626 + COLS == 0.66 \/ TABLE[( COLS )][protect(( protect(( -( -foo(ROWS == mislead(),-8 \/ -0.56) ) )) ))],-protect(Arya,foo(rule(( Arya )) + Ygritte))) / Jon][ROWS] ),TABLE[( TABLE[rule(x,ROWS)][foo(x != -x)] )][--40.4 != mislead(destroy()) != Sansa],( destroy(( --( -0.88 ) ),-120.2968,TABLE[Jon][-1]) ))),mislead(( ROWS \/ 0.52 ) == ( Hodor ),rule(Stark,x),-0.39) <= 65,( ROWS == ( -0.8 ) )) ))][( -protect(foo(COLS,mislead()) > TABLE[ROWS][bar(( ( -0.21 ) < ( TABLE[COLS][-betray(---4,-( TABLE[---1][( y ) /\ Hodor] ))] ) ),( ( ( COLS ) ) ) \/ rule() == betray(--34,rule(Hodor,( ( -protect() ) ))))],( --51 <= -rule() )) )] );
	if(ROWS){
	Stark
} else {
	if(-0.95){
	Hodor += foo(1,1)
} else {
	TABLE[( protect(-( COLS ),-73) > --Jon /\ mislead(betray(-Jon,destroy(-COLS,Arya)),rule(destroy(dog <= ROWS,Stark))) / ( -0.56 ) )][foo(-mislead(-ROWS,betray()))];
	if(--( ROWS != foo(-( mislead(( Hodor )) ),( 92 ),-6 >= y) != mislead(Ygritte + x,-destroy(ROWS,TABLE[betray(foo(TABLE[-( -COLS )][( destroy(rule(( destroy(COLS,( ROWS ),foo(ROWS,dog,-270.1)) ),--x)) )],ROWS),--48 - mislead(Stark,( ( mislead() ) )),( Sansa )) != x][-( -1 ) / -690.2],x) - bar(13 * Stark != ( Ygritte )) != y) ) - betray(-0.59) \/ rule(-protect(y)) /\ 0.91){

};
	Arya
}
}
} else {

}
}
} else {
	if(-0.9 / Jon){

};
	1
}
}
};
	Jon /= destroy(380.98,foo(foo(( -COLS ),TABLE[COLS >= ROWS /\ ( protect(rule(Stark),Jon,Hodor) ) != ROWS / bar(0.09 + ROWS,-71,ROWS)][1],COLS),TABLE[COLS][( Jon )],COLS >= mislead(mislead(( ( Ygritte ) ) <= ( ( -----96 - -( -destroy(Stark,-COLS) ) <= 0.57 /\ --26 == COLS <= mislead(COLS > -0.86) ) ) < ( COLS )))))
}
def TABLE[--0.55][i] {
	betray(COLS,-( COLS != -0.67 + dog ) == 67) * TABLE[( ( -1 ) )][-Stark] \/ ( ROWS );
	Hodor += foo(-0.72,TABLE[( --COLS )][-protect(-840.5,ROWS * -( foo(x) ) == betray(87,foo(( ( rule(17 \/ --0.65,-39,ROWS) ) ) \/ Hodor,mislead())))] / rule(-1),ROWS)
}
def TABLE[y - dog][k] {
	if(-y + ( -rule(-840.2373) )){
	Hodor -= Hodor;
	if(850.9){
	if(35){
	if(( Arya )){
	Stark *= --0.55;
	mislead(( -Jon )) != 540.728 + Hodor
}
};
	if(Sansa){
	if(destroy(-0.47,6,COLS)){
	betray(y,TABLE[-ROWS][x])
} else {

}
} else {
	if(( bar(Hodor) )){
	if(-y){
	if(( -1 )){
	if(-( ROWS )){

}
} else {
	ROWS;
	Jon += ( ( --1 ) )
};
	if(foo(( -Jon )) \/ -protect()){
	rule();
	Ygritte *= destroy(-ROWS) > -0.02 / -dog
} else {

};
	y += y
};
	if(protect(--Ygritte,-750.213,TABLE[ROWS][( ( Sansa ) ) / foo(protect(TABLE[( TABLE[ROWS][COLS] )][( ( ROWS ) )] \/ ( Sansa == TABLE[-0.81][( ROWS \/ bar(66) )] ),rule(TABLE[Arya][COLS]) - -( --COLS < COLS ) \/ TABLE[-Ygritte][-( 0.57 )] == bar(foo(( -ROWS ) \/ protect(destroy(ROWS,Hodor,y))),COLS <= ( -310.769 )),( protect() )),( 8 ))]) / TABLE[TABLE[Arya != mislead(destroy(),-x) * 0.36][Sansa] > 70 >= ( -0.43 ) > TABLE[0.18][-rule(Ygritte,94 == Arya != destroy(COLS,TABLE[39 > Jon][TABLE[-ROWS][0.72] /\ ( -----1 != TABLE[COLS][foo()] * -TABLE[-Sansa][TABLE[protect(Hodor,Arya)][protect(ROWS,Stark,Arya)]] )] \/ -38 * ( ( COLS ) ),protect(( TABLE[-destroy(-50)][foo()] ) \/ mislead(Sansa,mislead(-0.45,bar(( Jon ))) * Arya,TABLE[69][( protect(-( 1 ) > -0.84) ) / --bar() != x]))),( ( -0.86 ) > -( -0.49 ) + ROWS ) \/ ( protect(Ygritte == betray(betray(y,foo(-0.62) > COLS),Ygritte),COLS,-( -940.8 )) ))] < Stark][TABLE[-( bar(bar(),( COLS != -Sansa ),COLS) )][( COLS )]]){

} else {

}
} else {

};
	y /= bar(( COLS ) > ( 0.06 ))
}
}
}
}
def destroy(Arya,Stark,y){
	dog += ROWS + destroy()
}
def TABLE[TABLE[foo(( COLS ),-protect() > -7)][-( ( ( Stark ) ) )]][i] {
	if(Stark){
	( -x );
	Arya *= ( -53 )
}
}
def TABLE[ROWS][i] {
	-Stark;
	-foo(dog,--betray(Hodor,rule(Hodor),--TABLE[47][foo(y,foo(0.57,ROWS))]))
}
def TABLE[COLS][i] {
	dog -= rule(rule())
}
var dog = -( -destroy(1) )
var Arya = rule()
var dog = Stark
var x = Sansa > x
var Arya = ( dog > bar() )
def mislead(x,Stark){

}
def TABLE[-0.31][i] {

}
assert ( ( ( destroy(( -53 ),( ROWS ),ROWS) ) ) <= ( ( -foo(ROWS,ROWS) ) ) ) : "Fear cuts deeper than swords."
var Jon = COLS
var Jon = mislead(rule(( COLS ) \/ ( 1 )),0.83)
def TABLE[rule(( --foo(dog) ))][i] {

}
assert ROWS <= 1 + TABLE[-foo(-25,Hodor - -destroy(Ygritte) \/ ( betray(( --( TABLE[Jon][rule() * -0.07] ) ),TABLE[bar(0.16)][Sansa],Stark) )) - -1][dog < TABLE[( protect() )][Ygritte]] : "Fear cuts deeper than swords."
def TABLE[TABLE[-ROWS <= -TABLE[-Arya][x]][mislead(protect(x,-1,19),( ( ( 93 ) ) ))]][j] {
	if(mislead(Arya > Sansa) - betray(rule(ROWS,2),Stark,destroy(Hodor))){
	if(COLS){
	Stark *= 0.61;
	Stark += rule(ROWS,COLS);
	bar(-ROWS)
};
	0.05 < -62
} else {
	if(ROWS){
	dog += 0.86 / --81;
	Hodor /= TABLE[-foo(TABLE[--0.47][-( -0.97 )])][( dog )];
	Sansa -= --Jon
} else {
	32
};
	Stark /= ( rule(bar(y,destroy(( 1 ) <= mislead(--0.77,Stark / -1,-Ygritte),( rule(bar(),---1) )),21)) )
};
	if(-mislead(dog,98,1)){
	if(ROWS){
	dog /= --30
}
} else {

}
}
def TABLE[rule(destroy(COLS),COLS)][i] {
	Hodor *= ROWS;
	Arya *= -0.79
}
def rule(Stark){
	-COLS;
	x -= 0.22;
	( mislead(y) )
}
def betray(Hodor){
	if(ROWS){
	Hodor *= ( bar(25,-0.17,destroy(-( ( -Hodor ) ),ROWS / ( ( 0.73 ) ),rule(0.4,betray(COLS,( -TABLE[( dog ) - destroy(( Sansa ))][( COLS ) < rule(TABLE[ROWS][( ( ( betray(TABLE[ROWS][--22],----( -0.57 ) / -protect(Ygritte + destroy(-1)) \/ 33 / COLS < ROWS,( destroy(--( COLS != -0.57 )) )) ) == ROWS ) /\ -900.12 )])] )),( mislead(( ( mislead(-COLS,dog) / -bar(TABLE[-39][0.61 - -71 - ( -800.6653 )],rule(-ROWS,( protect(( COLS + 880.8794 < -40.417 \/ ROWS * -0.2 >= TABLE[ROWS][-rule(Hodor)] ),-Arya) ))) /\ mislead(Sansa,ROWS) ) ),29) )))) )
} else {

};
	if(-ROWS){
	if(( ( bar() ) )){
	-0.15
}
}
}
def mislead(){
	-1 \/ protect(protect(-1),-160.4);
	Jon *= ROWS
}
def TABLE[ROWS <= COLS][i] {

}
var y = 0.43
def rule(Ygritte,Stark){
	if(ROWS){
	x += 90.7665
} else {
	if(COLS){
	COLS
} else {

}
}
}
def TABLE[-( Hodor \/ ( 5 ) + --rule() != --1 * ( ( 1 ) ) /\ 40 <= ( -1 ) )][k] {
	Stark += -1;
	bar();
	Jon /= rule(64 >= ( -Stark ),Hodor \/ Ygritte)
}
def TABLE[-0.85][i] {
	if(TABLE[50][TABLE[protect(-( --1 ),ROWS,ROWS)][78]]){
	-1;
	if(dog){
	x *= ROWS
} else {
	bar(Arya,ROWS,730.01);
	if(0.94){
	-60;
	if(COLS){
	if(( ( Stark ) )){

};
	---460.57 / dog
} else {
	Stark *= foo(-COLS * Ygritte);
	Hodor /= ( -protect(-18,ROWS) )
}
}
}
};
	Stark /= -( Jon >= Sansa )
}
def TABLE[--Ygritte][k] {

}
def betray(y,Arya){
	if(rule(( Jon ),Arya,-( bar(-1,ROWS,0.28) ) * ( --( protect(ROWS * -mislead(COLS,0.83,( ( TABLE[--410.98 > Sansa <= foo(-0.08,TABLE[0.09][-( x )])][foo(x)] == Jon ) )),foo(-66 + 0.95,( -COLS ))) ) < ROWS < y >= -0.76 )) != ROWS){
	Jon -= 0.64;
	if(dog){
	if(ROWS < -16){

} else {
	Sansa += COLS;
	if(mislead(0.18,foo(( 520.9864 )))){

} else {
	protect(Hodor,( -Jon ))
}
}
} else {
	if(bar(-Arya != -40 <= protect(( ( ROWS ) )) /\ -ROWS \/ destroy(( ( ROWS \/ Arya /\ -10 ) )),Ygritte,betray(64))){
	Sansa += Jon;
	if(protect()){
	Ygritte /= ( -COLS / -0.03 )
}
} else {
	if(Jon){

};
	y *= TABLE[Hodor][( foo(-bar(-69),dog) + ( bar(--0.64) ) )]
};
	Jon /= -0.65;
	Arya /= COLS
}
} else {

};
	bar(ROWS,-foo(y),--0.39 /\ betray(Jon,-foo(TABLE[ROWS][-TABLE[dog][bar(ROWS)]],91,0.16),-TABLE[Ygritte][10.23] / Sansa) < ROWS / ( Sansa - -COLS < -10 + ( bar(( Ygritte ) < -protect(( rule(-0.81,COLS) ),Sansa) + ( --dog ),bar(1 - 1,-TABLE[1][-foo(betray())] > --990.39,-( ( COLS ) )),ROWS) ) >= bar(( -( foo() ) )) <= Sansa ) * y != TABLE[y][TABLE[( -0.46 )][-Sansa]])
}
def rule(dog,Ygritte){
	if(x / y + 390.24){
	betray(Arya);
	if(TABLE[-15 \/ -9 >= COLS][--( ROWS )]){
	if(( betray(bar(( Stark ),TABLE[-2][( ( -( foo() ) == -destroy() ) )],Jon),ROWS) )){
	y += -170.49
} else {

}
} else {
	-COLS + mislead(-0.33 + -0.7,( ( bar(-mislead(),( destroy(ROWS) )) ) ),x);
	dog;
	Stark *= 70
}
};
	Sansa += ( -mislead(COLS) )
}
def protect(){
	ROWS != betray()
}
assert ( bar(( bar(-Ygritte == 0.44 - y,--1) ),foo(( Hodor )),foo(( rule(COLS,120.25 * TABLE[destroy()][0.42] <= TABLE[-ROWS][foo()]) ),( -85 )) / mislead(COLS,( 780.51 >= Ygritte ))) ) : "One can not simply parse himself"
def TABLE[ROWS][k] {
	if(( 0.92 )){
	Ygritte -= ( -1 );
	if(-0.24){
	if(-1){
	y -= mislead(TABLE[bar(1,( ( Hodor ) ))][( Sansa )]);
	Hodor /= ( ( -440.45 ) )
} else {
	betray(( TABLE[foo(-1)][COLS] ))
};
	-1;
	if(-protect(betray(ROWS,-160.78),-63)){
	if(Sansa){
	if(ROWS){
	Sansa -= -38
}
};
	ROWS
} else {
	y += COLS;
	if(0.19){

}
}
}
} else {

};
	Ygritte
}
assert 1 >= TABLE[dog][1] * ( -( ( foo(COLS,560.4,-830.565) < dog - ( ROWS ) ) ) ) : "One can not simply parse himself"
var Hodor = -( ( protect(-COLS,-( TABLE[( dog )][( -70 )] ) \/ --170.9) ) ) <= ( --ROWS )
var Stark = destroy()
assert COLS : "Winter is coming"
def TABLE[COLS][k] {
	( -220.82 );
	-29
}
assert protect(-200.54) : "Fear cuts deeper than swords."
assert ( mislead(0.96,-180.8,mislead(mislead(),destroy())) ) : "What do we say to the Lord of Death?"
def TABLE[COLS][i] {
	if(48){
	-35
} else {
	Arya
};
	rule(Ygritte)
}
def destroy(Jon,Hodor){
	Jon += protect(TABLE[betray(COLS)][TABLE[Stark < COLS][bar(y)]],Hodor) / ( 0.02 <= -Sansa + Arya )
}
var Sansa = bar()
def TABLE[dog \/ x][j] {
	Sansa += -810.6
}
assert -Jon + Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Jon : "Winter is coming"
var Ygritte = ROWS
var y = -0.27 - x != -0.35
assert ( COLS ) : "Winter is coming"
var x = -bar()
assert 610.886 : "What do we say to the Lord of Death?"
assert -rule(( 82 ),--740.496,( betray(-40.54,Arya - foo(Hodor,rule()) \/ betray(betray(( Arya )))) > mislead() /\ foo(destroy(TABLE[77 > -( -( ( Ygritte ) ) + -56 )][( -950.362 )],( rule(-( x ) == -Stark) ))) /\ mislead() == -44 )) : "What do we say to the Lord of Death?"
var y = 1 != foo(( dog ))
var Sansa = ROWS > betray(protect(ROWS,-betray()),TABLE[Arya][( COLS )] == TABLE[( -COLS != COLS )][63] == -71)
assert 0.97 <= Hodor : "One can not simply parse himself"
var Ygritte = ROWS
def protect(x,Hodor){
	Jon += foo(protect(-TABLE[rule(Hodor)][1],99),1)
}
def mislead(){
	if(-Stark){
	( 32 );
	if(Hodor){
	Hodor *= -0.09;
	if(1 <= x){
	foo(-y < -betray(( y == ( mislead(0.96) ) ) + ROWS),-1);
	if(960.012 /\ 0.7){
	x -= COLS
}
}
} else {
	if(TABLE[( ( Stark ) )][ROWS]){
	--39;
	Arya /= y /\ ( COLS );
	foo(ROWS) \/ foo(-940.584,Hodor)
} else {
	destroy(81) / destroy(( y /\ -1 ),-0.31,bar(1 * 1 - Stark,TABLE[( Ygritte )][Hodor]))
}
}
} else {
	Arya -= ( ROWS );
	x *= rule(-32)
}
}
def protect(){
	bar(-1 == rule(-0.45),destroy(-Arya,COLS));
	Sansa -= ( dog )
}
def bar(Jon){
	if(destroy(( ( x ) ),Jon,protect(betray(-TABLE[ROWS + -1 > -0.94][betray(COLS,TABLE[foo(-betray(Jon,1) > foo(),-0.25)][destroy(400.965)])],-bar(--( ( ( -destroy(1 < 13,( -COLS ) * COLS < Arya,-( -foo() )) ) ) ),( --1 /\ ROWS )) \/ rule(( Jon ),ROWS) /\ ( -28 ) * ROWS * Arya \/ ROWS),destroy(-bar(TABLE[( ( Stark ) )][Jon - --0.29],( --Ygritte ),-75) >= 0.54)))){
	Ygritte += Jon < ( 0.04 );
	-Sansa
} else {
	ROWS < -protect(foo(TABLE[-Sansa][--( -rule(( dog ),bar(),ROWS) > ( ( ( ( Ygritte ) ) ) ) / -betray(200.26,-TABLE[( foo() >= -( destroy() * -1 == -0.49 == ( ( foo(TABLE[-18][Hodor / ( mislead() )] * 920.07 != -780.2015 \/ -COLS,( ( -TABLE[Sansa][-44] + --( -COLS ) \/ -( --0.96 ) > -( --13 ) / -0.45 * -rule(( COLS ),-( ( Ygritte ) ) == 72) \/ -60 != 87 ) / foo(Arya) == TABLE[( protect() )][rule(y,x)] /\ ROWS ),TABLE[mislead(foo(Arya,Sansa,-betray(Hodor,mislead(y / --0.05,--( rule(Arya,y) ) >= TABLE[--0.33][-bar(bar())],-( Ygritte )))),-1,( Ygritte ))][TABLE[-9][-dog]] * bar(( TABLE[ROWS][( Arya )] ),bar(ROWS,TABLE[dog / -TABLE[Hodor][Stark]][950.57]))) ) ) /\ ( ( Stark ) - ( Ygritte ) ) / -( ( 5 ) ) ) )][foo(rule(betray(),( ( 670.33 ) ),86) < ( Ygritte ) > -440.223 == ROWS,59 / COLS)],-destroy(( 0.46 ),-390.36)) ) \/ TABLE[Stark][-73]] > Arya),protect(( mislead(( --0.13 ) > bar(x,Jon),( ( y \/ ROWS ) != COLS ) / ( -17 )) )) * ( ( TABLE[TABLE[-( TABLE[( bar(betray(( ( -protect(betray(0.48,TABLE[x][COLS]) + -destroy(foo(-0.33,( ( bar(( -Jon ) > --rule()) ) )),-0.18),ROWS) ) == 0.81 ),ROWS),protect() * ( -0.6 ),60.986) )][-57] )][protect(-0.28)]][Arya] ) ));
	if(foo()){
	-Jon
};
	dog -= ROWS
};
	if(Ygritte){
	Arya *= -mislead();
	Arya + ( 1 );
	Hodor *= ( ( rule(-x \/ foo(-bar(-0.23),Jon)) ) )
};
	Sansa /= Hodor
}
var y = ( ( -10.85 ) )
var Arya = --Hodor
var Ygritte = -520.8
def TABLE[Stark][k] {

}
assert COLS : "What do we say to the Lord of Death?"
def protect(Ygritte,Ygritte,Jon){
	-72;
	( ( COLS ) );
	if(COLS){

} else {
	if(betray(protect(( TABLE[---0.17][-Stark] )) != TABLE[COLS][mislead()])){
	( dog );
	-protect(Stark,rule(betray(( -43 ),-51),( 12 )) \/ -39) > -ROWS
} else {
	if(--Ygritte + -Sansa){
	if(COLS){
	if(4){
	( ( ( -COLS ) ) )
};
	if(-73){

};
	Stark += destroy(( -x ))
} else {
	Jon += COLS
}
};
	TABLE[bar(-( x ))][Arya]
};
	COLS;
	TABLE[( betray(( Hodor ) / -7,( --0.61 ),( 64 )) )][TABLE[betray() \/ rule()][Stark]] <= betray(-52)
}
}
def destroy(Stark,dog){
	( mislead(ROWS) ) != 900.22;
	if(( 0.33 )){
	if(destroy(Hodor)){
	-betray(protect(( mislead() ),-mislead(Arya == ( 1 ) <= ( ROWS ) / mislead(-TABLE[0.85][110.128],bar())) >= -1),ROWS,destroy(( Ygritte ) <= ( COLS /\ -TABLE[--56 + mislead(ROWS)][COLS] ),-910.9483 >= Hodor))
}
}
}
def betray(Stark,dog){
	y *= ( -0.44 ) > 490.484;
	x
}
assert 570.089 != -0.38 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = TABLE[-60][ROWS]
def TABLE[destroy(( TABLE[betray(Stark)][0.79] ),-mislead(-1,( protect(-( -83 ) + Hodor,-bar(bar(--83),Sansa) >= -0.92) )))][i] {

}
def TABLE[ROWS][k] {
	if(dog){
	if(--bar(-1000.5703)){
	Ygritte
};
	-COLS
};
	if(( -Jon ) + Sansa \/ TABLE[--49][protect(1,( destroy(protect(Hodor)) < ( protect() ) ))]){
	if(0.19){
	mislead(1,dog) * -0.06
} else {
	y *= --x;
	y -= COLS;
	Stark *= -TABLE[( -96 )][( COLS )]
}
}
}
var dog = Jon
assert ( -( -9 ) < 1 ) : "Fear cuts deeper than swords."
def bar(y){

}
assert protect(TABLE[-bar(mislead(Ygritte,-0.17),( y ),dog) <= ( --0.28 ) >= -( -Ygritte )][( mislead(x,COLS * COLS) )],-( COLS ) - --rule(( y ))) : "One can not simply parse himself"
def protect(){
	dog;
	-foo(ROWS,Sansa)
}
var Jon = TABLE[( Sansa )][-protect() \/ COLS]
var Ygritte = mislead(Ygritte,COLS,rule(foo()))
var Stark = ( ( x ) )
assert betray(Hodor,destroy(0.37,COLS,( -( COLS ) ) == betray(6))) : "Fear cuts deeper than swords."
def TABLE[y][j] {
	-COLS;
	( destroy(-72 \/ TABLE[Stark][ROWS],TABLE[( Jon ) >= ---0.58][ROWS]) );
	( rule(( -330.48 ),protect(99)) )
}
def TABLE[84][k] {
	rule(betray(ROWS,( TABLE[Stark][-640.84 != -mislead(mislead()) != --( -( 99 ) ) \/ betray(0.4) < ROWS] >= ( COLS ) ) < -betray(-betray(bar(1,ROWS),COLS,-( 0.52 )) /\ ( TABLE[69][( -x )] \/ destroy(Arya,-( x > Stark ),Hodor < 1 > Stark) > TABLE[Jon][--700.66] ),---ROWS > Jon) != Jon),TABLE[betray(( -0.23 ),( COLS ))][protect(-890.6,28)]);
	TABLE[( mislead(-550.8) )][dog];
	--0.31 - x
}
def protect(){
	Sansa -= ROWS
}
def TABLE[( Arya )][i] {
	-0.05;
	Stark /= --1;
	if(-destroy(TABLE[foo(ROWS,1)][TABLE[--foo(-69)][dog] / -1],Sansa * COLS)){
	Hodor += -foo(-Arya) <= -470.57 - Arya + Sansa;
	if(-Sansa <= Stark /\ betray(--0.74,protect(Ygritte))){
	if(( Sansa ) \/ ( ( ( -0.76 ) ) <= ( -940.77 > foo(Jon + rule(0.5,dog) >= Stark == --480.02,-450.69,foo(1,protect(-32,( Sansa )),COLS)) ) / -0.27 )){
	x -= 350.1;
	-ROWS <= protect(-Hodor,Stark)
} else {
	y *= -Hodor
};
	if(COLS){
	if(0.34 <= ---72 - betray(betray(COLS != ( ( ( -0.11 ) / -1 ) )) / mislead(bar() != foo(),Jon) + 580.63)){
	dog += ( TABLE[betray(COLS,Arya)][-ROWS] )
}
}
};
	if(bar(ROWS < Jon,foo(COLS != Arya))){
	Stark -= TABLE[TABLE[( ( 13 ) )][-Arya / y]][y];
	-9 - ( -97 <= ( Ygritte ) )
} else {
	--670.211;
	if(( ( TABLE[ROWS][mislead(990,-68,0.15)] ) ) /\ TABLE[--( -15 )][( 0.14 )]){
	if(-ROWS){
	-0.29
} else {

}
} else {
	if(( bar(-1,-45,y) ) <= -TABLE[TABLE[-95][betray(COLS)]][( protect(Jon) >= TABLE[TABLE[Hodor][-ROWS]][( Hodor )] ) / ROWS]){

}
}
}
} else {
	if(ROWS){
	-dog;
	Ygritte /= mislead(y,49,foo(( ---26 == -Jon ) < Stark))
};
	0.98
}
}
assert COLS : "One can not simply parse himself"
var Ygritte = -8
def betray(dog){
	protect(-foo(-y) > ( -Stark ))
}
def TABLE[( ROWS )][i] {
	Sansa;
	ROWS
}
def TABLE[-890.8401][k] {
	Arya
}
def TABLE[Sansa][j] {

}
var dog = ROWS
def TABLE[mislead(-940.68)][i] {
	if(Ygritte){
	if(y){
	( 1 ) * mislead(-rule(),-betray(),1);
	-0.77
}
} else {
	if(Hodor){
	if(23){
	Ygritte -= -0.6 \/ COLS;
	Stark += 1
} else {
	x
};
	if(TABLE[( destroy(foo(bar(-Ygritte),ROWS,Hodor),( COLS ),TABLE[Arya][COLS]) )][betray(-ROWS - destroy() * ROWS,ROWS)]){

}
} else {
	foo(dog)
}
};
	if(0.21){

}
}
assert --Ygritte : "Fear cuts deeper than swords."
def TABLE[TABLE[Stark][x]][j] {
	Stark *= ROWS;
	y += -1;
	TABLE[--y][TABLE[( 0.59 )][TABLE[--0.98][-TABLE[-82][destroy(TABLE[-65][Sansa],-5)]]]]
}
assert -0.67 : "Nothing burns like the cold."
def betray(Stark,Ygritte){
	if(( y )){
	if(44 /\ ROWS - Stark){
	if(Hodor > -0.05 <= Jon > ( ( ( 0.1 ) ) ) /\ rule(0.19)){
	if(71){
	if(-13){
	COLS;
	COLS;
	Ygritte
}
} else {

}
}
};
	dog -= Ygritte
};
	if(COLS){
	-45 + TABLE[( ( rule(0.05 != foo()) + betray() > ( -foo() ) < -Jon ) )][Ygritte]
}
}
var Arya = Arya
assert -( -( Hodor ) ) : "One can not simply parse himself"
var dog = COLS != x <= ( 0.69 ) <= ( COLS ) * -0.72
assert ( --0.6 < Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(dog,Stark,Hodor){
	y -= --dog / Ygritte
}
assert foo(( TABLE[-( Stark ) - ( y < y ) \/ COLS][-0.6] )) : "Fear cuts deeper than swords."
def TABLE[COLS][j] {
	if(( ( -860.613 ) )){
	Arya += 550.161;
	Stark -= ---x >= Hodor
};
	x += COLS
}
assert TABLE[500.8117 <= ( mislead(protect(--62)) )][foo(destroy(-TABLE[-TABLE[0.89 == TABLE[y][COLS]][-TABLE[-0.36][COLS - ROWS]]][TABLE[--1][COLS] >= -7],( dog )),x)] : "What do we say to the Lord of Death?"
def foo(y){
	if(( TABLE[-rule()][-50.3811] == rule() )){
	Arya
}
}
var x = -( mislead(destroy(betray(1 > COLS,mislead(y,dog * -0.4),-2),( COLS )),-COLS,mislead(64 /\ -( ( COLS ) ) + ROWS / foo(COLS))) ) /\ ( 0.1 )
def TABLE[TABLE[dog][rule(TABLE[( Sansa ) / --protect(betray(COLS,-0.06,-x),TABLE[( Jon )][COLS],-63)][-( -32 ) == -TABLE[1][Jon] - -0.87 * 0.03 <= Jon == 970.17])]][j] {
	dog *= -42;
	if(TABLE[TABLE[TABLE[COLS][-Ygritte + -TABLE[--28][TABLE[dog - Jon][-foo()]]] - Sansa][Jon]][( -30 )]){
	-0.48
} else {
	protect();
	if(28){
	bar(( 270.7 < x ) /\ COLS);
	23;
	if(3){

} else {
	if(-TABLE[TABLE[y][( 0.56 )]][COLS] > TABLE[--Sansa][x]){
	bar(mislead(),Hodor,-Jon);
	if(TABLE[mislead(-rule(ROWS,( ( ROWS ) / rule() > ( 39 ) < 1 + 1 )) /\ ROWS,bar(x,dog))][-dog]){

} else {

}
};
	if(x){
	if(foo(Hodor,--foo(940.5345 != y - -( TABLE[destroy()][Hodor] <= 660.99 ),ROWS <= TABLE[ROWS][-0.01],x))){

};
	if(-25){
	if(protect(destroy(--TABLE[bar(ROWS)][( -1 )]))){

} else {
	dog -= --0.82;
	Ygritte *= -0.22;
	Ygritte -= protect(--1)
};
	---( -0.97 )
}
}
}
} else {

}
}
}
def bar(dog,Jon){
	( Stark )
}
def betray(Stark,Stark){
	1
}
def TABLE[Stark][k] {
	dog /= 0.31;
	y -= destroy()
}
def betray(){
	Stark -= ( destroy(1,-rule(rule(( -( 970.826 ) <= -1 ),destroy(TABLE[COLS][0.03],-1)))) )
}
var Arya = -( mislead(bar()) )
def mislead(x){
	Jon *= -1
}
def TABLE[( Jon )][k] {
	Arya /= COLS;
	Ygritte
}
def destroy(Ygritte,y,Hodor){
	( -mislead(Hodor,Arya,y) / -0.91 )
}
assert protect(-16,--ROWS) : "Fear cuts deeper than swords."
var Stark = protect(1,rule(-ROWS,foo(ROWS,Stark)))
def foo(Stark,Sansa){
	bar();
	Stark /= -rule(1)
}
def protect(Sansa,Sansa){
	90;
	if(-16){

} else {
	betray(protect(-1,-TABLE[TABLE[18][-TABLE[Jon][x != ( -foo(foo(-500.28,( 0.8 )),bar(protect(( Arya ) * x),-( ( COLS ) ),-( COLS ))) )]]][-( rule(( ROWS )) ) == ( 57 ) >= 33 * 780.3] /\ mislead(Ygritte,( ( -0.75 /\ destroy(--89 <= TABLE[Stark < ( protect(COLS - 2 == -COLS,COLS,ROWS) )][-0.76],Sansa) ) * Arya ))));
	y
}
}
def TABLE[-98][i] {

}
assert ( Jon ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Stark][i] {
	--COLS;
	( y );
	-( mislead(Hodor) ) /\ ( Arya )
}
def TABLE[--81][i] {
	if(y){
	if(-( -1 )){
	ROWS;
	if(( --destroy(COLS) >= destroy(( dog ),-Sansa) )){
	if(bar(-( -ROWS ) / 1 \/ Arya) == Hodor){
	COLS;
	if(betray(( TABLE[foo(betray(( ROWS ),ROWS,destroy(-0.75,( destroy(0.89,Stark,0.84) ))) / -31)][-TABLE[COLS][ROWS]] ),--ROWS,---mislead(-0.3) \/ ( COLS ) > betray(-12,ROWS) * ( TABLE[-y][foo(Hodor)] ))){
	if(500.64){
	if(--COLS + bar(( --( -betray(-530.503 >= -210.2633) ) / -Hodor * -770.5964 ) >= TABLE[-1][( x + -610.1053 / Stark * COLS > -TABLE[betray(Jon,TABLE[y][( -1 )])][( -( ( bar() * y ) ) )] )])){
	if(78){
	Hodor += 47
} else {

};
	-bar(( TABLE[( TABLE[Hodor][( ROWS )] ) * mislead(COLS,--0.58 \/ ROWS,( Arya ))][( Stark )] ),( TABLE[COLS][foo()] /\ Sansa ))
}
} else {
	if(( Arya )){
	dog;
	Hodor -= 80
}
};
	-1
} else {
	x += ( Stark );
	if(Hodor){
	( -0.86 );
	if(-mislead(--( --0.29 >= TABLE[betray(-Hodor,-Arya)][Hodor == ROWS] ),foo(Hodor))){
	if(Sansa){
	if(-510.811){
	( ROWS ) * bar(protect(( ( Arya > Hodor ) ) * --mislead()),( -780.32 ),Sansa * Ygritte)
}
}
} else {
	dog += ROWS;
	if(COLS){
	COLS;
	Jon /= x
}
};
	bar(TABLE[0.41][TABLE[( -58 )][ROWS]])
} else {
	-COLS;
	if(betray() * COLS){
	Jon *= Arya
} else {
	dog /= x;
	( -bar(1,-89) + foo(-0.33,--ROWS != x) )
};
	if(( TABLE[( -89 /\ destroy(bar(),bar(-21)) )][Ygritte] )){
	foo(-rule(-45));
	Stark /= -16;
	if(-0.6){
	if(destroy(x)){

} else {

};
	if(destroy() == ROWS){
	if(Sansa){
	if(-ROWS){
	y *= ( ( -0.21 > y ) );
	if(Jon){
	---0.07 /\ -0.56;
	if(--0.31){
	if(rule()){
	( 0.9 )
} else {
	1;
	-740.0101
};
	dog *= COLS
} else {
	Ygritte += rule() >= COLS /\ ( Sansa ) \/ protect(COLS,-350.1183 != betray(COLS,( destroy(( protect(y) ),630.572) ) / 0.9,protect(-Arya < betray() >= ( Stark ),destroy())),ROWS) >= 70.795;
	protect()
};
	if(mislead() == -Arya \/ destroy(-dog + TABLE[Ygritte][x] / ( dog <= x ) + ( -0.56 ))){
	-( rule(TABLE[-mislead(foo(TABLE[-Sansa / -ROWS <= COLS /\ betray(x)][-86],-Jon * destroy(destroy(-0.04,TABLE[( 0.88 == COLS )][Jon]),( ( ( ( dog ) ) ) ),foo(( ROWS ),-46 /\ y)) <= protect(Stark,-TABLE[Jon][( -570.797 )],53 /\ ( dog ) - y /\ protect(mislead(ROWS,ROWS,-0.13) /\ -380.8 < -1,Sansa,x)),0.58))][TABLE[( y / 1 )][620 / dog]],-destroy(( TABLE[COLS == 0.78][dog] ),( 28 ))) \/ Stark \/ COLS * ( ROWS ) * mislead(-1,TABLE[( destroy(TABLE[( Arya )][( ( TABLE[-COLS <= TABLE[COLS][Arya]][-( COLS )] ) )] > -11 /\ COLS /\ -mislead(),-700.097 + TABLE[( -ROWS \/ -0.67 )][y]) )][TABLE[Ygritte][( -560.1112 ) /\ Ygritte] < --( ROWS )],COLS) )
} else {
	Jon += 57;
	dog -= -mislead(destroy(89,( 0.09 )),Sansa * -88)
}
} else {
	( ( Arya ) );
	y += ROWS;
	Hodor += ( COLS == ( x - Stark ) )
}
}
} else {

};
	-( ROWS )
} else {
	( ( -destroy(0.6) == -bar(( y )) ) <= TABLE[-0.63][rule(protect(foo(rule(),---TABLE[720.57 - ( -26 )][-0.29] != COLS,bar(Sansa) \/ rule(( dog ) < -protect())),COLS,-Stark) <= 1)] )
}
} else {
	TABLE[-x * Jon][-Sansa]
}
}
}
}
} else {
	x *= -x;
	if(10){
	Ygritte += ( 57 );
	( ROWS )
} else {
	if(( 1 )){
	COLS;
	if(( -x ) >= dog){
	if(foo(-destroy(-30,-( -y ) /\ ( ( -0.36 ) )),Jon)){
	if(( -protect(-80.936,Arya) / foo(--84 == Hodor) - ROWS )){
	if(dog){
	if(( ROWS )){
	-1
} else {
	x -= dog > 1 * ( ( -( ( TABLE[( y )][( ( 22 ) )] <= COLS ) ) + 1 /\ ( -750.2 ) ) <= --81 );
	dog * ( ( ( 0.22 ) ) ) / -dog;
	--rule()
};
	if(protect(ROWS >= rule(protect(Stark,destroy(45),( ( ( Ygritte ) ) )) <= TABLE[x][protect(--55)],betray(ROWS,COLS)),( -Stark ),380.374 < TABLE[-bar()][mislead()])){

};
	-360.7 / ( Stark ) - ( TABLE[-0.8][Jon] )
} else {
	Sansa /= 310.81
}
};
	if(---450.4 - destroy(( destroy(betray(COLS,bar(( -dog ),Jon < ( -Hodor ) / Jon * ROWS)),( Sansa ),destroy(COLS,62)) ),Sansa,COLS)){
	if(-TABLE[mislead(-1,0.11)][Ygritte < COLS]){
	Jon -= betray(( COLS ),bar(COLS,COLS > -90,Jon / -COLS < 0.79))
};
	x += destroy(( ROWS ));
	( -betray(Hodor,81 / destroy(-protect(Arya),TABLE[mislead(betray(( mislead(Ygritte,-56) < ( ( -( -1 ) ) \/ -0.15 ) ),Stark))][-1 > TABLE[( Ygritte >= ( TABLE[-COLS - -61 < 5 /\ COLS + TABLE[0.36][0.33] >= 550.7][Stark] ) != ( COLS * TABLE[COLS][COLS] ) )][COLS /\ ( 200.236 )]])) ) + betray(-89 - betray(1,rule()) - ( -14 ) /\ COLS,0.2) / ( dog )
};
	if(0.34){
	if(( mislead() )){
	TABLE[y][0.24];
	mislead(1)
};
	if(0.88){
	if(( -22 )){

} else {
	if(rule(COLS)){
	if(0.34){
	Ygritte *= 0.03;
	Ygritte += protect(-1 /\ TABLE[Ygritte][destroy(-0.9 == -bar(),( -0.73 ) == Arya,bar(Stark) - Jon / -Jon \/ ( ( -84 - ROWS - ( -0.69 ) ) ))],rule(Jon))
}
};
	-0.34
}
}
}
}
}
} else {
	Jon -= mislead();
	Sansa -= COLS
};
	Stark /= -85;
	betray(-0.77,-0.49)
}
};
	if(COLS){
	if(COLS){
	-88 == -7
};
	ROWS * TABLE[Arya][Sansa];
	-Ygritte
}
} else {
	if(Arya){
	Jon -= destroy() / y;
	( ---TABLE[COLS][-COLS] * 700.32 < Jon )
} else {
	x += mislead()
}
}
} else {
	if(Ygritte){
	1;
	bar(280.629) / 1
};
	Arya *= Hodor /\ -Ygritte != TABLE[-56][Stark]
}
} else {

}
}
assert betray(y) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -440.79 : "One can not simply parse himself"
var y = -( 54 > Stark != ( ROWS ) \/ dog <= ( -betray(-50 * -ROWS >= ( protect(--1) )) ) )
assert ( --Arya ) : "Fear cuts deeper than swords."
def destroy(dog){
	if(720.905){
	Stark *= -( ( x / COLS ) <= 0.92 );
	Stark *= ( Hodor ) > dog < x
};
	if(( Jon )){
	if(( mislead(TABLE[0.78][Hodor]) )){
	if(rule(y,Ygritte)){
	( Sansa ) < ( ( -( 92 + y ) ) );
	if(y){
	-y;
	( rule(30,55) );
	if(COLS){

} else {
	foo(( ( rule(foo(-93 / rule(destroy(-ROWS,bar(( -rule(-930.29) ),Sansa,COLS),( ROWS )),( Ygritte != -340.61 ),-ROWS) /\ foo(COLS,y)),destroy(COLS,( ( dog ) )),0.56) ) ),Arya);
	x -= foo(( COLS ),x,bar())
}
}
} else {
	if(foo()){
	if(dog){
	y -= ROWS
};
	Stark;
	-890.118
} else {
	43;
	Hodor -= COLS;
	if(TABLE[foo(ROWS)][-0.33 < 59]){
	Sansa /= 0.06
} else {
	Hodor *= COLS;
	if(-( destroy() )){

}
}
};
	if(60){
	if(-( y )){
	if(ROWS * ( Sansa ) != ----COLS){
	-( ROWS );
	Ygritte /= x
} else {

};
	if(-y){
	bar(( ( Jon ) ));
	Arya /= Jon
};
	Jon -= -rule(( Sansa ),rule(betray(mislead(destroy(x,Stark),rule(40,destroy(( Jon ))),( 14 ) / protect(Hodor,0.45)),-60,COLS),0.19,COLS))
}
}
};
	if(0.98 < -ROWS * -840.54){
	-1
} else {

};
	if(-TABLE[Ygritte][Arya - TABLE[-( -mislead(COLS / bar(--rule(Hodor,Sansa < -11),-protect(( Arya ),TABLE[foo(destroy(-0.66,( ROWS )),( protect(--1,-( Hodor )) ))][ROWS],dog),-x) <= bar(),betray(( 64 ),Jon,( ( ( y ) + 0.94 ) )),1 / destroy()) )][-0.45]] * x){

} else {
	bar(( ROWS ));
	if(25){
	Jon *= COLS;
	Hodor /= ( mislead(Arya,COLS) );
	y += bar(rule(foo(---0.43),( foo(mislead(-1) + ( Stark ) <= ( -0.93 ),---55,TABLE[-0.88][-( x )] != -0.65) )),COLS,-1 /\ ROWS > -COLS == ROWS)
}
}
};
	TABLE[ROWS][Jon]
}
}
assert mislead(( TABLE[( TABLE[0.64][-( destroy() )] )][Stark] )) : "Winter is coming"
def TABLE[protect(72,( COLS ) - ( ( -390.979 ) ) == ( ROWS ))][j] {
	Hodor;
	rule()
}
assert x : "Fear cuts deeper than swords."
def mislead(Hodor,Arya,y){
	if(Jon){

};
	Arya -= -( COLS )
}
assert --280.85 : "What do we say to the Lord of Death?"
def destroy(Jon,Arya){
	-91;
	if(-97 \/ protect(-64)){

}
}
var Jon = ROWS > 11
def TABLE[-Jon][j] {

}
var x = COLS
var x = -COLS
def TABLE[Hodor][j] {
	if(( -( COLS ) )){

} else {
	if(1){
	if(TABLE[-0.76][ROWS]){
	if(Stark){
	if(Ygritte){
	Stark -= ( -44 );
	x /= TABLE[-0.79][bar(0.69 == ( x ),Hodor,0.29 <= -( x ))]
} else {
	Stark /= mislead()
};
	Jon += ( protect(Ygritte != ( foo(0.63,dog,( bar(-1) - 480.362 != dog )) ) / y) )
};
	Sansa /= Sansa
} else {
	if(( -COLS + COLS )){
	if(TABLE[Hodor][-( Sansa )]){
	TABLE[-Jon][y]
} else {
	if(-1){
	if(77){

};
	Hodor /= foo(rule(),( --950.9 ));
	dog /= destroy()
}
};
	Jon += -Hodor
};
	Stark /= -betray(bar(TABLE[mislead(dog)][Jon],-19 /\ 0.17))
};
	if(-destroy(ROWS) - ( -bar(Sansa > TABLE[rule(mislead(-rule(betray(-protect(75 \/ -0.31) >= rule(( --1 )),COLS,COLS))))][ROWS] != ROWS,( ( foo(-protect(-( ROWS )),protect(x),COLS) + dog ) )) ) /\ protect(foo(mislead(-1,--110.8 >= foo(( bar(Hodor,( rule(0.01,COLS > TABLE[Arya][Hodor],Arya) ) \/ -mislead(rule(protect(( ( ( 37 ) ) )),( foo() )))) ),( destroy(-0.71) )),Sansa)) >= Arya,TABLE[( rule(0.3 \/ betray(Stark)) ) >= COLS][( -48 )],foo()) / --( --( -ROWS ) ) + ( protect(Sansa) ) >= ( TABLE[Jon][protect(( Ygritte ) < y,-1)] )){
	if(x){
	dog -= y;
	Jon;
	COLS
} else {
	Jon *= -destroy(foo(-43),bar(x,Stark)) != ( ( ROWS ) );
	-y
};
	Jon /= 1
} else {
	if(---0.8 >= y){
	dog -= betray()
}
}
}
};
	Ygritte /= betray(-1 /\ -0.23) <= ( COLS )
}
def TABLE[( -ROWS != ROWS )][k] {

}
def TABLE[-0.16][i] {
	mislead(-COLS);
	Hodor -= bar(TABLE[y][250.8912],( Jon ),ROWS);
	if(COLS){
	if(( Jon )){
	if(TABLE[( -90 )][( ROWS )]){
	( betray() \/ x ) \/ ( bar(-betray(bar(betray(ROWS /\ y) * ROWS),protect(-TABLE[-protect() - dog][--TABLE[-dog][( destroy(-0.23,y) <= foo(ROWS / -1) )]])) <= Hodor) != betray(betray()) )
} else {
	-0.17;
	if(-TABLE[dog][dog]){
	if(COLS){
	( TABLE[( rule(1,betray(destroy(-0.37,( -( -0.21 ) >= -0.71 )) + 690.6),COLS) )][1] );
	dog /= -( ( ( betray(Hodor) ) * TABLE[destroy()][( 1000.056 )] ) );
	if(28){
	y *= -COLS - 0.9
} else {
	Stark /= -Sansa
}
} else {
	dog += COLS;
	( ( Ygritte ) )
}
}
};
	if(Jon){

} else {
	TABLE[( destroy(y) )][0.89];
	bar(mislead(-0.52,( mislead(TABLE[ROWS][Arya] / ROWS < TABLE[-0.49 - ( ( Sansa ) ) + Arya][mislead(bar(Arya,( TABLE[foo(Arya,-COLS)][-x] )),Sansa)] - Ygritte + ( y ),x) ) /\ -89,TABLE[Hodor][--420.1]),COLS)
};
	if(COLS){
	Sansa -= foo(-protect(y),-0.99,-97);
	-COLS;
	if(( COLS )){
	Arya -= Jon;
	if(( -Arya != -0.72 )){
	if(-dog){
	if(0.79){
	ROWS;
	mislead(x)
}
};
	foo();
	if(-1){
	( mislead(-1 <= ( -( 95 ) - 0.43 <= ( y == -0.68 ) ) > ( ( ---88 ) ) != ( -320.0291 ),x) )
}
} else {
	-( ROWS > ( TABLE[( betray(15 == TABLE[rule(-5 - ( ROWS ) - Jon /\ 16 == betray(TABLE[TABLE[( -86 ) /\ ( -Ygritte )][2]][( 0.01 ) == ( protect(ROWS) )] - Hodor == protect(TABLE[( destroy(Sansa,Jon) / -460 )][betray()]) /\ -rule(( y ) \/ -( y )),dog,destroy()))][-0.28],y / Sansa,TABLE[ROWS][Arya * foo(0.74)] < ( --0.86 ) /\ -0.17 - -protect(COLS,( -( 0.07 ) > COLS )) / TABLE[-98 \/ Arya][mislead()]) )][betray(-rule(-TABLE[rule(rule(bar(--( destroy(-Ygritte,protect(betray(-0.23,y),bar(Hodor,-61,( -800.78 )),Jon)) )),-protect(),-( y )),-65)][x]))] ) <= ( ( ( betray(ROWS) ) ) ) );
	Jon == -71;
	Stark /= TABLE[COLS][Stark]
}
} else {
	COLS;
	( COLS )
}
}
};
	y += -COLS * COLS;
	if(0.81){
	if(1 + mislead(mislead(y < ( Arya ) == TABLE[-Sansa > ROWS][33 > -85],-1))){
	Stark /= rule(TABLE[51][destroy()],-0.11);
	if(Stark){
	Ygritte /= -Jon;
	Sansa -= Sansa
} else {

}
} else {
	if(-270.404){
	if(-0.33){
	-0.3;
	if(( ---0.25 )){
	Sansa *= x
}
};
	if(( Ygritte )){
	Jon += --Hodor == ( COLS ) != ( Ygritte == Ygritte );
	if(95){

};
	if(rule(Hodor)){
	x /= ( 1 );
	if(betray(-ROWS)){
	COLS
};
	Ygritte -= bar(( 0.67 ),ROWS,ROWS >= ROWS)
}
} else {
	mislead()
};
	dog *= Arya
};
	if(Hodor){
	Ygritte *= -bar(x,( -bar(( -Hodor + mislead(betray(( TABLE[( 1 ) /\ ( ( x ) * ( -14 ) > -( ( x ) ) /\ COLS )][( ROWS > TABLE[-TABLE[ROWS][Sansa]][( Hodor )] )] ),-( foo(x) ) * -160.269 /\ destroy(ROWS) \/ destroy(( -TABLE[COLS][( ( ( ( --14 ) >= destroy() ) <= rule() ) < TABLE[-1][( 0.53 ) == bar(( COLS ),2)] * -0.55 - rule(-0.82,( rule(ROWS / Hodor,--dog) )) ) \/ foo(Ygritte - bar(-Jon))] / -TABLE[-ROWS == Hodor][bar(-1,( COLS ) != 0.48)] )))) ),foo(( --y ),Stark)) <= -0.46 \/ COLS ));
	if(-1000.9){
	Arya
} else {
	if(( ---ROWS < protect(ROWS != COLS * ( TABLE[Hodor > COLS][destroy() \/ 83] )) - foo(bar(bar(17 > 0.1,93)),protect(),destroy(-( Hodor ) != 37,-( -COLS ),-Stark)) >= destroy(Jon) ) + ( TABLE[( Arya )][-ROWS] + -350.9816 ) * betray(--0.83)){

} else {
	Arya *= foo(foo(43,-protect()),Stark,-50);
	Stark *= Ygritte
};
	x
}
};
	x / ROWS * -0.54
}
} else {
	if(-79 != --( -bar(-Sansa) )){
	if(-Sansa){
	protect() \/ rule(--0.45 != y,Sansa)
} else {
	Sansa /= ROWS;
	if(mislead(destroy(bar() == y + ( -48 ) - foo(dog,82),-20.5,Jon)) == Ygritte){
	COLS
}
}
} else {
	dog += -COLS >= foo(bar(mislead(),-COLS)) == Hodor;
	Jon;
	-0.42
};
	foo(--1,destroy(TABLE[COLS][ROWS]) < ( Hodor ),320.7)
}
}
}
def TABLE[-0.4 > Ygritte][j] {

}
assert Arya : "Nothing burns like the cold."
assert ( x ) : "One can not simply parse himself"
assert -ROWS : "One can not simply parse himself"
def TABLE[--1][i] {

}
var x = -dog
assert ( ROWS ) : "One can not simply parse himself"
def TABLE[dog][k] {
	Hodor /= COLS
}
def foo(Jon,Stark){
	if(----45 /\ -1 > bar(Stark,betray()) == COLS < -0.46 /\ TABLE[--0.25 >= ROWS][mislead(COLS)]){
	if(bar()){
	COLS;
	Ygritte += Arya
} else {

}
}
}
def betray(Ygritte){
	betray(--Ygritte /\ mislead(TABLE[Ygritte][Arya]))
}
def TABLE[protect(rule(84) <= ROWS,Arya) <= 26 / Jon][k] {
	Sansa *= betray(( protect() ));
	ROWS / ---y * betray(COLS) > -1 - x
}
var x = dog - Hodor
var dog = -Ygritte
def destroy(dog,Sansa){
	rule(x,betray(Stark,rule(( Jon ))));
	if(-270.24){
	Jon *= -foo(( ROWS ) <= -Stark \/ ( -( -TABLE[TABLE[--0.69][( 0.61 )]][Sansa] >= ( rule(mislead(-0.37,Ygritte)) ) ) ),-0.89)
}
}
def protect(Sansa,Hodor){
	Stark *= ROWS
}
assert TABLE[74][( ROWS )] : "Nothing burns like the cold."
def destroy(y){
	if(( Arya )){
	-78;
	Arya /= ( ( -Ygritte * COLS ) < TABLE[COLS / betray(Arya,protect(mislead(64,Jon)),-46)][rule(-ROWS,Hodor) > 31] \/ -0.3 * COLS >= TABLE[Sansa][-0.22] );
	Jon /= TABLE[370.977][78]
}
}
def TABLE[-1][j] {
	( foo(-0.07) )
}
var x = ( foo(99 == y > -0.28,mislead(-( --1 >= -COLS ),( ROWS ),-120.733)) )
var Jon = -0.78
assert COLS : "Fear cuts deeper than swords."
assert ( ( -0.7 ) ) : "Winter is coming"
def foo(){
	if(Arya){

} else {

};
	y *= foo(y);
	65
}
def protect(Ygritte){
	COLS / Ygritte;
	Sansa
}
assert Sansa : "One can not simply parse himself"
def destroy(Ygritte){
	if(87){
	-destroy(-0.9 == ---1 < ( Jon ) /\ -1)
}
}
var dog = ( COLS )
assert y : "What do we say to the Lord of Death?"
assert mislead(-0.72) : "Winter is coming"
assert destroy(-Hodor,rule(-( betray(-TABLE[( ( --1 ) )][57]) ),( --1 ) == ( Arya )) == --protect(Arya,---73),COLS >= COLS) : "One can not simply parse himself"
assert 960.073 : "Winter is coming"
def protect(Jon){
	rule(ROWS);
	x += ( -( -COLS /\ Arya < 0.86 \/ dog ) )
}
assert -( Sansa ) : "Nothing burns like the cold."
def betray(y){
	y /= destroy(Arya,x) < -( ROWS );
	Jon
}
def rule(Arya,Jon){

}
assert Hodor /\ -( protect() ) : "Fear cuts deeper than swords."
var Jon = rule(( 990.5144 ),COLS)
var Hodor = rule() \/ TABLE[-0.87 - ROWS][x]
def protect(x){
	Ygritte /= 0.91;
	if(COLS){
	if(-61){

} else {
	Stark += 1;
	if(rule(( ( y ) ))){
	Jon;
	-1
}
}
} else {
	ROWS;
	if(( ROWS ) != Jon < x * -920.41 != ( y )){
	-( y * COLS )
}
}
}
assert TABLE[( -0.81 )][-39 /\ Stark >= mislead()] \/ protect(mislead(Jon)) \/ ROWS : "What do we say to the Lord of Death?"
assert TABLE[-1][( ( Arya ) )] : "Nothing burns like the cold."
def mislead(){
	-0.03;
	if(Ygritte){
	-75
};
	if(( 580.575 )){
	( -0.83 );
	-Ygritte
}
}
def mislead(y){
	TABLE[( destroy(x,destroy(( -( -ROWS ) ),TABLE[( Ygritte )][TABLE[( dog - 1 \/ betray(Jon,-ROWS) )][( COLS )]],-( Arya )) == foo(COLS /\ TABLE[Arya][( bar(TABLE[Jon][ROWS]) )]) - TABLE[TABLE[( TABLE[Arya][foo(COLS,dog)] )][Sansa != betray(-( COLS ) / dog > --( TABLE[y][bar(foo(( ROWS ) <= ROWS,Ygritte) == -44 - TABLE[4][--Sansa])] ),( COLS ),Arya)]][-0.9]) )][( Stark )] \/ Arya;
	-( --Arya >= Hodor );
	y += -ROWS
}
def TABLE[mislead() == TABLE[TABLE[y][--0.66]][-0.86]][k] {
	-betray(TABLE[TABLE[protect()][ROWS] / ( -COLS ) != Stark][protect()]) \/ bar(TABLE[destroy(0.37)][ROWS],TABLE[Arya \/ -0.41][( ( COLS ) )]);
	-( -COLS )
}
assert mislead(COLS - ---x /\ ( 0.03 ) < ROWS / ( ROWS ),1) : "Winter is coming"
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( -( rule(Sansa /\ COLS) ) ) ) : "Winter is coming"
def TABLE[-55][k] {
	mislead()
}
def mislead(Ygritte){
	if(ROWS){
	if(-Arya){
	x *= y
} else {
	Hodor -= -89
}
};
	( -foo() )
}
assert -26 : "Fear cuts deeper than swords."
assert COLS : "One can not simply parse himself"
def betray(Hodor,x){

}
def destroy(Arya,Arya,Stark){
	if(Sansa){
	if(-betray(( betray(protect(Sansa == bar(-destroy(( -47 ),-dog) == ( 81 ) > Hodor) <= foo(ROWS,430.6535,( ROWS )) \/ betray(( destroy(86 + Stark) )) \/ foo(ROWS,ROWS,Ygritte) == -betray(),betray(-TABLE[-bar()][( -54 )],TABLE[TABLE[ROWS][-Hodor - Arya]][( foo(-94,0.99 - 0.59,y) )],Ygritte))) ) + TABLE[COLS][TABLE[64][mislead()]],TABLE[0.4][( COLS >= COLS )])){
	Ygritte -= --93
};
	Stark /= TABLE[ROWS][( TABLE[COLS][destroy(( bar() ))] )];
	if(( -dog ) - TABLE[Hodor][ROWS]){
	if(-TABLE[protect(0.42)][-1]){
	( TABLE[COLS >= ( ( COLS ) )][-y] )
} else {
	Stark /= -( ROWS )
};
	if(Sansa){

} else {
	Jon /= TABLE[protect(-0.77)][ROWS];
	-x != Hodor \/ -0.03
}
}
} else {
	Arya -= Jon;
	Hodor -= ROWS;
	Hodor -= ( 69 )
}
}
assert -Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Arya){
	Jon *= mislead(( Stark ),dog < foo(foo(-( ( -0.91 ) ))) == Jon >= Stark,--19);
	if(0.92){
	x += x;
	( ( ( ( TABLE[x][TABLE[-( betray(( foo(dog) ),x < betray(rule(-TABLE[( -6 )][0.26] + 32 \/ -betray(810.32),mislead(TABLE[Hodor][mislead(rule(ROWS - COLS),x)],x != --61,-1),45),0.29),betray(Arya)) )][foo(---rule(0.18),( ( ( destroy(( ROWS )) ) ) ) - -( COLS ))]] ) ) / 0.29 ) )
};
	if(-Stark){
	if(x /\ ( Ygritte ) /\ foo(foo(COLS))){
	--580.97 / ( ( -betray(-0.89) ) != 0.01 ) + 80;
	x += -COLS
}
}
}
var dog = ( TABLE[-COLS][Jon /\ ROWS] )
assert COLS - y : "Winter is coming"
def TABLE[-1][i] {
	if(--72 == 42){
	foo(( Sansa ),y,COLS);
	-TABLE[Sansa][dog > ( destroy(y <= 450.78,TABLE[( rule() >= Hodor )][0.82],300.4239) != Hodor ) + COLS];
	Arya -= Jon
} else {
	if(( x )){
	x /= bar(foo(COLS));
	if(ROWS){
	if(ROWS){
	Arya /= ROWS
} else {
	if(--Arya){
	Jon *= COLS;
	if(-94 != ( dog ) != foo()){
	if(--rule(0.27)){

}
}
} else {
	if(Jon){

}
}
}
} else {
	TABLE[1][bar(--Sansa)];
	if(ROWS){
	dog *= ROWS;
	if(Ygritte){
	rule(y);
	x += Ygritte
};
	580.87
};
	TABLE[mislead(( -mislead(-dog) /\ -0.84 + ROWS >= ( ( -0.29 ) ) /\ mislead(37 * -20 <= Ygritte,ROWS) <= Sansa ),0.75)][( x )]
}
}
}
}
var Sansa = -ROWS
var Jon = ( 210.47 )
def destroy(Sansa){
	Jon /= dog;
	TABLE[( -TABLE[-( Stark )][foo(COLS,Ygritte,-Ygritte)] )][570.75 /\ -( -( mislead(130.71 / Hodor,foo(( ----Hodor ),( y )),Sansa) ) )]
}
def TABLE[dog][j] {
	y /= ( Arya )
}
def TABLE[-destroy(-TABLE[protect(Stark,Ygritte)][mislead(0.09 <= COLS < --0.76,dog)],-TABLE[Jon][foo(-mislead(81) != -0.58 >= 13 >= -1,-ROWS)])][i] {

}
def bar(Jon){
	-y <= Arya;
	if(Arya < ROWS){
	protect(-0.59 / Hodor);
	--TABLE[Arya][( foo(( -0.27 )) )] > -72;
	ROWS
} else {
	if(-COLS){
	Jon -= rule(Hodor);
	-0.3
};
	if(COLS){

}
}
}
def destroy(Ygritte,Ygritte){
	Hodor /= 630.005;
	if(-1){
	if(-0.69){
	0.1
} else {
	COLS
};
	Arya *= x \/ -0.17 >= COLS
} else {
	Stark;
	if(ROWS){
	y -= Stark
} else {
	y;
	if(COLS){
	( TABLE[TABLE[COLS][protect(COLS != -COLS == -( 1 )) - TABLE[Hodor][y] == mislead(( -protect(x,COLS,TABLE[-( TABLE[-Ygritte][ROWS] )][x] > foo(destroy(-COLS <= TABLE[-35][( destroy() )] == ROWS),( Hodor ) >= foo())) ) <= ( ROWS ) < COLS)]][-0.8] )
}
}
}
}
def TABLE[TABLE[( ( 0.13 ) )][y + rule(( COLS ),-37) \/ ROWS]][j] {
	destroy();
	( -240.6 <= -bar(rule(-ROWS,( dog ),-mislead(TABLE[70 - 44][---( mislead(Ygritte,ROWS,x) /\ x )]) != Hodor /\ 910.36),Hodor) > mislead() - bar() > TABLE[-54 /\ ( mislead(67,bar(( COLS ),destroy(( TABLE[( 27 != ( ROWS ) > -0.9 )][( ( 1 ) )] ),Jon,COLS))) * ROWS <= -1 )][TABLE[-foo(foo(rule(mislead(1),ROWS,-COLS)),-0.23) > Sansa][( ( TABLE[Ygritte /\ ROWS /\ ( ( rule(-1,TABLE[destroy(COLS,dog < Arya) * -1][( betray(( foo() < ( -( ( betray(-ROWS) ) <= -( -( -TABLE[Hodor][foo(-15,mislead(-rule()))] ) ) ) ) ),-47) )],0.65) ) )][COLS] == betray(Hodor) + 0.17 ) )]] )
}
def mislead(x){
	if(dog){

} else {
	if(mislead(-protect(rule(( -210.461 ))),0.37 <= ( ( destroy(ROWS,betray()) ) + ( x ) + -( betray() ) < Stark <= -71 >= ( ( ( Arya ) ) - ( ( 1 ) ) >= y * 410.1541 ) ))){
	if(ROWS){
	dog *= -( TABLE[-53][betray(protect(destroy(mislead(-160.08)),COLS))] );
	if(x){
	370.46;
	Stark -= Stark
}
} else {

}
} else {
	y *= -y
};
	TABLE[-0.53][x];
	Ygritte -= ( COLS )
}
}
def TABLE[49][j] {
	Arya *= TABLE[0.51][-Arya] != -mislead(--bar());
	0.64
}
assert 0.12 : "Nothing burns like the cold."
def TABLE[Ygritte][j] {
	x += -500.2;
	TABLE[-Stark][-1]
}
var y = TABLE[( ROWS )][TABLE[COLS][0.2]]
def protect(){
	if(-0.66 /\ ROWS){
	betray()
} else {
	Sansa *= protect(( ROWS /\ 84 ),dog);
	0.05;
	TABLE[( -Stark )][ROWS]
}
}
def bar(Arya){
	if(-COLS){
	Jon -= betray(rule());
	Hodor -= Hodor;
	Jon += Sansa
} else {

};
	if(( COLS )){
	Sansa -= ( Hodor );
	bar(y);
	Arya -= COLS
} else {

}
}
var Ygritte = 330.602
var dog = rule()
var Arya = 73
var y = ( mislead(protect(( 0.54 ) - -11)) )
assert --510.948 /\ Hodor == -ROWS : "What do we say to the Lord of Death?"
assert Arya : "Nothing burns like the cold."
def destroy(y){
	-( ( -18 / -COLS ) );
	Arya += y
}
def betray(Jon,x){
	x += --750.161;
	-73 /\ -Stark;
	if(-Ygritte){

}
}
def TABLE[( -Stark )][j] {
	Arya *= ----( -Ygritte /\ -foo(( 83 ) == -1) /\ destroy(dog > ( -880.4988 ),Jon) );
	TABLE[foo(ROWS)][COLS] < foo()
}
var Sansa = Ygritte
var Hodor = -450.17
assert -0.1 : "One can not simply parse himself"
var dog = ( -1 \/ protect() < -6 )
var Arya = mislead(Sansa)
assert -( bar(( -Hodor ),ROWS) ) : "Fear cuts deeper than swords."
var Arya = rule(ROWS,-1)
def destroy(Jon){
	dog -= ----( -0.39 * --340.22 * --Arya < ( Arya ) )
}
def TABLE[destroy(-67)][k] {
	x += ROWS;
	x /= 74;
	if(-ROWS){
	if(y){
	Sansa -= COLS
}
} else {
	if(1){
	Hodor *= ( ( Hodor ) )
} else {

}
}
}
def TABLE[( --COLS )][k] {
	dog *= TABLE[COLS][Sansa <= mislead(-( -92 ),---COLS,-350.01) == ROWS];
	Ygritte -= ROWS;
	if(protect(foo(destroy(betray(ROWS,-dog),mislead(--640.74)),betray(-52)))){
	x -= destroy(betray(0.98 <= destroy(0.86)),TABLE[ROWS][Ygritte <= ( ROWS ) + ( TABLE[( ROWS )][bar(-42 < ( -COLS == protect(dog,ROWS != --1 * ROWS,-0.92) /\ -140.0946 ) < --Sansa,510.6) < COLS] )],Arya);
	if(( 62 )){

}
} else {
	if(ROWS / ( dog ) \/ protect(57,Ygritte,Arya) == -COLS){
	if(-240.8496){
	y -= TABLE[0.93][ROWS]
} else {
	if(Arya){
	if(( -0.08 ) \/ -Jon >= -Sansa){

};
	if(-y >= -ROWS != ( -( -47 ) )){
	x += destroy(rule(( 36 != -1 ),( -31 ) > -Stark)) / 0.55
}
} else {
	bar(COLS,foo() != -61);
	if(Sansa){
	protect()
}
};
	Arya *= Arya
};
	if(-x + ( ( 92 ) )){
	if(TABLE[COLS][-0.88]){
	if(x){
	Ygritte
} else {
	if(ROWS * -84){
	Stark *= 0.87
};
	Sansa += mislead(-mislead(0.16,19,TABLE[-foo(ROWS,rule(-0.61),--( betray(--0.98 + ( ( ( ROWS ) ) != destroy() ) > Sansa) )) == x < 64 <= dog <= TABLE[ROWS][( 54 ) * Stark <= rule(-0.13,( 900.723 / 550.967 ) <= Ygritte) > 19]][TABLE[--99][Hodor]] <= Sansa * ( 1 ) + protect(700.8853)),( foo(-19,( TABLE[Ygritte > TABLE[--500.709][COLS < Ygritte * Hodor / betray(-TABLE[-protect(-Jon >= y > -92)][( ROWS ) < Jon /\ Stark > -TABLE[( Jon )][Ygritte] /\ --Hodor > -COLS] < ( ( 160.097 ) ),rule(protect(-1) * ( bar(Stark,( COLS ),-ROWS) ),TABLE[x][Stark <= Hodor],-0.11)) < Hodor]][betray(( y )) + ( ( Ygritte ) )] ),COLS <= mislead(( 88 / -0.92 ))) ),COLS)
};
	Sansa -= dog
} else {

};
	( -76 );
	if(mislead(1)){
	Stark += x
} else {
	if(90){
	if(( TABLE[-28][ROWS] )){
	dog *= betray(destroy(-0.6,protect(( Hodor ),foo(protect(-0.71),( -foo() - -74 ) < --( ( ( ( TABLE[-0.1][--1 > TABLE[-( protect() )][COLS] != rule(bar(y,( -betray(--1 == Sansa) - -Stark == --( -COLS \/ --Sansa \/ --0.07 ) ) /\ Hodor))] ) ) ) ) /\ TABLE[0.67][-Sansa] /\ dog),betray())),rule(foo(protect(foo()),-Hodor)));
	Hodor *= betray(( destroy(-1) ));
	if(630.4){
	-Ygritte;
	Hodor *= dog
} else {

}
} else {
	-dog;
	Sansa /= -( ROWS ) /\ y
}
};
	-0.79
}
} else {
	if(Stark){
	Arya += bar(Jon > destroy(ROWS,x) < ROWS);
	COLS
}
}
};
	( TABLE[( TABLE[-ROWS][-COLS \/ Arya] )][bar(rule(),x <= mislead())] \/ --44 >= -400.518 );
	y *= Jon >= -1
}
}
def TABLE[-82][i] {

}
assert Hodor : "Winter is coming"
def protect(Sansa,Jon,Jon){
	-98;
	if(Sansa){
	if(--( 1 + COLS )){
	( 76 );
	-0.52
}
};
	if(--Hodor){
	x -= -( -620.714 != ROWS );
	( ( TABLE[Stark][destroy(betray(x)) /\ --0.54] ) * TABLE[--90.6][1] )
}
}
def mislead(Ygritte,Arya){
	COLS
}
